{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! It's never been a better time to learn electronics and programming. The cost of computing components keeps decreasing, and many companies are making it easier and accessible (Adafruit, Sparkfun, etc). Couple that with the rise of Python, and the barriers to entry continue to get lower and lower. Introduction This guide is for people new to Adafruit and to electronics. The focus is on the Adafruit ecosystem Roadmap for people new to the Adafruit ecosystem. Review Adafruit lingo and branding. This website does not cover electronics in general -- Along the way some electronics is discussed, but this website does not cover topics in depth. As much as possible, links to additional resources or references will be provided. Note I am not affiliated with Adafruit in any way, and I am not being paid by Adafruit. I'm just a huge fan of Adafruit. I wrote this guide because I haven't seen anything on Adafruit similar to this. Getting Started","title":"Home"},{"location":"#welcome","text":"It's never been a better time to learn electronics and programming. The cost of computing components keeps decreasing, and many companies are making it easier and accessible (Adafruit, Sparkfun, etc). Couple that with the rise of Python, and the barriers to entry continue to get lower and lower.","title":"Welcome!"},{"location":"#introduction","text":"This guide is for people new to Adafruit and to electronics. The focus is on the Adafruit ecosystem Roadmap for people new to the Adafruit ecosystem. Review Adafruit lingo and branding. This website does not cover electronics in general -- Along the way some electronics is discussed, but this website does not cover topics in depth. As much as possible, links to additional resources or references will be provided. Note I am not affiliated with Adafruit in any way, and I am not being paid by Adafruit. I'm just a huge fan of Adafruit. I wrote this guide because I haven't seen anything on Adafruit similar to this. Getting Started","title":"Introduction"},{"location":"contact/","text":"Contact Us Questions, comments, suggestions or error corrections I hope you found this website to be helpful. If you have additional questions, comments, suggests or error corrections, please feel free to send feedback. Option 1: Adafruit Forums The easiest way to send feedback is via the Adafruit Forums: Adafruit Forum Post: Adafruit for Newbies - Reference website to help newcomers You will need to create a free Adafruit forum account in order to post. For newbies, the benefits are: Straight forward and simple to post to the forum. If there is a question where I do not know the answer, Adafruit support or other community members may also be able to help Option 2: Github Issue For more experienced people, if you have a Github account, you may also choose to open an issue on the repo for the site itself: Github adafruit.usedgoodies.com repo - Issues Please note that while I will see submissions here, that it's not as visible to the rest of the community. This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Contact Us"},{"location":"contact/#contact-us","text":"","title":"Contact Us"},{"location":"contact/#questions-comments-suggestions-or-error-corrections","text":"I hope you found this website to be helpful. If you have additional questions, comments, suggests or error corrections, please feel free to send feedback.","title":"Questions, comments, suggestions or error corrections"},{"location":"contact/#option-1-adafruit-forums","text":"The easiest way to send feedback is via the Adafruit Forums: Adafruit Forum Post: Adafruit for Newbies - Reference website to help newcomers You will need to create a free Adafruit forum account in order to post. For newbies, the benefits are: Straight forward and simple to post to the forum. If there is a question where I do not know the answer, Adafruit support or other community members may also be able to help","title":"Option 1: Adafruit Forums"},{"location":"contact/#option-2-github-issue","text":"For more experienced people, if you have a Github account, you may also choose to open an issue on the repo for the site itself: Github adafruit.usedgoodies.com repo - Issues Please note that while I will see submissions here, that it's not as visible to the rest of the community. This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Option 2: Github Issue"},{"location":"circuitpython/","text":"CircuitPython The majority of Adafruit hardware can run either Arduino or CircuitPython Some Adafruit hardware is also compatible with MakeCode . Note A Beginner's Recommendation . CircuitPython What is CircuitPython? This website focuses on CircuitPython which is a version of python for microcontrollers. Adafruit is the principle backer for CircuitPython . I recommend CircuitPython over Arduino for beginners because: Python is a more accesible programming language than C++ (which is what Arduino uses). Python syntax is more similar to plain language Python gives beginners an easier and quicker feedback loop Python code does not need to be compiled in the way that C++ (Arduino) code requirees. With CircuitPython, the code is stored and run directly on the microcontroller, aka \"click save and your code starts running\" Arduino code requires the traditional method of: Compiling code on an external device (e.g., your laptop) Downloading the compiled binary to the microcontroller through the Arduino IDE Debugging the code Watching the output Edit with any code editor Because of these and other reasons, Python continues to be increasingly used for microcontroller projects. MakeCode Note Great for younger students, MakeCode is a blocked-based programming language which is similar to Scratch . Block-based programming, such as MakeCode or Scratch , is great for younger beginners. Using drag-and-drop blocks avoids common syntax errors like typos or formatting issues, which can be source of frustration for new programmers. However, the power and flexiblity of block-based programs is limited. Hence for older students, or those students already experienced with Scratch or MakeCode , I recommend jumping straight into python. Edublocks For those looking to ease the transition from block-based programming to python, EduBlocks is an interesting hybrid which offers python in a block-based format. What about Micropython? MicroPython is an open source Python programming language interpretor that runs on small embedded development boards, aka microcontrollers . Lean and efficient implementation of Python 3 Includes a small subset of Python standard library Optimized to run on microcontrollers Micropython developed by Damien George in 2014 CircuitPython is a fork of Micropython CircuirtPython developed by Adafruit in 2017 While CircuitPython looks somewhat like MicroPython there are some differences . Choose MicroPython For advanced features like interrupts and threading Complete access to the RP2040\u2019s Programmable I/O (PIO) in Python Choose CircuitPython Beginner friendly Extensive library support for sensors and other breakouts Well supported by Adafruit CircuitPython Documentation CircuitPython documentation is hosted at Read the Docs. http://docs.circuitpython.org/ CircuitPython Community https://learn.adafruit.com/welcome-to-the-community Additional References Adafruit Learn Guide: Welcome to CircuitPython Adafruit Learn Guide: What is CircuitPython? Arduino CircuitPython.org MicroPython EduBlocks MakeCode Scratch Additional CircuitPython Resources Adafruit has a great walkthrough on how to get started with CircuitPython with Raspberry Pi Pico Adafruit video Collin lab one minute CircuitPython on Raspberry Pi Pico Awesome CircuitPython list circuitpython-tricks Independent podcast: The CircuitPython Show (Youtube) This page was last updated on 2022-03-10 14:15:07 -0500.","title":"Overview"},{"location":"circuitpython/#circuitpython","text":"The majority of Adafruit hardware can run either Arduino or CircuitPython Some Adafruit hardware is also compatible with MakeCode . Note A Beginner's Recommendation . CircuitPython","title":"CircuitPython"},{"location":"circuitpython/#what-is-circuitpython","text":"This website focuses on CircuitPython which is a version of python for microcontrollers. Adafruit is the principle backer for CircuitPython . I recommend CircuitPython over Arduino for beginners because: Python is a more accesible programming language than C++ (which is what Arduino uses). Python syntax is more similar to plain language Python gives beginners an easier and quicker feedback loop Python code does not need to be compiled in the way that C++ (Arduino) code requirees. With CircuitPython, the code is stored and run directly on the microcontroller, aka \"click save and your code starts running\" Arduino code requires the traditional method of: Compiling code on an external device (e.g., your laptop) Downloading the compiled binary to the microcontroller through the Arduino IDE Debugging the code Watching the output Edit with any code editor Because of these and other reasons, Python continues to be increasingly used for microcontroller projects.","title":"What is CircuitPython?"},{"location":"circuitpython/#makecode","text":"Note Great for younger students, MakeCode is a blocked-based programming language which is similar to Scratch . Block-based programming, such as MakeCode or Scratch , is great for younger beginners. Using drag-and-drop blocks avoids common syntax errors like typos or formatting issues, which can be source of frustration for new programmers. However, the power and flexiblity of block-based programs is limited. Hence for older students, or those students already experienced with Scratch or MakeCode , I recommend jumping straight into python.","title":"MakeCode"},{"location":"circuitpython/#edublocks","text":"For those looking to ease the transition from block-based programming to python, EduBlocks is an interesting hybrid which offers python in a block-based format.","title":"Edublocks"},{"location":"circuitpython/#what-about-micropython","text":"MicroPython is an open source Python programming language interpretor that runs on small embedded development boards, aka microcontrollers . Lean and efficient implementation of Python 3 Includes a small subset of Python standard library Optimized to run on microcontrollers Micropython developed by Damien George in 2014 CircuitPython is a fork of Micropython CircuirtPython developed by Adafruit in 2017 While CircuitPython looks somewhat like MicroPython there are some differences . Choose MicroPython For advanced features like interrupts and threading Complete access to the RP2040\u2019s Programmable I/O (PIO) in Python Choose CircuitPython Beginner friendly Extensive library support for sensors and other breakouts Well supported by Adafruit","title":"What about Micropython?"},{"location":"circuitpython/#circuitpython-documentation","text":"CircuitPython documentation is hosted at Read the Docs. http://docs.circuitpython.org/","title":"CircuitPython Documentation"},{"location":"circuitpython/#circuitpython-community","text":"https://learn.adafruit.com/welcome-to-the-community","title":"CircuitPython Community"},{"location":"circuitpython/#additional-references","text":"Adafruit Learn Guide: Welcome to CircuitPython Adafruit Learn Guide: What is CircuitPython? Arduino CircuitPython.org MicroPython EduBlocks MakeCode Scratch","title":"Additional References"},{"location":"circuitpython/#additional-circuitpython-resources","text":"Adafruit has a great walkthrough on how to get started with CircuitPython with Raspberry Pi Pico Adafruit video Collin lab one minute CircuitPython on Raspberry Pi Pico Awesome CircuitPython list circuitpython-tricks Independent podcast: The CircuitPython Show (Youtube) This page was last updated on 2022-03-10 14:15:07 -0500.","title":"Additional CircuitPython Resources"},{"location":"circuitpython/installation/","text":"Installation Adafruit has great documentation for CircuitPython. This page tries to supplement the existing documentation by providing a quick overview and a summary of the overall process. Other documentation listed at Additional Referernces CircuitPython installation has two general steps: Installing the CircuitPython UF2 image onto your device Installing additional CircuitPython Libraries as needed I. CircuitPython UF2 Image Installation of CircuitPython via CircuitPython UF2 image installation is a simple drag-and-drop operation because Adafruit devices usually support USB mode. When you connect the microcontroller to your computer via a USB cable, it will appear on your computer as a USB drive. Warning Make sure that the cable you use is a USB data cable. If you are using a USB charging cable, the device will not be mounted on your system as a USB drive. UF2 Steps Download UF2 image for your board Go to CircuitPython Downloads site and click on your board NOTE: if your board does not appear on the list, then it probably does not support CircuitPython. The majority of Adafruit devices support CircuitPython. Place your device into bootloader mode Refer to documentation for your device as this process varies Drag and drop the UF2 file you downloaded in the first step to your device via the mounted Bootloader USB drive The name of the mounted Bootloader drive varies. For example, the Raspberry Pi Pico bootloader drive is named RPI-RPI2 ) If the copy is successful, you should see the Bootloader drive automatically unmount, and then a new drive usually named CIRCUITPY will automatically mount If the above three steps complete successfully, you are done! You can start coding with CircuitPython on your device. Thereafter when you reconnect your device to your computer, it should automatically been seen as a USB drive named CIRCUITPY . You will no longer see the bootloader disk mounted unless you place the device into bootloader mode -- usually you will only go to the bootloader mode to upgrade CircuitPython. Located on your CIRCUITPY drive folder, the main starter program is code.py Use any editor of your choice -- changes saved to code.py run immediately. Note A Beginner's Recommendation . Mu Editor While you may use any editor of your choice the Mu Editor is a great editor for beginners. There are versions for Windows, Mac OS, and Linux. When you first run Mu Editor, it should prompt you to pick a mode You may pick the mode for \"CircuiPython\". The advantage to \"CircuitPython mode\" is that the Mu Editor will let you access the Serial Console where you can interact with the REPL (Read Eval Print Loop) Additional References Great video walkthrough of the process: CircuitPython School - CircuitPython Installation Another great video walkthrough of the process: DroneBot Workshop - CircuitPython with Raspberry Pi Pico II. CircuitPython Libaries Once you have CircuitPython installed on your device, you can start coding in CircuitPython immediately. However, once your code makes calls beyond the libraries included with the UF2 image install -- most commonly after you attach sensors or other breakouts to the microcontroller -- you will need the following additional steps: Download the CircuitPython Library Bundle Copy additional libraries to the microcontroller The full CircuitPython Library Bundle is around 3.5MB compressed. Since the storage available on most microcontrollers is limited There is often not enough capacity to store the complete CircuitPython Library bundle Only copy additional libraries individually based upon the sensors, components and other breakouts you attach As of Feb 15, 2022, the number of CircuitPython libraries is 344! The main options for copying additional libraries onto the microcontroller are: For Adafruit Learn Guides: Bundlefly Manual Using a tool (I highly recommend circup ) Bundlefly Note A Beginner's Recommendation . Bundlefly All CircuitPython Adafruit Learn Guides now have a feature called Bundlefly which will allow users to download one zip file which includes the code, all required libraries, and if needed, asset files. Find the download link called Download Project Bundle located at the beginning of any CircuitPython code section. Once you have extracted all the files from the downloaded zip file, you just drag-and-drop them onto your microntroller CIRCUITPY drive. Manual Download the CircuitPython Library Bundle Warning Make sure to download the bundle that matches the major version of your CircuitPython Unzip the bundle, then drag and drop the individual libraries you need Note Most Adafruit learn guides and other 3rd party tutorials reference the manual method. Using a tool: circup Circup is a great way to install CircuitPython libraries and keep all your CircuitPython libraries up to date. While circup does require some intial setup, you should only need to do the setup once. Circup usage is very similar to python pip . Note IMHO using circup is vastly superior to copying CircuitPython libraries manually, but it does require the user to be comfortable with the command line. Circup Advantages No need to manually: Download the CircuitPython Bundle Library zip file Extract the bundle zip file Drag and drop individual libraries to the microcontroller Install individual libraries by name or a list of libraries in a text file. Generate a list of libraries currently installed on your device with the freeze option. (see below for more info) I first learned about circup from one of John Park's CircuitPython Parsec videos: Adafruit Blog on John Park's CircuitPython Parsec: CircUp CircuitPython Updater Video: John Park's CircuitPython Parsec: Circup CircuitPython Updater (9/17/2021) Circup Initial Setup - only need to run once Pre-requisite Have a working Python3 installation on your computer. For Windows, best to download python and install. For Mac, you have options such as homebrew Command Line Tools (must have an Apple ID) (what I use) For Linux, check your distro documentation for info on how to install Python3 (if not already installed) I recommend to install circup via a python virtual environment. Although if you prefer, you may skip the virtual environment creation and directly pip install circup onto your computer. Create Python Virtual Environment (optional - skip to Install Circup if you don't want to use a virtual environment) On a Mac: python3 -m venv ~/.virtualenvs/circup On Linux: python3 -m venv ~/.virtualenvs/circup On Windows: Pre-requisites Install Python on your computer python -m venv ~/.virtualenvs/circup Activate Virtual Environment Mac and Linux . ~/.virtualenvs/circup/bin/activate Windows source ~/.virtualenvs/circup/Scripts/activate Install Circup On all platforms: pip install circup On Mac/Linux if you did not use a virtual environment: pip3 install circup Circup Usage NOTE: If using a python virtual environment, before you can call circup, you will first need to activate the virtual environment. (see Activate Virtual Environment above) Command Examples Circup install a library circup install adafruit_debouncer Circup remove a library (circup) jliu@JEFFREYs-MBP ~ % circup uninstall adafruit_debouncer Found device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0. A newer version of CircuitPython (7.0.0) is available. Get it here: https://circuitpython.org/downloads Uninstalled 'adafruit_debouncer'. Circup install list of libraries from a text file (circup) jliu@JEFFREYs-MBP /Volumes/CIRCUITPY/lib % circup install -r ../requirements.txt Found device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0. A newer version of CircuitPython (7.0.0) is available. Get it here: https://circuitpython.org/downloads Searching for dependencies for: ['a newer version of circuitpython (7.0.0) is available.', 'adafruit_debouncer', 'found device at /volumes/circuitpy, running circuitpython 6.3.0.', 'get it here: https://circuitpython.org/downloads'] WARNING: a newer version of circuitpython (7.0.0) is available. is not a known CircuitPython library. WARNING: found device at /volumes/circuitpy, running circuitpython 6.3.0. is not a known CircuitPython library. WARNING: get it here: https://circuitpython.org/downloads is not a known CircuitPython library. Ready to install: ['adafruit_debouncer'] Installed 'adafruit_debouncer'. Circup create list of libraries from installed libraries on microcontroller Similar to the pip freeze command. NOTE: Instead of the freeze option, you may also manually create a text file with a list of libraries. circup freeze > requirements.txt Circup update existing libraries circup update Circup Miscellaneous Info Circup bundles-show (circup) jliu@JEFFREYs-MBP ~ % circup bundle-show adafruit/Adafruit_CircuitPython_Bundle https://github.com/adafruit/Adafruit_CircuitPython_Bundle version = 20210921 adafruit/CircuitPython_Community_Bundle https://github.com/adafruit/CircuitPython_Community_Bundle version = 20210921 circuitpython/CircuitPython_Org_Bundle https://github.com/circuitpython/CircuitPython_Org_Bundle version = 0.0.3 Github Issue requesting support for community bundle and future bundles Circup bundles by default are downloaded to User's DATA_DIR/circup NOTE: Mac default DATA_DIR/circup directory is ~/Library/Application\\ Support/circup (circup) % ls -lrt ~/Library/Application\\ Support/circup total 35752 -rw-r--r-- 1 jliu staff 11320 Sep 21 11:55 circuitpython-org-bundle-py.zip -rw-r--r-- 1 jliu staff 5506 Sep 21 11:55 circuitpython-org-bundle-6mpy.zip -rw-r--r-- 1 jliu staff 4992 Sep 21 11:55 circuitpython-org-bundle-7mpy.zip drwxr-xr-x 5 jliu staff 160 Sep 21 11:55 circuitpython -rw-r--r-- 1 jliu staff 4531939 Dec 5 10:25 adafruit-circuitpython-bundle-6mpy.zip -rw-r--r-- 1 jliu staff 1398845 Dec 5 10:25 circuitpython-community-bundle-py.zip -rw-r--r-- 1 jliu staff 866768 Dec 5 10:25 circuitpython-community-bundle-6mpy.zip -rw-r--r-- 1 jliu staff 655732 Dec 5 10:25 circuitpython-community-bundle-7mpy.zip -rw-r--r-- 1 jliu staff 7197908 Jan 1 19:44 adafruit-circuitpython-bundle-py.zip -rw-r--r-- 1 jliu staff 3607698 Jan 1 19:44 adafruit-circuitpython-bundle-7mpy.zip drwxr-xr-x 8 jliu staff 256 Jan 1 19:44 adafruit -rw-r--r-- 1 jliu staff 160 Jan 1 19:44 circup.json (circup) jliu@JEFFREYs-MBP ~/Library/Application Support/circup % du -sh . 51M . Config file circup.json % find ~ -name circup.json /Users/jliu/Library/Application Support/circup/circup.json Circup help (circup) jliu@JEFFREYs-MBP ~ % circup --help Usage: circup [OPTIONS] COMMAND [ARGS]... A tool to manage and update libraries on a CircuitPython device. Options: --verbose Comprehensive logging is sent to stdout. --path DIRECTORY Path to CircuitPython directory. Overrides automatic path detection. --version Show the version and exit. --help Show this message and exit. Commands: bundle-add Add bundles to the local bundles list, by \"user/repo\"... bundle-remove Remove one or more bundles from the local bundles list. bundle-show Show the list of bundles, default and local, with URL,... freeze Output details of all the modules found on the connected... install Install a named module(s) onto the device. list Lists all out of date modules found on the connected... show Show a list of available modules in the bundle. uninstall Uninstall a named module(s) from the connected device. update Update modules on the device. Use --all to automatically update all modules without Major Version warnings. Circup Resources Circup documentation Circup Github repo Adafruit Learn Guide: Circup This page was last updated on 2022-03-03 18:21:07 -0500.","title":"Installation"},{"location":"circuitpython/installation/#installation","text":"Adafruit has great documentation for CircuitPython. This page tries to supplement the existing documentation by providing a quick overview and a summary of the overall process. Other documentation listed at Additional Referernces","title":"Installation"},{"location":"circuitpython/installation/#circuitpython-installation-has-two-general-steps","text":"Installing the CircuitPython UF2 image onto your device Installing additional CircuitPython Libraries as needed","title":"CircuitPython installation has two general steps:"},{"location":"circuitpython/installation/#i-circuitpython-uf2-image","text":"Installation of CircuitPython via CircuitPython UF2 image installation is a simple drag-and-drop operation because Adafruit devices usually support USB mode. When you connect the microcontroller to your computer via a USB cable, it will appear on your computer as a USB drive. Warning Make sure that the cable you use is a USB data cable. If you are using a USB charging cable, the device will not be mounted on your system as a USB drive.","title":"I. CircuitPython UF2 Image"},{"location":"circuitpython/installation/#uf2-steps","text":"Download UF2 image for your board Go to CircuitPython Downloads site and click on your board NOTE: if your board does not appear on the list, then it probably does not support CircuitPython. The majority of Adafruit devices support CircuitPython. Place your device into bootloader mode Refer to documentation for your device as this process varies Drag and drop the UF2 file you downloaded in the first step to your device via the mounted Bootloader USB drive The name of the mounted Bootloader drive varies. For example, the Raspberry Pi Pico bootloader drive is named RPI-RPI2 ) If the copy is successful, you should see the Bootloader drive automatically unmount, and then a new drive usually named CIRCUITPY will automatically mount If the above three steps complete successfully, you are done! You can start coding with CircuitPython on your device. Thereafter when you reconnect your device to your computer, it should automatically been seen as a USB drive named CIRCUITPY . You will no longer see the bootloader disk mounted unless you place the device into bootloader mode -- usually you will only go to the bootloader mode to upgrade CircuitPython. Located on your CIRCUITPY drive folder, the main starter program is code.py Use any editor of your choice -- changes saved to code.py run immediately. Note A Beginner's Recommendation . Mu Editor While you may use any editor of your choice the Mu Editor is a great editor for beginners. There are versions for Windows, Mac OS, and Linux. When you first run Mu Editor, it should prompt you to pick a mode You may pick the mode for \"CircuiPython\". The advantage to \"CircuitPython mode\" is that the Mu Editor will let you access the Serial Console where you can interact with the REPL (Read Eval Print Loop)","title":"UF2 Steps"},{"location":"circuitpython/installation/#additional-references","text":"Great video walkthrough of the process: CircuitPython School - CircuitPython Installation Another great video walkthrough of the process: DroneBot Workshop - CircuitPython with Raspberry Pi Pico","title":"Additional References"},{"location":"circuitpython/installation/#ii-circuitpython-libaries","text":"Once you have CircuitPython installed on your device, you can start coding in CircuitPython immediately. However, once your code makes calls beyond the libraries included with the UF2 image install -- most commonly after you attach sensors or other breakouts to the microcontroller -- you will need the following additional steps: Download the CircuitPython Library Bundle Copy additional libraries to the microcontroller The full CircuitPython Library Bundle is around 3.5MB compressed. Since the storage available on most microcontrollers is limited There is often not enough capacity to store the complete CircuitPython Library bundle Only copy additional libraries individually based upon the sensors, components and other breakouts you attach As of Feb 15, 2022, the number of CircuitPython libraries is 344!","title":"II. CircuitPython Libaries"},{"location":"circuitpython/installation/#the-main-options-for-copying-additional-libraries-onto-the-microcontroller-are","text":"For Adafruit Learn Guides: Bundlefly Manual Using a tool (I highly recommend circup )","title":"The main options for copying additional libraries onto the microcontroller are:"},{"location":"circuitpython/installation/#bundlefly","text":"Note A Beginner's Recommendation . Bundlefly All CircuitPython Adafruit Learn Guides now have a feature called Bundlefly which will allow users to download one zip file which includes the code, all required libraries, and if needed, asset files. Find the download link called Download Project Bundle located at the beginning of any CircuitPython code section. Once you have extracted all the files from the downloaded zip file, you just drag-and-drop them onto your microntroller CIRCUITPY drive.","title":"Bundlefly"},{"location":"circuitpython/installation/#manual","text":"Download the CircuitPython Library Bundle Warning Make sure to download the bundle that matches the major version of your CircuitPython Unzip the bundle, then drag and drop the individual libraries you need Note Most Adafruit learn guides and other 3rd party tutorials reference the manual method.","title":"Manual"},{"location":"circuitpython/installation/#using-a-tool-circup","text":"Circup is a great way to install CircuitPython libraries and keep all your CircuitPython libraries up to date. While circup does require some intial setup, you should only need to do the setup once. Circup usage is very similar to python pip . Note IMHO using circup is vastly superior to copying CircuitPython libraries manually, but it does require the user to be comfortable with the command line. Circup Advantages No need to manually: Download the CircuitPython Bundle Library zip file Extract the bundle zip file Drag and drop individual libraries to the microcontroller Install individual libraries by name or a list of libraries in a text file. Generate a list of libraries currently installed on your device with the freeze option. (see below for more info) I first learned about circup from one of John Park's CircuitPython Parsec videos: Adafruit Blog on John Park's CircuitPython Parsec: CircUp CircuitPython Updater Video: John Park's CircuitPython Parsec: Circup CircuitPython Updater (9/17/2021)","title":"Using a tool: circup"},{"location":"circuitpython/installation/#circup-initial-setup-only-need-to-run-once","text":"Pre-requisite Have a working Python3 installation on your computer. For Windows, best to download python and install. For Mac, you have options such as homebrew Command Line Tools (must have an Apple ID) (what I use) For Linux, check your distro documentation for info on how to install Python3 (if not already installed) I recommend to install circup via a python virtual environment. Although if you prefer, you may skip the virtual environment creation and directly pip install circup onto your computer. Create Python Virtual Environment (optional - skip to Install Circup if you don't want to use a virtual environment) On a Mac: python3 -m venv ~/.virtualenvs/circup On Linux: python3 -m venv ~/.virtualenvs/circup On Windows: Pre-requisites Install Python on your computer python -m venv ~/.virtualenvs/circup Activate Virtual Environment Mac and Linux . ~/.virtualenvs/circup/bin/activate Windows source ~/.virtualenvs/circup/Scripts/activate Install Circup On all platforms: pip install circup On Mac/Linux if you did not use a virtual environment: pip3 install circup","title":"Circup Initial Setup - only need to run once"},{"location":"circuitpython/installation/#circup-usage","text":"NOTE: If using a python virtual environment, before you can call circup, you will first need to activate the virtual environment. (see Activate Virtual Environment above) Command Examples Circup install a library circup install adafruit_debouncer Circup remove a library (circup) jliu@JEFFREYs-MBP ~ % circup uninstall adafruit_debouncer Found device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0. A newer version of CircuitPython (7.0.0) is available. Get it here: https://circuitpython.org/downloads Uninstalled 'adafruit_debouncer'. Circup install list of libraries from a text file (circup) jliu@JEFFREYs-MBP /Volumes/CIRCUITPY/lib % circup install -r ../requirements.txt Found device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0. A newer version of CircuitPython (7.0.0) is available. Get it here: https://circuitpython.org/downloads Searching for dependencies for: ['a newer version of circuitpython (7.0.0) is available.', 'adafruit_debouncer', 'found device at /volumes/circuitpy, running circuitpython 6.3.0.', 'get it here: https://circuitpython.org/downloads'] WARNING: a newer version of circuitpython (7.0.0) is available. is not a known CircuitPython library. WARNING: found device at /volumes/circuitpy, running circuitpython 6.3.0. is not a known CircuitPython library. WARNING: get it here: https://circuitpython.org/downloads is not a known CircuitPython library. Ready to install: ['adafruit_debouncer'] Installed 'adafruit_debouncer'. Circup create list of libraries from installed libraries on microcontroller Similar to the pip freeze command. NOTE: Instead of the freeze option, you may also manually create a text file with a list of libraries. circup freeze > requirements.txt Circup update existing libraries circup update","title":"Circup Usage"},{"location":"circuitpython/installation/#circup-miscellaneous-info","text":"Circup bundles-show (circup) jliu@JEFFREYs-MBP ~ % circup bundle-show adafruit/Adafruit_CircuitPython_Bundle https://github.com/adafruit/Adafruit_CircuitPython_Bundle version = 20210921 adafruit/CircuitPython_Community_Bundle https://github.com/adafruit/CircuitPython_Community_Bundle version = 20210921 circuitpython/CircuitPython_Org_Bundle https://github.com/circuitpython/CircuitPython_Org_Bundle version = 0.0.3 Github Issue requesting support for community bundle and future bundles Circup bundles by default are downloaded to User's DATA_DIR/circup NOTE: Mac default DATA_DIR/circup directory is ~/Library/Application\\ Support/circup (circup) % ls -lrt ~/Library/Application\\ Support/circup total 35752 -rw-r--r-- 1 jliu staff 11320 Sep 21 11:55 circuitpython-org-bundle-py.zip -rw-r--r-- 1 jliu staff 5506 Sep 21 11:55 circuitpython-org-bundle-6mpy.zip -rw-r--r-- 1 jliu staff 4992 Sep 21 11:55 circuitpython-org-bundle-7mpy.zip drwxr-xr-x 5 jliu staff 160 Sep 21 11:55 circuitpython -rw-r--r-- 1 jliu staff 4531939 Dec 5 10:25 adafruit-circuitpython-bundle-6mpy.zip -rw-r--r-- 1 jliu staff 1398845 Dec 5 10:25 circuitpython-community-bundle-py.zip -rw-r--r-- 1 jliu staff 866768 Dec 5 10:25 circuitpython-community-bundle-6mpy.zip -rw-r--r-- 1 jliu staff 655732 Dec 5 10:25 circuitpython-community-bundle-7mpy.zip -rw-r--r-- 1 jliu staff 7197908 Jan 1 19:44 adafruit-circuitpython-bundle-py.zip -rw-r--r-- 1 jliu staff 3607698 Jan 1 19:44 adafruit-circuitpython-bundle-7mpy.zip drwxr-xr-x 8 jliu staff 256 Jan 1 19:44 adafruit -rw-r--r-- 1 jliu staff 160 Jan 1 19:44 circup.json (circup) jliu@JEFFREYs-MBP ~/Library/Application Support/circup % du -sh . 51M . Config file circup.json % find ~ -name circup.json /Users/jliu/Library/Application Support/circup/circup.json Circup help (circup) jliu@JEFFREYs-MBP ~ % circup --help Usage: circup [OPTIONS] COMMAND [ARGS]... A tool to manage and update libraries on a CircuitPython device. Options: --verbose Comprehensive logging is sent to stdout. --path DIRECTORY Path to CircuitPython directory. Overrides automatic path detection. --version Show the version and exit. --help Show this message and exit. Commands: bundle-add Add bundles to the local bundles list, by \"user/repo\"... bundle-remove Remove one or more bundles from the local bundles list. bundle-show Show the list of bundles, default and local, with URL,... freeze Output details of all the modules found on the connected... install Install a named module(s) onto the device. list Lists all out of date modules found on the connected... show Show a list of available modules in the bundle. uninstall Uninstall a named module(s) from the connected device. update Update modules on the device. Use --all to automatically update all modules without Major Version warnings.","title":"Circup Miscellaneous Info"},{"location":"circuitpython/installation/#circup-resources","text":"Circup documentation Circup Github repo Adafruit Learn Guide: Circup This page was last updated on 2022-03-03 18:21:07 -0500.","title":"Circup Resources"},{"location":"getting-started/","text":"Introduction This guide is for people new to Adafruit and to electronics. The focus is on the Adafruit ecosystem Roadmap for people new to the Adafruit ecosystem. Review Adafruit lingo and branding. This website does not cover electronics in general -- Along the way some electronics is discussed, but this website does not cover topics in depth. As much as possible, links to additional resources or references will be provided. Adafruit is an open-source hardware company which designs custom hardware and components. Located in New York City, Adafruit was founded by Limor Fried (aka \"Lady Ada\") in 2005. All designs and guides are openly shared. Adafruit also provides Learn Guides which uses the hardware to do cool stuff. Adafruit has over 2,600 guides, and it can be overwhelming for those just starting out (\"newbies\"). Note While there is no \"right\" or \"wrong\" approach to learning electronics, on this website I make some opinionated recommendations geared to the absolute \"newbie\" \u2013 people who are new to both electronics and to the Adafruit ecosystem. You will see these labeled as: A Beginner's Recommendation Feel free to ignore my recommendations if you are already knowledgable in electronics in general and just wish to get quickly acclimated with the Adafruit lingo. Often \"newbies\" want a clearly defined roadmap, so my recommendations are for those who have no idea where to start and just want to get started somewhere. I will explain why I make the recommendations. The Adafruit website Let's begin with a general overview of how the Adafruit website is organized. As of 1/2022, the adafruit.com website has a navigation bar on the top left. \"Shop\" - the online store where you can peruse product pages, and place online orders. Specific product pages will often include links to related Learn Guides. \"Learn\" - where documenation and Learn Guides are located. More details below. \"Blog\" - Adafruit's blog which is updated daily. \"Forums\" - Adafruit's support forums where you can seek help from customer support or the community. \"LIVE!\" - where you can find Adafruit's currently live streaming show, or if there isn't currently a live stream their main YouTube Channel. More details below. \"AdaBox\" - a link to their order page for Adabox. More on Adabox below. \"IO\" - a link to Adafruit's online service. Learn Guides Adafruit offers thousands of learn guides -- Most Learn Guides are walk throughs of specific projects with Adafruit hardware and software. Some Learn Guides discuss electronics topics. Guides for Beginners https://blog.adafruit.com/2021/04/20/adafruitlearningsystem-weekly-update-beginner/ \"If you are just getting started with electronics, it can be difficult to know where to begin. With almost 2,500 guides published on the Adafruit Learning System, it might seem hard to figure out which guides are best for a beginner like you. Thankfully, we have each guide tagged with its difficulty level making it easier for beginners to find the right guides. We even have a curated beginners page that has a breakdown of guides that might interest those who know nothing about electronics, all the way through those who are just getting their feet wet.\" Adafruit Learn Guides tagged \"beginner\": https://learn.adafruit.com/guides/beginner Adafruit Weekly Trending Learn Guides: https://learn.adafruit.com/guides/trending Git repo for Adafruit Learning Guides (kinda large at 1.1GB): https://github.com/adafruit/Adafruit_Learning_System_Guides Shows Aside from articles on the adafruit.com website, Adafruit broadcasts many shows throughout the week covering various topics. Most of these shows are posted to YouTube if you miss the live stream. Webpage with a description of Adafruit shows https://www.adafruit.com/shows The shows are great resources and very informative. For an absolute newbie, some shows may be hard to digest since there is often an assumption that viewers already possess some basic understanding -- although if you attend a live stream, you may ask questions during the show, and Adafruit will likely answer your questions. Adabox Note Before we dive into the Adafruit ecosystem, a Beginner's Recommendation . Adabox Adabox is a discovery subscription service with curated Adafruit products. The target audience is geared towards beginners and hobbyists. I'm skeptical of many subscription services, but in the case of Adabox, I whole-heartedly recommend that beginners (and non-beginners) give it a try. Adabox is released on a Quarterly cadence (as much as possible). You have the option either to subscribe, or you can gift one or multiple Adabox to yourself (or others). Each Adabox is standalone and shipped with all the components and parts needed to construct projects. In my opinion, Adabox is for kids ages 12 and up. Younger kids may need adults to help them. The construction of the hardware is usually not that difficult -- it's more on the software/programming side where younger kids may need adult assistance. I've been an Adabox subscriber since Adabox015 , and I've back purchased Adabox007 and Adabox014 , as well as bought the equivalent kits for Adabox008 , Adabox010 , Adabox011 , Adabox012 , and Adabox013 . PROs Value of all the equipment and shipping often exceeds the amount you pay for the subscription, and Adabox includes custom extras which are not available in their regular online store. Cool unboxing live stream (recorded and available afterwards on YouTube) Entertaining and goes through the contents of the Adabox Demo of one or two projects is shown. If you attend the live stream, you may ask questions. Adabox is often accompanied with a long list of Learn Guides (projects). The Learn Guides are accessible to newbies Ask questions or request support via Adafruit's support forums. CONs Delivery of the Adabox can be delayed. The global chip shortage and supply chain delays have made it difficult for Adafruit. I received the most recent two adaboxes weeks after the official unboxing video (whereas in the past the unboxing videos were timed to coincide with the majority of customers to have already received their Adabox.) Occassionally there may be some things mentioned which could be hard for newbies to follow. (Hence, why I wrote this guide.) List of Adaboxes Adabox Release Date Description Adabox001 11/2016 Welcome to feather - Feather 32u4 Adalogger, Neopixel feather wing, LCD 16x2, Piezo buzzer, TMP36 sensor, etc Adabox002 12/2016 Making Things Move - Feather Bluetooth LE Mini Robot - Feather 32u4 Bluefruit LE, DC Motor and Stepper FeatherWing, Piezo buzzer, etc Adabox003 5/2017 The World of IoT - Feather Huzzah with ESP8266 WiFi, Featherwing OLED 128x32, DHT22 sensor, Micro servo, PIR sensor, etc Adabox004 8/2017 Making Things Dance - Feather Huzzah with ESP8266 WiFi, MusicMaker Featherwing, 3W 4ohm speaker, etc Adabox005 9/2017 Break for Pi - Raspberry Pi Zero, Adafruit Joy Bonnet, Hammer Headers, etc Adabox006 1/2018 CircuitPython - Circuit Playground Express, Alligator clips, etc Adabox007 6/2018 Spy - Gemma M0, lock picks, practice lock, Piezo buzzer, etc https://www.adafruit.com/adabox007 Adabox008 10/2018 Octo Crickit MakeRobotFriend - Circuit Playground Express, Adafruit CRICKIT for Circuit Playground Express, etc https://www.adafruit.com/adabox008 Adabox009 10/2018 Hallowing - Adafruit Hallowing M0 Express, Micro Servo, PIR sensor, Neopixel LED strip, etc Adabox010 1/2019 Rainbow Trellis - Adafruit NeoTrellis M4, etc https://www.adafruit.com/adabox010 Adabox011 4/2019 PyPortal - PyPortal, PyPortal Desktop Enclosure kit https://www.adafruit.com/adabox011 Adabox012 7/2019 PyGamer - PyGamer, PyGamer acrylic enclosure kit, etc https://www.adafruit.com/adabox012 Adabox013 9/2019 Monster M4sk - The Monster M4sk, etc https://www.adafruit.com/adabox013 Adabox014 12/2019 Merry Adaboxmas - Circuit Playground Bluefruit, TFT Gizmo, snow globe, etc https://www.adafruit.com/adabox014 Adabox015 7/2020 Come to your Sensors - Adafruit CLUE, Adafruit Bonsai Buckaroo, two Alligator clips, water pump, etc https://www.adafruit.com/adabox015 Adabox016 10/2020 MatrixPortal - MatrixPortal M4, 64x32 RGB Matrix, LED Diffusion Acrylic, etc https://www.adafruit.com/adabox016 Adabox017 12/2020 Good Fortune Ahead - MagTag, Neopixel strip, Magnetic whiteboard, etc https://www.adafruit.com/adabox017 Adabox018 5/17/2021 No place like home - FunHouse, mini PIR sensor, ultrasonic distance sensor, etc https://www.adafruit.com/adabox018 Adabox019 7/31/2021 Macropad https://www.adafruit.com/adabox019 Adabox020 10/27/2021 LED Glasses https://www.adafruit.com/adabox020/ Other Media Aside from Video https://www.adafruit.com/shows Adafruit is dedicated to providing you information in your chosen way. Newsletters Blog Instagram Reddit Discord Next Steps Next Steps This page was last updated on 2022-03-04 16:45:07 -0500.","title":"Overview"},{"location":"getting-started/#introduction","text":"This guide is for people new to Adafruit and to electronics. The focus is on the Adafruit ecosystem Roadmap for people new to the Adafruit ecosystem. Review Adafruit lingo and branding. This website does not cover electronics in general -- Along the way some electronics is discussed, but this website does not cover topics in depth. As much as possible, links to additional resources or references will be provided. Adafruit is an open-source hardware company which designs custom hardware and components. Located in New York City, Adafruit was founded by Limor Fried (aka \"Lady Ada\") in 2005. All designs and guides are openly shared. Adafruit also provides Learn Guides which uses the hardware to do cool stuff. Adafruit has over 2,600 guides, and it can be overwhelming for those just starting out (\"newbies\"). Note While there is no \"right\" or \"wrong\" approach to learning electronics, on this website I make some opinionated recommendations geared to the absolute \"newbie\" \u2013 people who are new to both electronics and to the Adafruit ecosystem. You will see these labeled as: A Beginner's Recommendation Feel free to ignore my recommendations if you are already knowledgable in electronics in general and just wish to get quickly acclimated with the Adafruit lingo. Often \"newbies\" want a clearly defined roadmap, so my recommendations are for those who have no idea where to start and just want to get started somewhere. I will explain why I make the recommendations.","title":"Introduction"},{"location":"getting-started/#the-adafruit-website","text":"Let's begin with a general overview of how the Adafruit website is organized. As of 1/2022, the adafruit.com website has a navigation bar on the top left. \"Shop\" - the online store where you can peruse product pages, and place online orders. Specific product pages will often include links to related Learn Guides. \"Learn\" - where documenation and Learn Guides are located. More details below. \"Blog\" - Adafruit's blog which is updated daily. \"Forums\" - Adafruit's support forums where you can seek help from customer support or the community. \"LIVE!\" - where you can find Adafruit's currently live streaming show, or if there isn't currently a live stream their main YouTube Channel. More details below. \"AdaBox\" - a link to their order page for Adabox. More on Adabox below. \"IO\" - a link to Adafruit's online service.","title":"The Adafruit website"},{"location":"getting-started/#learn-guides","text":"Adafruit offers thousands of learn guides -- Most Learn Guides are walk throughs of specific projects with Adafruit hardware and software. Some Learn Guides discuss electronics topics.","title":"Learn Guides"},{"location":"getting-started/#guides-for-beginners","text":"https://blog.adafruit.com/2021/04/20/adafruitlearningsystem-weekly-update-beginner/ \"If you are just getting started with electronics, it can be difficult to know where to begin. With almost 2,500 guides published on the Adafruit Learning System, it might seem hard to figure out which guides are best for a beginner like you. Thankfully, we have each guide tagged with its difficulty level making it easier for beginners to find the right guides. We even have a curated beginners page that has a breakdown of guides that might interest those who know nothing about electronics, all the way through those who are just getting their feet wet.\" Adafruit Learn Guides tagged \"beginner\": https://learn.adafruit.com/guides/beginner Adafruit Weekly Trending Learn Guides: https://learn.adafruit.com/guides/trending Git repo for Adafruit Learning Guides (kinda large at 1.1GB): https://github.com/adafruit/Adafruit_Learning_System_Guides","title":"Guides for Beginners"},{"location":"getting-started/#shows","text":"Aside from articles on the adafruit.com website, Adafruit broadcasts many shows throughout the week covering various topics. Most of these shows are posted to YouTube if you miss the live stream. Webpage with a description of Adafruit shows https://www.adafruit.com/shows The shows are great resources and very informative. For an absolute newbie, some shows may be hard to digest since there is often an assumption that viewers already possess some basic understanding -- although if you attend a live stream, you may ask questions during the show, and Adafruit will likely answer your questions.","title":"Shows"},{"location":"getting-started/#adabox","text":"Note Before we dive into the Adafruit ecosystem, a Beginner's Recommendation . Adabox Adabox is a discovery subscription service with curated Adafruit products. The target audience is geared towards beginners and hobbyists. I'm skeptical of many subscription services, but in the case of Adabox, I whole-heartedly recommend that beginners (and non-beginners) give it a try. Adabox is released on a Quarterly cadence (as much as possible). You have the option either to subscribe, or you can gift one or multiple Adabox to yourself (or others). Each Adabox is standalone and shipped with all the components and parts needed to construct projects. In my opinion, Adabox is for kids ages 12 and up. Younger kids may need adults to help them. The construction of the hardware is usually not that difficult -- it's more on the software/programming side where younger kids may need adult assistance. I've been an Adabox subscriber since Adabox015 , and I've back purchased Adabox007 and Adabox014 , as well as bought the equivalent kits for Adabox008 , Adabox010 , Adabox011 , Adabox012 , and Adabox013 . PROs Value of all the equipment and shipping often exceeds the amount you pay for the subscription, and Adabox includes custom extras which are not available in their regular online store. Cool unboxing live stream (recorded and available afterwards on YouTube) Entertaining and goes through the contents of the Adabox Demo of one or two projects is shown. If you attend the live stream, you may ask questions. Adabox is often accompanied with a long list of Learn Guides (projects). The Learn Guides are accessible to newbies Ask questions or request support via Adafruit's support forums. CONs Delivery of the Adabox can be delayed. The global chip shortage and supply chain delays have made it difficult for Adafruit. I received the most recent two adaboxes weeks after the official unboxing video (whereas in the past the unboxing videos were timed to coincide with the majority of customers to have already received their Adabox.) Occassionally there may be some things mentioned which could be hard for newbies to follow. (Hence, why I wrote this guide.)","title":"Adabox"},{"location":"getting-started/#list-of-adaboxes","text":"Adabox Release Date Description Adabox001 11/2016 Welcome to feather - Feather 32u4 Adalogger, Neopixel feather wing, LCD 16x2, Piezo buzzer, TMP36 sensor, etc Adabox002 12/2016 Making Things Move - Feather Bluetooth LE Mini Robot - Feather 32u4 Bluefruit LE, DC Motor and Stepper FeatherWing, Piezo buzzer, etc Adabox003 5/2017 The World of IoT - Feather Huzzah with ESP8266 WiFi, Featherwing OLED 128x32, DHT22 sensor, Micro servo, PIR sensor, etc Adabox004 8/2017 Making Things Dance - Feather Huzzah with ESP8266 WiFi, MusicMaker Featherwing, 3W 4ohm speaker, etc Adabox005 9/2017 Break for Pi - Raspberry Pi Zero, Adafruit Joy Bonnet, Hammer Headers, etc Adabox006 1/2018 CircuitPython - Circuit Playground Express, Alligator clips, etc Adabox007 6/2018 Spy - Gemma M0, lock picks, practice lock, Piezo buzzer, etc https://www.adafruit.com/adabox007 Adabox008 10/2018 Octo Crickit MakeRobotFriend - Circuit Playground Express, Adafruit CRICKIT for Circuit Playground Express, etc https://www.adafruit.com/adabox008 Adabox009 10/2018 Hallowing - Adafruit Hallowing M0 Express, Micro Servo, PIR sensor, Neopixel LED strip, etc Adabox010 1/2019 Rainbow Trellis - Adafruit NeoTrellis M4, etc https://www.adafruit.com/adabox010 Adabox011 4/2019 PyPortal - PyPortal, PyPortal Desktop Enclosure kit https://www.adafruit.com/adabox011 Adabox012 7/2019 PyGamer - PyGamer, PyGamer acrylic enclosure kit, etc https://www.adafruit.com/adabox012 Adabox013 9/2019 Monster M4sk - The Monster M4sk, etc https://www.adafruit.com/adabox013 Adabox014 12/2019 Merry Adaboxmas - Circuit Playground Bluefruit, TFT Gizmo, snow globe, etc https://www.adafruit.com/adabox014 Adabox015 7/2020 Come to your Sensors - Adafruit CLUE, Adafruit Bonsai Buckaroo, two Alligator clips, water pump, etc https://www.adafruit.com/adabox015 Adabox016 10/2020 MatrixPortal - MatrixPortal M4, 64x32 RGB Matrix, LED Diffusion Acrylic, etc https://www.adafruit.com/adabox016 Adabox017 12/2020 Good Fortune Ahead - MagTag, Neopixel strip, Magnetic whiteboard, etc https://www.adafruit.com/adabox017 Adabox018 5/17/2021 No place like home - FunHouse, mini PIR sensor, ultrasonic distance sensor, etc https://www.adafruit.com/adabox018 Adabox019 7/31/2021 Macropad https://www.adafruit.com/adabox019 Adabox020 10/27/2021 LED Glasses https://www.adafruit.com/adabox020/","title":"List of Adaboxes"},{"location":"getting-started/#other-media","text":"Aside from Video https://www.adafruit.com/shows Adafruit is dedicated to providing you information in your chosen way. Newsletters Blog Instagram Reddit Discord","title":"Other Media"},{"location":"getting-started/#next-steps","text":"Next Steps This page was last updated on 2022-03-04 16:45:07 -0500.","title":"Next Steps"},{"location":"getting-started/website-structure/","text":"How this website is organized This website has three main sections, Hardware , CircuitPython , and Glossary For beginners, the Hardware and CircuitPython sections offer an opinionated roadmap/walkthrough of the Adafruit ecosystem. For more experienced people or to quickly look up the definition of a specific term, feel free to jump to the Glossary. Hardware Adafruit is an open-source hardware company which designs custom hardware and components. The Hardware section will explore Adafruit lingo and branding. Hardware - Overview CircuitPython This website will focus on CircuitPython which is a version of python for microcontrollers recommended for beginners who are just getting started. CircuitPython - Overview Glossary Definitions for various terms, listed in alphabetical order. Glossary - Index This page was last updated on 2022-02-23 11:15:07 -0500.","title":"How Website is Organized"},{"location":"getting-started/website-structure/#how-this-website-is-organized","text":"This website has three main sections, Hardware , CircuitPython , and Glossary For beginners, the Hardware and CircuitPython sections offer an opinionated roadmap/walkthrough of the Adafruit ecosystem. For more experienced people or to quickly look up the definition of a specific term, feel free to jump to the Glossary.","title":"How this website is organized"},{"location":"getting-started/website-structure/#hardware","text":"Adafruit is an open-source hardware company which designs custom hardware and components. The Hardware section will explore Adafruit lingo and branding. Hardware - Overview","title":"Hardware"},{"location":"getting-started/website-structure/#circuitpython","text":"This website will focus on CircuitPython which is a version of python for microcontrollers recommended for beginners who are just getting started. CircuitPython - Overview","title":"CircuitPython"},{"location":"getting-started/website-structure/#glossary","text":"Definitions for various terms, listed in alphabetical order. Glossary - Index This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Glossary"},{"location":"glossary/","text":"Index Adafruit Feather aka Feather Adafruit Featherwing aka Featherwing Adafruit IO AirLift Backpack BFF Bundlefly Cape CircuitPython Circuit Pyaground Clue Connectors Crickit Feather FeatherWing Glider GPIO Grove HAT I2C IOT Itsy Bitsy ItsyBitsy (Small) JST JST PH - see JST JST SH - see JST Metro Microcontroller NeoPixel PyLeap PWM QT Py QT Py (Tiny) QWIIC Rasbperry Pi RP2040 Shield SPI STEMMA STEMMA QT Teensy WipperSnapper","title":"Index"},{"location":"glossary/#index","text":"Adafruit Feather aka Feather Adafruit Featherwing aka Featherwing Adafruit IO AirLift Backpack BFF Bundlefly Cape CircuitPython Circuit Pyaground Clue Connectors Crickit Feather FeatherWing Glider GPIO Grove HAT I2C IOT Itsy Bitsy ItsyBitsy (Small) JST JST PH - see JST JST SH - see JST Metro Microcontroller NeoPixel PyLeap PWM QT Py QT Py (Tiny) QWIIC Rasbperry Pi RP2040 Shield SPI STEMMA STEMMA QT Teensy WipperSnapper","title":"Index"},{"location":"glossary/adafruit_io/","text":"Adafruit IO Back to Index Related IOT , WipperSnapper Adafruit IO Quote The internet of things for everyone The easiest way to stream,log, and interact with your data WIP https://blog.adafruit.com/2022/02/08/adafruit-io-new-dashboard-blocks-and-block-changes/ We have two new block additions ready for you to use in your IO dashboards. The first is the Divider Block. This block is a simple way to help you organize your dashboard and break it up a bit. You can stretch the block horizontally or vertically. Basically, just edit the block layout and drag and drop to where you would like the line divided. It allows for a couple of line widths as well. The second new block is the Battery Block. This block takes a value from 0-100.0 and displays the percentage left in a battery icon. It also allows for the text of the value to be displayed, similar to the options on a phone. This block works particularly well paired with the Adafruit LC709203F Fuel Gauge and Battery Monitor. This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Adafruit IO"},{"location":"glossary/adafruit_io/#adafruit-io","text":"","title":"Adafruit IO"},{"location":"glossary/adafruit_io/#back-to-index","text":"Related IOT , WipperSnapper Adafruit IO Quote The internet of things for everyone The easiest way to stream,log, and interact with your data WIP https://blog.adafruit.com/2022/02/08/adafruit-io-new-dashboard-blocks-and-block-changes/ We have two new block additions ready for you to use in your IO dashboards. The first is the Divider Block. This block is a simple way to help you organize your dashboard and break it up a bit. You can stretch the block horizontally or vertically. Basically, just edit the block layout and drag and drop to where you would like the line divided. It allows for a couple of line widths as well. The second new block is the Battery Block. This block takes a value from 0-100.0 and displays the percentage left in a battery icon. It also allows for the text of the value to be displayed, similar to the options on a phone. This block works particularly well paired with the Adafruit LC709203F Fuel Gauge and Battery Monitor. This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/airlift/","text":"AirLift Back to Index Related Adafruit IO WIP AirLift Learn Guide: Adafruit AirLift ESP32 WiFi Co-Processor Breakout Learn Guide: Adafruit IO Basics: AirLift Learn Guide: Adafruit AirLift FeatherWing - ESP32 WiFi Co-Processor This page was last updated on 2022-03-03 15:45:07 -0500.","title":"AirLift"},{"location":"glossary/airlift/#airlift","text":"","title":"AirLift"},{"location":"glossary/airlift/#back-to-index","text":"Related Adafruit IO WIP AirLift Learn Guide: Adafruit AirLift ESP32 WiFi Co-Processor Breakout Learn Guide: Adafruit IO Basics: AirLift Learn Guide: Adafruit AirLift FeatherWing - ESP32 WiFi Co-Processor This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/backpack/","text":"Backpack Back to Index WIP Backpack LED backpacks for 7 Segment or alphanumeric displays As of 1/19/2022 a few of these have been updated with Stemma QT to have easy setup without the need for soldering. Example products Adafruit 7-Segment LED Matrix Backpack - STEMMA QT / qwiic $5.95 https://www.adafruit.com/product/877 Adafruit 0.56\" 4-Digit 7-Segment Display w/I2C Backpack - White - STEMMA QT / qwiic $10.95 https://www.adafruit.com/product/1002 Adafruit 0.56\" 4-Digit 7-Segment Display w/ I2C Backpack - Blue - STEMMA QT / qwiic $11.95 https://www.adafruit.com/product/881 dafruit 0.56\" 4-Digit 7-Segment Display with I2C Backpack - Red - STEMMA QT / qwiic $9.95 https://www.adafruit.com/product/878 CircuitPython Library https://github.com/adafruit/Adafruit_CircuitPython_HT16K33 Additional Reference https://learn.adafruit.com/led-backpack-displays-on-raspberry-pi-and-beaglebone-black This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Backpack"},{"location":"glossary/backpack/#backpack","text":"","title":"Backpack"},{"location":"glossary/backpack/#back-to-index","text":"WIP Backpack LED backpacks for 7 Segment or alphanumeric displays As of 1/19/2022 a few of these have been updated with Stemma QT to have easy setup without the need for soldering. Example products Adafruit 7-Segment LED Matrix Backpack - STEMMA QT / qwiic $5.95 https://www.adafruit.com/product/877 Adafruit 0.56\" 4-Digit 7-Segment Display w/I2C Backpack - White - STEMMA QT / qwiic $10.95 https://www.adafruit.com/product/1002 Adafruit 0.56\" 4-Digit 7-Segment Display w/ I2C Backpack - Blue - STEMMA QT / qwiic $11.95 https://www.adafruit.com/product/881 dafruit 0.56\" 4-Digit 7-Segment Display with I2C Backpack - Red - STEMMA QT / qwiic $9.95 https://www.adafruit.com/product/878 CircuitPython Library https://github.com/adafruit/Adafruit_CircuitPython_HT16K33 Additional Reference https://learn.adafruit.com/led-backpack-displays-on-raspberry-pi-and-beaglebone-black This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/blinka/","text":"Blinka Back to Index Related microcontroller , CircuitPython WIP Blinka, our CircuitPython library compatibility layer for Single Board Computers, or SBCs. More techincal guides on how to add SBC to Blinka: First step https://learn.adafruit.com/adding-a-single-board-computer-to-platformdetect-for-blinka Second step https://learn.adafruit.com/adding-a-single-board-computer-to-blinka Ordered 1/20/2021 - Delivered 1/23/2021 NOTE: there's a related article https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-raspberry-pi-pico - [ ] MCP2221A USB I2C/GPIO Breakout Breakout board to use Stemma QT or Grove Sensors on your computer directly via usb Delivered 1/23/2021 Adafruit MCP2221A breakout board https://www.adafruit.com/product/4471 $6.50 - [ ] NOTE: before you install Blinka libraries - use venv Mac: python3 -m venv .virtualenvs/mcp2221 or on Windows: python -m venv .virtualenvs/mcp2221 Blinka brings CircuitPython APIs and CircuitPython libraries to single board computers (SBCs). It is a pip installable Python library that runs in normal \u201cdesktop\u201d Python. One can port their microcontroller code to an SBC or visa versa! CircuitPython Libraries on any Computer with MCP2221 https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-mcp2221 Update Blinka/Platform Libraries - Most issues can be solved by forcing Python to upgrade to the latest blinka / platform-detect libraries. On Raspberry Pi, try running: sudo python3 -m pip install --upgrade --force-reinstall adafruit-blinka . On my Mac just run pip install --upgrade --force-reinstall adafruit-blinka CircuitPython Libraries and Jupyter Notebook on any Computer with MCP2221 https://learn.adafruit.com/jupyter-on-any-computer-with-circuitpython-libraries-and-mcp2221 Learn: Google Docs Sensor Logging From Your PC https://learn.adafruit.com/gdocs-sensor-logging-from-your-pc JPs Product Pick of the Week 1/12/21 MCP2221A USB I2C/GPIO Breakout https://youtu.be/_nNe-YM7MCU?t=261 - [ ] Monochrome 1.3\" 128x64 OLED graphic display - STEMMA QT / Qwiic https://www.adafruit.com/product/938 $19.95 (two) https://learn.adafruit.com/monochrome-oled-breakouts Learn: CircuitPython BLE Libraries on Any Computer https://learn.adafruit.com/circuitpython-ble-libraries-on-any-computer The Adafruit Blinka bleio library makes this possible. It is a regular Python library that runs on desktop Python, not on CircuitPython boards. It re-implements the _bleio module that is part of CircuitPython: all our BLE libraries are ultimately based on _bleio . The Blinka bleio library only supports acting in a BLE central role. You can connect to peripheral devices, such as heart rate monitors, pulse oximeters, bicycle sensors, etc., but you cannot act as a peripheral yourself with this code. For Mac NOTE: pre-requisite is command line tools for python3 python3 -m venv .virtualenvs/mcp2221 . .virtualenvs/mcp2221/bin/activate pip install hidapi pip install --upgrade --force-reinstall adafruit-blinka (mcp2221) jliu@JEFFREYs-MBP ~ % pip install adafruit-circuitpython-ahtx0 export BLINKA_MCP2221=\"1\" (mcp2221) jliu@JEFFREYs-MBP ~ % python Python 3.7.3 (default, Apr 24 2020, 18:51:23) [Clang 11.0.3 (clang-1103.0.32.62)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> import board >>> dir(board) ['G0', 'G1', 'G2', 'G3', 'I2C', 'SCL', 'SDA', 'SPI', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'ap_board', 'board_id', 'detector', 'pin', 'sys'] >>> exit() For Windows PS C:\\Users\\jeffrey.liu> python --verison Python 3.9.2 python -m venv .virtualenvs/mcp2221 # NOTE: recall that git bash python cli repl just hangs and does not load - so open Powershell window instead PS C:\\Users\\jeffrey.liu> .virtualenvs\\mcp2221\\Scripts\\activate.ps1 pip install hidapi pip install --upgrade --force-reinstall adafruit-blinka pip install adafruit-circuitpython-ahtx0 $env:BLINKA_MCP2221=\"1\" python Python 3.9.2 (tags/v3.9.2:1a79785, Feb 19 2021, 13:44:55) [MSC v.1928 64 bit (AMD64)] on win32 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> import board >>> dir(board) ['G0', 'G1', 'G2', 'G3', 'I2C', 'SCL', 'SDA', 'SPI', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'ap_board', 'board_id', 'detector', 'pin', 'sys'] >>> exit() For Windows upgrade adafruit-blinka output: PS C:\\Users\\jeffrey.liu> .virtualenvs\\mcp2221\\Scripts\\activate.ps1 (mcp2221) PS C:\\Users\\jeffrey.liu> pip list Package Version ----------------------- ------- Adafruit-Blinka 6.2.2 Adafruit-PlatformDetect 3.1.1 Adafruit-PureIO 1.1.8 hidapi 0.10.1 pip 20.2.3 pyftdi 0.52.9 pyserial 3.5 pyusb 1.1.1 setuptools 49.2.1 WARNING: You are using pip version 20.2.3; however, version 21.0.1 is available. You should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command. (mcp2221) PS C:\\Users\\jeffrey.liu> pip install --upgrade --force-reinstall adafruit-blinka Collecting adafruit-blinka Downloading Adafruit-Blinka-6.3.0.tar.gz (118 kB) Collecting Adafruit-PlatformDetect>=3.1.0 Downloading Adafruit-PlatformDetect-3.2.0.tar.gz (29 kB) Collecting Adafruit-PureIO>=1.1.7 Using cached Adafruit_PureIO-1.1.8.tar.gz (26 kB) Collecting pyftdi>=0.40.0 Using cached pyftdi-0.52.9-py3-none-any.whl (139 kB) Collecting pyserial>=3.0 Using cached pyserial-3.5-py2.py3-none-any.whl (90 kB) Collecting pyusb>=1.0.0 Using cached pyusb-1.1.1-py3-none-any.whl (58 kB) ... ... ... Attempting uninstall: adafruit-blinka Found existing installation: Adafruit-Blinka 6.2.2 Uninstalling Adafruit-Blinka-6.2.2: Successfully uninstalled Adafruit-Blinka-6.2.2 Running setup.py install for adafruit-blinka ... done Successfully installed Adafruit-PlatformDetect-3.2.0 Adafruit-PureIO-1.1.8 adafruit-blinka-6.3.0 pyftdi-0.52.9 pyserial-3.5 pyusb-1.1.1 WARNING: You are using pip version 20.2.3; however, version 21.0.1 is available. You should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command. (mcp2221) PS C:\\Users\\jeffrey.liu> pip list Package Version ----------------------- ------- Adafruit-Blinka 6.3.0 Adafruit-PlatformDetect 3.2.0 Adafruit-PureIO 1.1.8 hidapi 0.10.1 pip 20.2.3 pyftdi 0.52.9 pyserial 3.5 pyusb 1.1.1 setuptools 49.2.1 WARNING: You are using pip version 20.2.3; however, version 21.0.1 is available. You should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command. [ ] A brief history of microcontrollers and a Great demo by Ladyada for using CircuitPython and Blinka to connect to a temperature sensor three ways (Raspberry Pi Pico, Raspberry Pi 4, and MCP2221A) https://www.youtube.com/watch?v=jZnDCs80b_A&t=3405s 1/31/2021 Reference: Page 48 of RPi_Pi Pico_Digital Edition.pdf NOTE: UTIME VS TIME If you\u2019ve programmed in Python before, you\u2019ll be used to using the \u2018time\u2019 library. The utime library is a version designed for microcontrollers like the Pico \u2013 the \u2018u\u2019 standing for \u2018\u03bc\u2019, the Greek letter \u2018mu\u2019, which is used as a shorthand for \u2018micro\u2019. If you forget and use import time, don\u2019t worry: MicroPython will automatically use the utime library instead. Raspberry Pi Pico code import time import board import busio import adafruit_ahtx0 i2c_bus = busio.I2C(board.GP1, board.GP0) sensor = adafruit_ahtx0.AHTx0(i2c_bus) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"Humidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) Raspberry Pi 4 code import time import board # note import busio not needed for Raspberry Pi import adafruit_ahtx0 # create the sensor object using I2C sensor = adafruit_ahtx0.AHTx0(board.I2C()) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"Humidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) MCP2221 code import time import board import busio import adafruit_ahtx0 # Create library object using our Bus I2C port i2c = busio.I2C(board.SCL, board.SDA) sensor = adafruit_ahtx0.AHTx0(i2c) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"Humidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) MCP2221 code without busio import time import board import adafruit_ahtx0 # Create library object using our Bus I2C port i2c = board.I2C() sensor = adafruit_ahtx0.AHTx0(i2c) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"\\nHumidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) Ordered 2/6/2021 - Delivered 2/17/2021 - [ ] AHT20 Temperature & Humidity Sensor breakout https://www.adafruit.com/product/4566 $4.50 Learn: Adafruit AHT20 Temperature & Humidity Sensor https://learn.adafruit.com/adafruit-aht20 Sample output: (mcp2221) jliu@JEFFREYs-MBP ~ % python test.py Temperature: 24.2 C Humidity: 29.6 % Temperature: 24.1 C Humidity: 29.7 % Temperature: 24.1 C Humidity: 29.8 % Temperature: 24.0 C Humidity: 29.9 % ^CTraceback (most recent call last): File \"test.py\", line 13, in &lt;module&gt; time.sleep(2) KeyboardInterrupt NOTE: there's a related article https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-raspberry-pi-pico - [ ] FT232H General Purpose USB to I2C, SPI, GPIO Breakout board to use Stemma QT or Grove Sensors on your computer directly via usb https://www.adafruit.com/product/2264 $15 Delivered 10/27/2021 CircuitPython Libraries on any Computer with FT232H https://learn.adafruit.com/circuitpython-on-any-computer-with-ft232h The support for the FT232H in Blinka utilizes the pyftdi library by eblot . This in turn relies on a few other things, like libusb. So before we can actually use the FT232H, we need to get everything setup. See the OS specific sections for what we went through to get things working for each. NOTE: 10/28/2021 useless on Mac OS unless you use homebrew python. Bleh! Mac OS: pip install --upgrade pip pip install libusb pyftdi adafruit-blinka pip install --upgrade --force-reinstall adafruit-blinka (ft232h) jliu@JEFFREYs-MBP ~ % pip list Package Version Adafruit-Blinka 6.15.0 Adafruit-PlatformDetect 3.17.1 Adafruit-PureIO 1.1.9 libusb 1.0.23b7 pip 21.3.1 pyftdi 0.53.3 pyserial 3.5 pyusb 1.2.1 setuptools 58.3.0 export BLINKA_FT232H=1 import board >>> import board Traceback (most recent call last): File \"&lt;stdin&gt;\", line 1, in &lt;module&gt; File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/board.py\", line 40, in &lt;module&gt; from adafruit_blinka.agnostic import board_id, detector File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/adafruit_blinka/agnostic/__init__.py\", line 18, in &lt;module&gt; chip_id = detector.chip.id File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/adafruit_platformdetect/chip.py\", line 79, in id count = len(UsbTools.find_all([(0x0403, 0x6014)])) File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 95, in find_all devs.update(UsbTools._find_devices(vid, pid, nocache)) File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 597, in _find_devices backend = cls._load_backend() File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 663, in _load_backend raise ValueError('No backend available') ValueError: No backend available >>> exit() https://forums.adafruit.com/viewtopic.php?f=8&t=182556&p=887762&hilit=ft232h+ValueError%3A+No+backend+available#p887762 https://github.com/pyusb/pyusb/issues/355 https://forums.adafruit.com/viewtopic.php?f=19&t=182685 \"No backend available\" error while testing the install, be sure you have installed your version of Python3 via Homebrew, otherwise the pyftdi and adafruit-blinka libraries will not be able to find the libusb package that you installed with Homebrew. So the conclusion is that the FT232H is useless on the Mac unless you use Homebrew. Bleh! Forum question I posted regarding busio: https://forums.adafruit.com/viewtopic.php?f=60&t=175971&p=857191#p857191 Very thorough responses there on how \"import board\" automagically sets to the default board.SCL and board.SDA for both Blinka and for firmware. Blinka: https://github.com/adafruit/Adafruit_Blinka/blob/813d634f2ca50a93fa6dfb53e18aa09403be2440/src/board.py#L213 C code (firmware): https://github.com/adafruit/circuitpython/blob/b69cb0144ca0d54011be540213d1e25e673a63de/shared-module/board/ init .c#L57 In a nutshell: i2c = board.I2C() is always a shortcut for import busio i2c = busio.I2C(board.SCL, board.SDA) Verifies that if one wanted to be lazy, one could just rely on the board library to define the default SCL and SDA. It seems that if you want to define different I2C buses, you would use the busio library to define that (if the hardware could support it). Hypothetical code: import board import busio i2c = busio.I2C(board.SCL, board.SDA) i2c1 = busio.I2C(board.SCL1, board.SDA1) i2c.try_lock() i2c.scan() i2c1.try_lock() i2c1.scan() References https://forums.adafruit.com/viewtopic.php?f=8&t=167829&start=15 https://www.raspberrypi.org/forums/viewtopic.php?t=33092 https://www.raspberrypi.org/forums/viewtopic.php?t=271200 https://randomnerdtutorials.com/esp32-i2c-communication-arduino-ide/ https://www.digikey.com/en/maker/projects/circuitpython-basics-i2c-and-spi/9799e0554de14af3850975dfb0174ae3 NOTE: As of 3/2021, confirmed i2c = board.I2C() works on QT Py, but it does not work on Raspberry Pi Pico. Pico generates the error: AttributeError: 'module' object has no attribute 'I2C' That's because the library doesn't define a default for the Pico: https://github.com/adafruit/circuitpython/issues/4121 You'll need to manually define via busio.I2C the board GPIO pins you are using. i2c = busio.I2C(board.GP1, board.GP0) NOTE: CircuitPython School also has a great blurb on busio https://youtu.be/rSF_b8ab2gU?t=685 Creating an I2C object for use with Stemma QT devices is super easy. Just: i2c = board.I2C() Some example code might refer to busio and pass in specific board.SDA and board.SCL objects. You should not need that if you're using Stemma QT and use the statement above. You can even avoid importing busio if you're not using it anyplace else in your code. NOTE: 10/27/2021 - CircuitPython School video \"Don't Stand So Close to Me\" has a great blurb regarding how QT Py RP2040 also needs to have the i2c object defined with busio when using the Stemma QT connector. https://youtu.be/Pn77QKCz2tM?t=918 import board import busio i2c = busio.I2C(board.SCL1, board.SDA1) Additional reference: https://forums.adafruit.com/viewtopic.php?f=60&t=183777&p=892463&hilit=qt+py+rp2040+i2c+board.I2C#p892463 The STEMMA connector on the QTPYRP2040uses a separate set of pins for I2C board.SCL1 and board.SDA1 see the guide https://learn.adafruit.com/adafruit-qt-py-2040/pinouts#stemma-qt-3091651-3 Additional References This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Blinka"},{"location":"glossary/blinka/#blinka","text":"","title":"Blinka"},{"location":"glossary/blinka/#back-to-index","text":"Related microcontroller , CircuitPython WIP Blinka, our CircuitPython library compatibility layer for Single Board Computers, or SBCs. More techincal guides on how to add SBC to Blinka: First step https://learn.adafruit.com/adding-a-single-board-computer-to-platformdetect-for-blinka Second step https://learn.adafruit.com/adding-a-single-board-computer-to-blinka Ordered 1/20/2021 - Delivered 1/23/2021 NOTE: there's a related article https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-raspberry-pi-pico - [ ] MCP2221A USB I2C/GPIO Breakout Breakout board to use Stemma QT or Grove Sensors on your computer directly via usb Delivered 1/23/2021 Adafruit MCP2221A breakout board https://www.adafruit.com/product/4471 $6.50 - [ ] NOTE: before you install Blinka libraries - use venv Mac: python3 -m venv .virtualenvs/mcp2221 or on Windows: python -m venv .virtualenvs/mcp2221 Blinka brings CircuitPython APIs and CircuitPython libraries to single board computers (SBCs). It is a pip installable Python library that runs in normal \u201cdesktop\u201d Python. One can port their microcontroller code to an SBC or visa versa! CircuitPython Libraries on any Computer with MCP2221 https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-mcp2221 Update Blinka/Platform Libraries - Most issues can be solved by forcing Python to upgrade to the latest blinka / platform-detect libraries. On Raspberry Pi, try running: sudo python3 -m pip install --upgrade --force-reinstall adafruit-blinka . On my Mac just run pip install --upgrade --force-reinstall adafruit-blinka CircuitPython Libraries and Jupyter Notebook on any Computer with MCP2221 https://learn.adafruit.com/jupyter-on-any-computer-with-circuitpython-libraries-and-mcp2221 Learn: Google Docs Sensor Logging From Your PC https://learn.adafruit.com/gdocs-sensor-logging-from-your-pc JPs Product Pick of the Week 1/12/21 MCP2221A USB I2C/GPIO Breakout https://youtu.be/_nNe-YM7MCU?t=261 - [ ] Monochrome 1.3\" 128x64 OLED graphic display - STEMMA QT / Qwiic https://www.adafruit.com/product/938 $19.95 (two) https://learn.adafruit.com/monochrome-oled-breakouts Learn: CircuitPython BLE Libraries on Any Computer https://learn.adafruit.com/circuitpython-ble-libraries-on-any-computer The Adafruit Blinka bleio library makes this possible. It is a regular Python library that runs on desktop Python, not on CircuitPython boards. It re-implements the _bleio module that is part of CircuitPython: all our BLE libraries are ultimately based on _bleio . The Blinka bleio library only supports acting in a BLE central role. You can connect to peripheral devices, such as heart rate monitors, pulse oximeters, bicycle sensors, etc., but you cannot act as a peripheral yourself with this code. For Mac NOTE: pre-requisite is command line tools for python3 python3 -m venv .virtualenvs/mcp2221 . .virtualenvs/mcp2221/bin/activate pip install hidapi pip install --upgrade --force-reinstall adafruit-blinka (mcp2221) jliu@JEFFREYs-MBP ~ % pip install adafruit-circuitpython-ahtx0 export BLINKA_MCP2221=\"1\" (mcp2221) jliu@JEFFREYs-MBP ~ % python Python 3.7.3 (default, Apr 24 2020, 18:51:23) [Clang 11.0.3 (clang-1103.0.32.62)] on darwin Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> import board >>> dir(board) ['G0', 'G1', 'G2', 'G3', 'I2C', 'SCL', 'SDA', 'SPI', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'ap_board', 'board_id', 'detector', 'pin', 'sys'] >>> exit() For Windows PS C:\\Users\\jeffrey.liu> python --verison Python 3.9.2 python -m venv .virtualenvs/mcp2221 # NOTE: recall that git bash python cli repl just hangs and does not load - so open Powershell window instead PS C:\\Users\\jeffrey.liu> .virtualenvs\\mcp2221\\Scripts\\activate.ps1 pip install hidapi pip install --upgrade --force-reinstall adafruit-blinka pip install adafruit-circuitpython-ahtx0 $env:BLINKA_MCP2221=\"1\" python Python 3.9.2 (tags/v3.9.2:1a79785, Feb 19 2021, 13:44:55) [MSC v.1928 64 bit (AMD64)] on win32 Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> import board >>> dir(board) ['G0', 'G1', 'G2', 'G3', 'I2C', 'SCL', 'SDA', 'SPI', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'ap_board', 'board_id', 'detector', 'pin', 'sys'] >>> exit() For Windows upgrade adafruit-blinka output: PS C:\\Users\\jeffrey.liu> .virtualenvs\\mcp2221\\Scripts\\activate.ps1 (mcp2221) PS C:\\Users\\jeffrey.liu> pip list Package Version ----------------------- ------- Adafruit-Blinka 6.2.2 Adafruit-PlatformDetect 3.1.1 Adafruit-PureIO 1.1.8 hidapi 0.10.1 pip 20.2.3 pyftdi 0.52.9 pyserial 3.5 pyusb 1.1.1 setuptools 49.2.1 WARNING: You are using pip version 20.2.3; however, version 21.0.1 is available. You should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command. (mcp2221) PS C:\\Users\\jeffrey.liu> pip install --upgrade --force-reinstall adafruit-blinka Collecting adafruit-blinka Downloading Adafruit-Blinka-6.3.0.tar.gz (118 kB) Collecting Adafruit-PlatformDetect>=3.1.0 Downloading Adafruit-PlatformDetect-3.2.0.tar.gz (29 kB) Collecting Adafruit-PureIO>=1.1.7 Using cached Adafruit_PureIO-1.1.8.tar.gz (26 kB) Collecting pyftdi>=0.40.0 Using cached pyftdi-0.52.9-py3-none-any.whl (139 kB) Collecting pyserial>=3.0 Using cached pyserial-3.5-py2.py3-none-any.whl (90 kB) Collecting pyusb>=1.0.0 Using cached pyusb-1.1.1-py3-none-any.whl (58 kB) ... ... ... Attempting uninstall: adafruit-blinka Found existing installation: Adafruit-Blinka 6.2.2 Uninstalling Adafruit-Blinka-6.2.2: Successfully uninstalled Adafruit-Blinka-6.2.2 Running setup.py install for adafruit-blinka ... done Successfully installed Adafruit-PlatformDetect-3.2.0 Adafruit-PureIO-1.1.8 adafruit-blinka-6.3.0 pyftdi-0.52.9 pyserial-3.5 pyusb-1.1.1 WARNING: You are using pip version 20.2.3; however, version 21.0.1 is available. You should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command. (mcp2221) PS C:\\Users\\jeffrey.liu> pip list Package Version ----------------------- ------- Adafruit-Blinka 6.3.0 Adafruit-PlatformDetect 3.2.0 Adafruit-PureIO 1.1.8 hidapi 0.10.1 pip 20.2.3 pyftdi 0.52.9 pyserial 3.5 pyusb 1.1.1 setuptools 49.2.1 WARNING: You are using pip version 20.2.3; however, version 21.0.1 is available. You should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command. [ ] A brief history of microcontrollers and a Great demo by Ladyada for using CircuitPython and Blinka to connect to a temperature sensor three ways (Raspberry Pi Pico, Raspberry Pi 4, and MCP2221A) https://www.youtube.com/watch?v=jZnDCs80b_A&t=3405s 1/31/2021 Reference: Page 48 of RPi_Pi Pico_Digital Edition.pdf NOTE: UTIME VS TIME If you\u2019ve programmed in Python before, you\u2019ll be used to using the \u2018time\u2019 library. The utime library is a version designed for microcontrollers like the Pico \u2013 the \u2018u\u2019 standing for \u2018\u03bc\u2019, the Greek letter \u2018mu\u2019, which is used as a shorthand for \u2018micro\u2019. If you forget and use import time, don\u2019t worry: MicroPython will automatically use the utime library instead. Raspberry Pi Pico code import time import board import busio import adafruit_ahtx0 i2c_bus = busio.I2C(board.GP1, board.GP0) sensor = adafruit_ahtx0.AHTx0(i2c_bus) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"Humidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) Raspberry Pi 4 code import time import board # note import busio not needed for Raspberry Pi import adafruit_ahtx0 # create the sensor object using I2C sensor = adafruit_ahtx0.AHTx0(board.I2C()) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"Humidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) MCP2221 code import time import board import busio import adafruit_ahtx0 # Create library object using our Bus I2C port i2c = busio.I2C(board.SCL, board.SDA) sensor = adafruit_ahtx0.AHTx0(i2c) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"Humidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) MCP2221 code without busio import time import board import adafruit_ahtx0 # Create library object using our Bus I2C port i2c = board.I2C() sensor = adafruit_ahtx0.AHTx0(i2c) while True: print(\"\\nTemperature: %0.1f C\" % sensor.temperature) print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32)) print(\"\\nHumidity: %0.1f %%\" % sensor.relative_humidity) time.sleep(2) Ordered 2/6/2021 - Delivered 2/17/2021 - [ ] AHT20 Temperature & Humidity Sensor breakout https://www.adafruit.com/product/4566 $4.50 Learn: Adafruit AHT20 Temperature & Humidity Sensor https://learn.adafruit.com/adafruit-aht20 Sample output: (mcp2221) jliu@JEFFREYs-MBP ~ % python test.py Temperature: 24.2 C Humidity: 29.6 % Temperature: 24.1 C Humidity: 29.7 % Temperature: 24.1 C Humidity: 29.8 % Temperature: 24.0 C Humidity: 29.9 % ^CTraceback (most recent call last): File \"test.py\", line 13, in &lt;module&gt; time.sleep(2) KeyboardInterrupt NOTE: there's a related article https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-raspberry-pi-pico - [ ] FT232H General Purpose USB to I2C, SPI, GPIO Breakout board to use Stemma QT or Grove Sensors on your computer directly via usb https://www.adafruit.com/product/2264 $15 Delivered 10/27/2021 CircuitPython Libraries on any Computer with FT232H https://learn.adafruit.com/circuitpython-on-any-computer-with-ft232h The support for the FT232H in Blinka utilizes the pyftdi library by eblot . This in turn relies on a few other things, like libusb. So before we can actually use the FT232H, we need to get everything setup. See the OS specific sections for what we went through to get things working for each. NOTE: 10/28/2021 useless on Mac OS unless you use homebrew python. Bleh! Mac OS: pip install --upgrade pip pip install libusb pyftdi adafruit-blinka pip install --upgrade --force-reinstall adafruit-blinka (ft232h) jliu@JEFFREYs-MBP ~ % pip list Package Version Adafruit-Blinka 6.15.0 Adafruit-PlatformDetect 3.17.1 Adafruit-PureIO 1.1.9 libusb 1.0.23b7 pip 21.3.1 pyftdi 0.53.3 pyserial 3.5 pyusb 1.2.1 setuptools 58.3.0 export BLINKA_FT232H=1 import board >>> import board Traceback (most recent call last): File \"&lt;stdin&gt;\", line 1, in &lt;module&gt; File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/board.py\", line 40, in &lt;module&gt; from adafruit_blinka.agnostic import board_id, detector File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/adafruit_blinka/agnostic/__init__.py\", line 18, in &lt;module&gt; chip_id = detector.chip.id File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/adafruit_platformdetect/chip.py\", line 79, in id count = len(UsbTools.find_all([(0x0403, 0x6014)])) File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 95, in find_all devs.update(UsbTools._find_devices(vid, pid, nocache)) File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 597, in _find_devices backend = cls._load_backend() File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 663, in _load_backend raise ValueError('No backend available') ValueError: No backend available >>> exit() https://forums.adafruit.com/viewtopic.php?f=8&t=182556&p=887762&hilit=ft232h+ValueError%3A+No+backend+available#p887762 https://github.com/pyusb/pyusb/issues/355 https://forums.adafruit.com/viewtopic.php?f=19&t=182685 \"No backend available\" error while testing the install, be sure you have installed your version of Python3 via Homebrew, otherwise the pyftdi and adafruit-blinka libraries will not be able to find the libusb package that you installed with Homebrew. So the conclusion is that the FT232H is useless on the Mac unless you use Homebrew. Bleh! Forum question I posted regarding busio: https://forums.adafruit.com/viewtopic.php?f=60&t=175971&p=857191#p857191 Very thorough responses there on how \"import board\" automagically sets to the default board.SCL and board.SDA for both Blinka and for firmware. Blinka: https://github.com/adafruit/Adafruit_Blinka/blob/813d634f2ca50a93fa6dfb53e18aa09403be2440/src/board.py#L213 C code (firmware): https://github.com/adafruit/circuitpython/blob/b69cb0144ca0d54011be540213d1e25e673a63de/shared-module/board/ init .c#L57 In a nutshell: i2c = board.I2C() is always a shortcut for import busio i2c = busio.I2C(board.SCL, board.SDA) Verifies that if one wanted to be lazy, one could just rely on the board library to define the default SCL and SDA. It seems that if you want to define different I2C buses, you would use the busio library to define that (if the hardware could support it). Hypothetical code: import board import busio i2c = busio.I2C(board.SCL, board.SDA) i2c1 = busio.I2C(board.SCL1, board.SDA1) i2c.try_lock() i2c.scan() i2c1.try_lock() i2c1.scan() References https://forums.adafruit.com/viewtopic.php?f=8&t=167829&start=15 https://www.raspberrypi.org/forums/viewtopic.php?t=33092 https://www.raspberrypi.org/forums/viewtopic.php?t=271200 https://randomnerdtutorials.com/esp32-i2c-communication-arduino-ide/ https://www.digikey.com/en/maker/projects/circuitpython-basics-i2c-and-spi/9799e0554de14af3850975dfb0174ae3 NOTE: As of 3/2021, confirmed i2c = board.I2C() works on QT Py, but it does not work on Raspberry Pi Pico. Pico generates the error: AttributeError: 'module' object has no attribute 'I2C' That's because the library doesn't define a default for the Pico: https://github.com/adafruit/circuitpython/issues/4121 You'll need to manually define via busio.I2C the board GPIO pins you are using. i2c = busio.I2C(board.GP1, board.GP0) NOTE: CircuitPython School also has a great blurb on busio https://youtu.be/rSF_b8ab2gU?t=685 Creating an I2C object for use with Stemma QT devices is super easy. Just: i2c = board.I2C() Some example code might refer to busio and pass in specific board.SDA and board.SCL objects. You should not need that if you're using Stemma QT and use the statement above. You can even avoid importing busio if you're not using it anyplace else in your code. NOTE: 10/27/2021 - CircuitPython School video \"Don't Stand So Close to Me\" has a great blurb regarding how QT Py RP2040 also needs to have the i2c object defined with busio when using the Stemma QT connector. https://youtu.be/Pn77QKCz2tM?t=918 import board import busio i2c = busio.I2C(board.SCL1, board.SDA1) Additional reference: https://forums.adafruit.com/viewtopic.php?f=60&t=183777&p=892463&hilit=qt+py+rp2040+i2c+board.I2C#p892463 The STEMMA connector on the QTPYRP2040uses a separate set of pins for I2C board.SCL1 and board.SDA1 see the guide https://learn.adafruit.com/adafruit-qt-py-2040/pinouts#stemma-qt-3091651-3 Additional References This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/bundlefly/","text":"Bundlefly Back to Index All CircuitPython guides on the Adafruit Learning System have a feature called Bundlefly which allow users to download one zip file which includes the code, all required libraries, and if needed, asset files. Find the download link called Download Project Bundle located at the beginning of any CircuitPython code section. Once you have extracted all the files from the downloaded zip file, you just drag-and-drop them onto your microntroller CIRCUITPY drive. Adafruit Bundlefly is the easiest way to get a project working, regardless of whether you\u2019re a beginner or an expert. Adafruit automatically checks which libraries and assets are required for the project and bundle them up for you. No more digging through a huge list of libraries to find the ones you need No more looking for other files or dependencies. Simple one-click download via Download Project Bundle link Extract the files and copy to your CIRCUITPY drive Additional References https://blog.adafruit.com/2021/04/14/adafruitlearningsystem-weekly-update-project-bundle/ This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Bundlefly"},{"location":"glossary/bundlefly/#bundlefly","text":"","title":"Bundlefly"},{"location":"glossary/bundlefly/#back-to-index","text":"All CircuitPython guides on the Adafruit Learning System have a feature called Bundlefly which allow users to download one zip file which includes the code, all required libraries, and if needed, asset files. Find the download link called Download Project Bundle located at the beginning of any CircuitPython code section. Once you have extracted all the files from the downloaded zip file, you just drag-and-drop them onto your microntroller CIRCUITPY drive. Adafruit Bundlefly is the easiest way to get a project working, regardless of whether you\u2019re a beginner or an expert. Adafruit automatically checks which libraries and assets are required for the project and bundle them up for you. No more digging through a huge list of libraries to find the ones you need No more looking for other files or dependencies. Simple one-click download via Download Project Bundle link Extract the files and copy to your CIRCUITPY drive Additional References https://blog.adafruit.com/2021/04/14/adafruitlearningsystem-weekly-update-project-bundle/ This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/cape/","text":"Cape Back to Index Cape WIP Capes Example: 4.3\" LCD Capacitive Touchscreen Display Cape for BeagleBone https://www.adafruit.com/product/3396 This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Cape"},{"location":"glossary/cape/#cape","text":"","title":"Cape"},{"location":"glossary/cape/#back-to-index","text":"Cape WIP Capes Example: 4.3\" LCD Capacitive Touchscreen Display Cape for BeagleBone https://www.adafruit.com/product/3396 This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/circuit_playground/","text":"Circuit Playground Back to Index Related Itsy Bitsy , QT Py Circuit Playground is a great microcontroller for beginners. Three versions of the Circuit Playground Device Microcontroller Code RAM Cost Circuit Playground Classic ATmega32u4 Arduino only 32KB of In-System Self-Programmable Flash $19.95 Circuit Playground Express ATSAMD21 ARM Cortex M0 Arduino, CircuitPython, or MakeCode 2 MB of SPI Flash storage $24.95 Circuit Playground Bluefruit nRF52840 Cortex M4 Arduino, CircuitPython, or MakeCode 2 MB of SPI Flash storage $24.95 NOTE: because the Circuit Playground Classic only has 32KB of storage, it is unable to run CircuitPython. Circuit Playground Bluefruit Recommended: First Adafruit Hardware for Beginners Note A Beginner's Recommendation . CircuitPlayground Bluefruit Among the many Adafruit devices, the CircuitPlayground Bluefruit is a more accesible to beginners: Can run CircuitPython Alligator clips instead of soldering Loaded with features: tons of sensors, accelerometer, neopixels, speaker, etc About the size of a Ritz cracker Supported by many Adafruit learn guides as well as third-party online tutorials such as CircuitPython School and Bluefruit School Source: https://learn.adafruit.com/assets/80460 Use with STEMMA QT components Here is a cable which has alligator clips on one end and STEMMA QT on the other: JST SH 4-pin Cable with Alligator Clips - STEMMA QT You can also get the following if you're using a breadboard: Small Alligator Clip to Male Jumper Wire Bundle - 12 Pieces Additional References Adafruit Learn Guide: MakeCode for Circuit Playground Express Adafruit Learn Guide: Circuit Playground Bluefruit This page was last updated on 2022-03-12 12:51:07 -0500.","title":"Circuit Playground"},{"location":"glossary/circuit_playground/#circuit-playground","text":"","title":"Circuit Playground"},{"location":"glossary/circuit_playground/#back-to-index","text":"Related Itsy Bitsy , QT Py Circuit Playground is a great microcontroller for beginners.","title":"Back to Index"},{"location":"glossary/circuit_playground/#three-versions-of-the-circuit-playground","text":"Device Microcontroller Code RAM Cost Circuit Playground Classic ATmega32u4 Arduino only 32KB of In-System Self-Programmable Flash $19.95 Circuit Playground Express ATSAMD21 ARM Cortex M0 Arduino, CircuitPython, or MakeCode 2 MB of SPI Flash storage $24.95 Circuit Playground Bluefruit nRF52840 Cortex M4 Arduino, CircuitPython, or MakeCode 2 MB of SPI Flash storage $24.95 NOTE: because the Circuit Playground Classic only has 32KB of storage, it is unable to run CircuitPython.","title":"Three versions of the Circuit Playground"},{"location":"glossary/circuit_playground/#circuit-playground-bluefruit","text":"","title":"Circuit Playground Bluefruit"},{"location":"glossary/circuit_playground/#recommended-first-adafruit-hardware-for-beginners","text":"Note A Beginner's Recommendation . CircuitPlayground Bluefruit Among the many Adafruit devices, the CircuitPlayground Bluefruit is a more accesible to beginners: Can run CircuitPython Alligator clips instead of soldering Loaded with features: tons of sensors, accelerometer, neopixels, speaker, etc About the size of a Ritz cracker Supported by many Adafruit learn guides as well as third-party online tutorials such as CircuitPython School and Bluefruit School Source: https://learn.adafruit.com/assets/80460","title":"Recommended: First Adafruit Hardware for Beginners"},{"location":"glossary/circuit_playground/#use-with-stemma-qt-components","text":"Here is a cable which has alligator clips on one end and STEMMA QT on the other: JST SH 4-pin Cable with Alligator Clips - STEMMA QT You can also get the following if you're using a breadboard: Small Alligator Clip to Male Jumper Wire Bundle - 12 Pieces","title":"Use with STEMMA QT components"},{"location":"glossary/circuit_playground/#additional-references","text":"Adafruit Learn Guide: MakeCode for Circuit Playground Express Adafruit Learn Guide: Circuit Playground Bluefruit This page was last updated on 2022-03-12 12:51:07 -0500.","title":"Additional References"},{"location":"glossary/clue/","text":"CLUE Back to Index Related Circuit Playground , Itsy Bitsy , QT Py WIP Clue Same general form factor as Micro:Bit Here's a fun program - WORDLE clone on an Adafruit CLUE https://blog.adafruit.com/2022/02/11/a-handheld-version-of-wordle-using-a-clue-and-circuitpython-clue-circuitpython-michael_lacock/ https://forums.adafruit.com/viewtopic.php?f=60&t=188244 This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Clue"},{"location":"glossary/clue/#clue","text":"","title":"CLUE"},{"location":"glossary/clue/#back-to-index","text":"Related Circuit Playground , Itsy Bitsy , QT Py WIP Clue Same general form factor as Micro:Bit Here's a fun program - WORDLE clone on an Adafruit CLUE https://blog.adafruit.com/2022/02/11/a-handheld-version-of-wordle-using-a-clue-and-circuitpython-clue-circuitpython-michael_lacock/ https://forums.adafruit.com/viewtopic.php?f=60&t=188244 This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/connectors/","text":"Connectors Back to Index Related I2C , SPI , GPIO It used to be that in order to add sensors or components to your project you had to use a breadboard or do soldering. However in the past decade companies have begun to offer connectors which let you easily connect / disconnect components to your project without a breadboard or soldering. A major benefit of these connectors is that it makes it much more accessible for beginners. And experienced people can also benefit since it becomes much easier and quicker to prototype and build interesting projects. On this page we describe some of the more popular connectors in use today. Grove Introduced by Seeed Studio in 2010, Grove uses a proprietary 4-pin 2.0mm pin pitch connector for its range of boards and boards made in partnership with Arduino. The Grove connector can be used with analog, PWM , digital IO and I2C . While almost the same as a JST PH connector, Grove unfortunately is not compatible - they are physically too different for JST PH and Grove to be inter-changeable. Additional References on comparision of Grove to JST PH Grove compared to JST PH Grove compatability to JST PH As Grove has been around the longest, there are a large number of components available. Many Grove components can be used with Adafruit hardware. Grove is is only compatible with STEMMA I2C components. Analog, PWM and digital IO are not compatible. If a component has SDA / SCL pins, then it is an I2C device. Seeed Studio makes a Grove - QWIIC Hub to support interoperability with Sparkfun QWIIC and Adafruit STEMMA QT . Description Different from our Grove system, QWIIC is an I2C interface system initiated by Sparkfun around 2017, using a 4pin JST SH 1.0mm connector. STEMMA QT initiated by Adafruit is cross-compatible with QWIIC, as they use the same connector/cable. To better support different types of interface systems, we provide Grove - QWIIC Hub, which enables you easily connect the I2C devices with Grove/QWIIC/STEMMA QT interface, get the best use of your devices/controller of different interfaces. Additional References Youtube: Grove 10th Anniversary Documentary 12/31/2020 Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT JST JST is an acronym for the company Japanese Solderless Terminals . They pioneered the first solderless connectors. From_the_archive J.S.T. = Japanese Solderless Terminals As our company name implies, Solderless Terminal, has real significance. When JST was established in 1957, we were Japan's first manufacturer and distributor of Solderless Terminals. There are many types of JST connectors , but the two most commonly used by Adafruit are: JST Series \"PH\" 2.00mm pin-to-pin pitch Used with STEMMA JST Series \"SH\" 1.00 mm pin-to-pin pitch Used with QWIIC and STEMMA QT Here's a great video from Jan 5, 2021 where Lady Ada talks about JST SH and PH Connectors: The Great Search: JST Connectors SH and PH 0:57 JST PH great for power - Sparkfun originally started LiPo Battery JST PH connectors and it became a Maker standard. 2:34 JST SH - Sparkfun also originated QWIIC for breakout boards (STEMMA QT compatible with QWIIC) Used for I2C (I2C has become the standard for sensors - rarely see sensors over SPI anymore) Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT QWIIC QWIIC is an I2C interface system introduced by Sparkfun in 2017, using a 4pin JST SH 1.0mm connector. STEMMA QT was introduced by Adafruit in 2018. STEMMA QT is cross-compatible with QWIIC because they use the same connector/cable. The I2C protocol enables components to be daisy chained together. QWIIC connectors can be found on many of SparkFun\u2019s boards such as the MicroMod ATP carrier board which uses an M.2 slot, the MicroMod standard, for interchangeable processor boards such as the ESP32, Artemis and the new RP2040. There are also adapters for using QWIIC components on the Raspberry Pi via a HAT and pHAT and for the Arduino range of boards. With SparkFun\u2019s QWIIC connector we can easily connect sensors such as the HC-SR04 ultrasonic sensor, soil moisture sensor and even a NEO-M9N GPS breakout. Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT STEMMA STEMMA standard is not plug-compatible with STEMMA-QT STEMMA JST PH 3 and 4 pin connectors (2.0mm pitch connectors) 4 pins - I2C Enable the use of multiple sensors / devices on a single bus thanks to devices having an address 3 pins - PWM/Analog/Digital Control Neopixels Read analog sensors Use digital IO devices such as LEDs and buttons Connector is keyed so that it cannot be inserted incorrectly STEMMA is seen on larger boards such as PyPortal Aims to be compatible with Grove/Gravity Additional References Adafruit STEMMA info page STEMMA is a plug-and-play board and sensor system that lets you quickly plug together various devices and accessories, without any soldering! STEMMA uses 3-pin cables for simple analog and digital devices, like relays and buttons. For more complex sensors and displays, we use a 4-wire I2C connection. For larger boards and devices we use a Grove-compatible connector, for smaller ones we use a QWIIC-compatible connector called STEMMA QT. As all STEMMA sensors have level shifting and voltage regulation, you can use them safely with any 3 to 5V power and logic device - from microcontrollers like Arduino-compatibles, to full Linux single board computers like the Raspberry Pi. We even have USB to I2C adapters that let you connect STEMMA devices directly to a computer without any microcontroller programming required! Then, use our Arduino or CircuitPython/Python libraries and examples to easily get your electronics project working on any platform with STEMMA and STEMMA QT. Adafruit Learn Guide: What is STEMMA? Awesome list for STEMMA and STEMMA QT Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT STEMMA QT STEMMA is not plug-compatible with STEMMA-QT STEMMA QT (\u2018cutie\u2019) JST SH (1.0mm pitch connectors) 4 pins - I2C only About half the size of STEMMA great for smaller boards such as Adafruit QT Py Cross-compatible with SparkFun QWIIC Examples of STEMMA QT boards Adafruit MPR121 capacitive touch sensor Adafruit SGP40 air quality sensor Adafruit BME680 temperature / humidity / pressure sensor Adafruit AHT20 temperature sensor Adafruit VL53L1X Time of Flight Distance Sensor Adafruit AMG8833 IR thermal camera Additional References Adafruit STEMMA info page STEMMA is a plug-and-play board and sensor system that lets you quickly plug together various devices and accessories, without any soldering! STEMMA uses 3-pin cables for simple analog and digital devices, like relays and buttons. For more complex sensors and displays, we use a 4-wire I2C connection. For larger boards and devices we use a Grove-compatible connector, for smaller ones we use a QWIIC-compatible connector called STEMMA QT. As all STEMMA sensors have level shifting and voltage regulation, you can use them safely with any 3 to 5V power and logic device - from microcontrollers like Arduino-compatibles, to full Linux single board computers like the Raspberry Pi. We even have USB to I2C adapters that let you connect STEMMA devices directly to a computer without any microcontroller programming required! Then, use our Arduino or CircuitPython/Python libraries and examples to easily get your electronics project working on any platform with STEMMA and STEMMA QT. Adafruit Learn Guide: What is STEMMA QT? We like the JST PH 2.0mm pitch cables because they are cross-compatible with Grove/Gravity. But they're a bit large for smaller breakout boards and wearables. So, for smaller I2C devices, we'll use the JST SH that SparkFun QWIIC uses, so that QWIIC & STEMMA QT sensors are cross-compatible! https://www.youtube.com/watch?v=6GXRRuFuFy0 From the Adafruit STEMMA & STEMMA QT Plug & play connectivity - STEMMA Sunday video 7/28/2019 description STEMMA started in 2014, intended to be compatible with Grove (cause Grove is all that existed at the time - since 2010) QWIIC started in 2017, STEMMA-QT added so that could use the smaller connectors. In addition - on the comparison page it states that Grove is a proprietary 4 pin 2.0mm pitch connector. STEMMA attempts to be as cross-compatible as possible with both Grove and Gravity (compatible connectors & 3-5V power/logic). STEMMA QT is cross-compatible with QWIIC - STEMMA QT connector/cable is same as QWIIC. You can use STEMMA QT devices with QWIIC devices/controllers. There is also a table which outlines the compatability matrix . Also explains the differences to Grove and QWIIC Adafruit Learn Guide: What is STEMMA QT? Awesome list for STEMMA and STEMMA QT Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT STEMMA, QWIIC and Grove Connectors: Which is Right for You? Depends on what boards you already have Adafruit boards usualy have some form of STEMMA / STEMMA QT connector STEMMA QT is completely cross-compatible with Sparkfun QWIIC STEMMA is different from STEMMA QT/QWIIC, aims to be compatible with Grove I2C Seeed Grove connectors work with multiple platforms Arduino Raspberry Pi Raspberry Pi Pico Connector Comparison Device Manufacturer Connector Voltage / Logic Protocols Year Introduced Compatible Grove Seeed Studio Proprietary 4 pin 2.0mm pin pitch 3-5V DC 4 Pin I2C / Analog / Digital / PWM 2010 Compatible with STEMMA I2C only QWIIC Sparkfun JST SH 4 pin 1.0mm pin pitch 3V DC I2C 2017 N/A STEMMA Adafruit JST PH 3 Pin or JST PH 4 Pin 2.0mm pin pitch 3-5V DC 4 Pin I2C or 3 Pin Analog / Digital / PWM 2014 Only STEMMA I2C ( JST PH 4 Pin) compatible with Grove STEMMA QT Adafruit JST SH 4 pin 1.0mm pin pitch 3-5V DC I2C 2018 intended to be compatible with QWIIC Reference: Toms Hardware STEMMA vs QWIIC vs Grove Connectors 4/24/2021 Note An Adafruit Learn Guide has a table which outlines the cross-compatability matrix . This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Connectors"},{"location":"glossary/connectors/#connectors","text":"","title":"Connectors"},{"location":"glossary/connectors/#back-to-index","text":"Related I2C , SPI , GPIO It used to be that in order to add sensors or components to your project you had to use a breadboard or do soldering. However in the past decade companies have begun to offer connectors which let you easily connect / disconnect components to your project without a breadboard or soldering. A major benefit of these connectors is that it makes it much more accessible for beginners. And experienced people can also benefit since it becomes much easier and quicker to prototype and build interesting projects. On this page we describe some of the more popular connectors in use today.","title":"Back to Index"},{"location":"glossary/connectors/#grove","text":"Introduced by Seeed Studio in 2010, Grove uses a proprietary 4-pin 2.0mm pin pitch connector for its range of boards and boards made in partnership with Arduino. The Grove connector can be used with analog, PWM , digital IO and I2C . While almost the same as a JST PH connector, Grove unfortunately is not compatible - they are physically too different for JST PH and Grove to be inter-changeable. Additional References on comparision of Grove to JST PH Grove compared to JST PH Grove compatability to JST PH As Grove has been around the longest, there are a large number of components available. Many Grove components can be used with Adafruit hardware. Grove is is only compatible with STEMMA I2C components. Analog, PWM and digital IO are not compatible. If a component has SDA / SCL pins, then it is an I2C device. Seeed Studio makes a Grove - QWIIC Hub to support interoperability with Sparkfun QWIIC and Adafruit STEMMA QT . Description Different from our Grove system, QWIIC is an I2C interface system initiated by Sparkfun around 2017, using a 4pin JST SH 1.0mm connector. STEMMA QT initiated by Adafruit is cross-compatible with QWIIC, as they use the same connector/cable. To better support different types of interface systems, we provide Grove - QWIIC Hub, which enables you easily connect the I2C devices with Grove/QWIIC/STEMMA QT interface, get the best use of your devices/controller of different interfaces. Additional References Youtube: Grove 10th Anniversary Documentary 12/31/2020 Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT","title":"Grove"},{"location":"glossary/connectors/#jst","text":"JST is an acronym for the company Japanese Solderless Terminals . They pioneered the first solderless connectors. From_the_archive J.S.T. = Japanese Solderless Terminals As our company name implies, Solderless Terminal, has real significance. When JST was established in 1957, we were Japan's first manufacturer and distributor of Solderless Terminals. There are many types of JST connectors , but the two most commonly used by Adafruit are: JST Series \"PH\" 2.00mm pin-to-pin pitch Used with STEMMA JST Series \"SH\" 1.00 mm pin-to-pin pitch Used with QWIIC and STEMMA QT Here's a great video from Jan 5, 2021 where Lady Ada talks about JST SH and PH Connectors: The Great Search: JST Connectors SH and PH 0:57 JST PH great for power - Sparkfun originally started LiPo Battery JST PH connectors and it became a Maker standard. 2:34 JST SH - Sparkfun also originated QWIIC for breakout boards (STEMMA QT compatible with QWIIC) Used for I2C (I2C has become the standard for sensors - rarely see sensors over SPI anymore) Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT","title":"JST"},{"location":"glossary/connectors/#qwiic","text":"QWIIC is an I2C interface system introduced by Sparkfun in 2017, using a 4pin JST SH 1.0mm connector. STEMMA QT was introduced by Adafruit in 2018. STEMMA QT is cross-compatible with QWIIC because they use the same connector/cable. The I2C protocol enables components to be daisy chained together. QWIIC connectors can be found on many of SparkFun\u2019s boards such as the MicroMod ATP carrier board which uses an M.2 slot, the MicroMod standard, for interchangeable processor boards such as the ESP32, Artemis and the new RP2040. There are also adapters for using QWIIC components on the Raspberry Pi via a HAT and pHAT and for the Arduino range of boards. With SparkFun\u2019s QWIIC connector we can easily connect sensors such as the HC-SR04 ultrasonic sensor, soil moisture sensor and even a NEO-M9N GPS breakout. Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT","title":"QWIIC"},{"location":"glossary/connectors/#stemma","text":"STEMMA standard is not plug-compatible with STEMMA-QT STEMMA JST PH 3 and 4 pin connectors (2.0mm pitch connectors) 4 pins - I2C Enable the use of multiple sensors / devices on a single bus thanks to devices having an address 3 pins - PWM/Analog/Digital Control Neopixels Read analog sensors Use digital IO devices such as LEDs and buttons Connector is keyed so that it cannot be inserted incorrectly STEMMA is seen on larger boards such as PyPortal Aims to be compatible with Grove/Gravity Additional References Adafruit STEMMA info page STEMMA is a plug-and-play board and sensor system that lets you quickly plug together various devices and accessories, without any soldering! STEMMA uses 3-pin cables for simple analog and digital devices, like relays and buttons. For more complex sensors and displays, we use a 4-wire I2C connection. For larger boards and devices we use a Grove-compatible connector, for smaller ones we use a QWIIC-compatible connector called STEMMA QT. As all STEMMA sensors have level shifting and voltage regulation, you can use them safely with any 3 to 5V power and logic device - from microcontrollers like Arduino-compatibles, to full Linux single board computers like the Raspberry Pi. We even have USB to I2C adapters that let you connect STEMMA devices directly to a computer without any microcontroller programming required! Then, use our Arduino or CircuitPython/Python libraries and examples to easily get your electronics project working on any platform with STEMMA and STEMMA QT. Adafruit Learn Guide: What is STEMMA? Awesome list for STEMMA and STEMMA QT Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT","title":"STEMMA"},{"location":"glossary/connectors/#stemma-qt","text":"STEMMA is not plug-compatible with STEMMA-QT STEMMA QT (\u2018cutie\u2019) JST SH (1.0mm pitch connectors) 4 pins - I2C only About half the size of STEMMA great for smaller boards such as Adafruit QT Py Cross-compatible with SparkFun QWIIC Examples of STEMMA QT boards Adafruit MPR121 capacitive touch sensor Adafruit SGP40 air quality sensor Adafruit BME680 temperature / humidity / pressure sensor Adafruit AHT20 temperature sensor Adafruit VL53L1X Time of Flight Distance Sensor Adafruit AMG8833 IR thermal camera Additional References Adafruit STEMMA info page STEMMA is a plug-and-play board and sensor system that lets you quickly plug together various devices and accessories, without any soldering! STEMMA uses 3-pin cables for simple analog and digital devices, like relays and buttons. For more complex sensors and displays, we use a 4-wire I2C connection. For larger boards and devices we use a Grove-compatible connector, for smaller ones we use a QWIIC-compatible connector called STEMMA QT. As all STEMMA sensors have level shifting and voltage regulation, you can use them safely with any 3 to 5V power and logic device - from microcontrollers like Arduino-compatibles, to full Linux single board computers like the Raspberry Pi. We even have USB to I2C adapters that let you connect STEMMA devices directly to a computer without any microcontroller programming required! Then, use our Arduino or CircuitPython/Python libraries and examples to easily get your electronics project working on any platform with STEMMA and STEMMA QT. Adafruit Learn Guide: What is STEMMA QT? We like the JST PH 2.0mm pitch cables because they are cross-compatible with Grove/Gravity. But they're a bit large for smaller breakout boards and wearables. So, for smaller I2C devices, we'll use the JST SH that SparkFun QWIIC uses, so that QWIIC & STEMMA QT sensors are cross-compatible! https://www.youtube.com/watch?v=6GXRRuFuFy0 From the Adafruit STEMMA & STEMMA QT Plug & play connectivity - STEMMA Sunday video 7/28/2019 description STEMMA started in 2014, intended to be compatible with Grove (cause Grove is all that existed at the time - since 2010) QWIIC started in 2017, STEMMA-QT added so that could use the smaller connectors. In addition - on the comparison page it states that Grove is a proprietary 4 pin 2.0mm pitch connector. STEMMA attempts to be as cross-compatible as possible with both Grove and Gravity (compatible connectors & 3-5V power/logic). STEMMA QT is cross-compatible with QWIIC - STEMMA QT connector/cable is same as QWIIC. You can use STEMMA QT devices with QWIIC devices/controllers. There is also a table which outlines the compatability matrix . Also explains the differences to Grove and QWIIC Adafruit Learn Guide: What is STEMMA QT? Awesome list for STEMMA and STEMMA QT Related Connector Comparison , Grove , JST , QWIIC , STEMMA , STEMMA QT , What is the difference between STEMMA and STEMMA QT","title":"STEMMA QT"},{"location":"glossary/connectors/#stemma-qwiic-and-grove-connectors-which-is-right-for-you","text":"Depends on what boards you already have Adafruit boards usualy have some form of STEMMA / STEMMA QT connector STEMMA QT is completely cross-compatible with Sparkfun QWIIC STEMMA is different from STEMMA QT/QWIIC, aims to be compatible with Grove I2C Seeed Grove connectors work with multiple platforms Arduino Raspberry Pi Raspberry Pi Pico","title":"STEMMA, QWIIC and Grove Connectors: Which is Right for You?"},{"location":"glossary/connectors/#connector-comparison","text":"Device Manufacturer Connector Voltage / Logic Protocols Year Introduced Compatible Grove Seeed Studio Proprietary 4 pin 2.0mm pin pitch 3-5V DC 4 Pin I2C / Analog / Digital / PWM 2010 Compatible with STEMMA I2C only QWIIC Sparkfun JST SH 4 pin 1.0mm pin pitch 3V DC I2C 2017 N/A STEMMA Adafruit JST PH 3 Pin or JST PH 4 Pin 2.0mm pin pitch 3-5V DC 4 Pin I2C or 3 Pin Analog / Digital / PWM 2014 Only STEMMA I2C ( JST PH 4 Pin) compatible with Grove STEMMA QT Adafruit JST SH 4 pin 1.0mm pin pitch 3-5V DC I2C 2018 intended to be compatible with QWIIC Reference: Toms Hardware STEMMA vs QWIIC vs Grove Connectors 4/24/2021 Note An Adafruit Learn Guide has a table which outlines the cross-compatability matrix . This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Connector Comparison"},{"location":"glossary/crickit/","text":"Crickit Back to Index Related Itsy Bitsy , QT Py WIP Crickit Adafruit CRICKIT for Circuit Playground Express https://www.adafruit.com/product/3093 Adafruit CRICKIT FeatherWing for any Feather https://www.adafruit.com/product/3343 Adafruit CRICKIT HAT for Raspberry Pi https://www.adafruit.com/product/3957 Adafruit CRICKIT for micro:bit https://www.adafruit.com/product/3928 Adabox 008 https://www.adafruit.com/product/3906 This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Crickit"},{"location":"glossary/crickit/#crickit","text":"","title":"Crickit"},{"location":"glossary/crickit/#back-to-index","text":"Related Itsy Bitsy , QT Py WIP Crickit Adafruit CRICKIT for Circuit Playground Express https://www.adafruit.com/product/3093 Adafruit CRICKIT FeatherWing for any Feather https://www.adafruit.com/product/3343 Adafruit CRICKIT HAT for Raspberry Pi https://www.adafruit.com/product/3957 Adafruit CRICKIT for micro:bit https://www.adafruit.com/product/3928 Adabox 008 https://www.adafruit.com/product/3906 This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/esp32/","text":"ESP32 Back to Index Related Microcontroller , Feather , QT Py , Itsy Bitsy WIP ESP32 overview https://youtu.be/MEhoZ--nOgw?t=76 ESP32-C3 single core, cost-effective RISC-V MCU with WiFi and BLE 5.0 key aim was to be a replacement for ESP8266 - easy to upgrade existing ESP8266 to ESP32-C3 cheap smart home and office devices ESP32-S series (ESP32-S2, ESP32-S3) - upgrade from the ESP32 - new and faster LX7 processor architecutre - more security features - on-chip AI capabilities - secure & low power use cases ESP32-S2 - single core - upgrade from the ESP32 - secure & low power use cases ESP32-S3 - dual-core - aimed at AI and AIoT - offline voice recognition - computer vision - wake word detection - multi-dimensional human machine interface Example: ESP32-S3-Box AI Voice development kit This page was last updated on 2022-03-13 12:57:07 -0500.","title":"ESP32"},{"location":"glossary/esp32/#esp32","text":"","title":"ESP32"},{"location":"glossary/esp32/#back-to-index","text":"Related Microcontroller , Feather , QT Py , Itsy Bitsy WIP ESP32 overview https://youtu.be/MEhoZ--nOgw?t=76 ESP32-C3 single core, cost-effective RISC-V MCU with WiFi and BLE 5.0 key aim was to be a replacement for ESP8266 - easy to upgrade existing ESP8266 to ESP32-C3 cheap smart home and office devices ESP32-S series (ESP32-S2, ESP32-S3) - upgrade from the ESP32 - new and faster LX7 processor architecutre - more security features - on-chip AI capabilities - secure & low power use cases ESP32-S2 - single core - upgrade from the ESP32 - secure & low power use cases ESP32-S3 - dual-core - aimed at AI and AIoT - offline voice recognition - computer vision - wake word detection - multi-dimensional human machine interface Example: ESP32-S3-Box AI Voice development kit This page was last updated on 2022-03-13 12:57:07 -0500.","title":"Back to Index"},{"location":"glossary/feather/","text":"Feather Back to Index Related Itsy Bitsy , QT Py WIP Feather is an Adafruit standard format for microcontrollers. Large, comparatively for microcontrollers. Still pretty small compared to a Raspberry Pi or other types of SBCs (Single Board Computers) Alot of feather boards. All the same size and mostly use the same standards for pins and connections. Note Not all feathers run CircuitPython . Some Versions of the Adafruit Feather Device Microcontroller Code RAM Cost Adafruit HUZZAH32 ESP32 Arduino only 4MB Flash + 520KB SRAM $21.95 Adafruit M4 Express SAMD51 Arduino or CircuitPython 512KB Flash + 192KB RAM $21.95 Black Adafruit Feather RP2040 RP2040 Arduino or CircuitPython 8MB SPI Flash + 264KB RAM $19.95 Pink Adafruit Feather RP2040 RP2040 Arduino or CircuitPython 8MB SPI Flash + 264KB RAM $19.95 Adafruit Feather ESP32-S2 TFT Feather ESP32-S2 Arduino or CircuitPython 4 MB Flash + 2MB PSRAM $24.95 Adafruit Feather ESP32-S2 with BME280 Sensor ESP32-S2 Arduino or CircuitPython 2 MB of SPI Flash storage $24.95 Featherwing Plugin add-on boards that provide additional features. E.g., running motors, adding sensors, include displays, add bluetooth or WiFi capabliities. Feather Format is an Adafruit standard format for microcontrollers (Large, comparatively for microcontrollers. It's still pretty small compared to a Raspberry Pi or other types of SBCs) Alot of feather boards. All the same size and mostly use the same standards for pins and connections. NOTE: not all feathers run CircuitPython. Example: NeoPixel FeatherWing for all Feather Boards https://www.adafruit.com/product/2945 Some FeatherWings Device Cost Adafruit AirLift FeatherWing $12.95 Adafruit FeatherWing OLED 128x64 $14.95 Adafruit Ultimate GPS FeatherWIng $24.95 Additional References Introducing Adafruit Feather This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Feather"},{"location":"glossary/feather/#feather","text":"","title":"Feather"},{"location":"glossary/feather/#back-to-index","text":"Related Itsy Bitsy , QT Py WIP Feather is an Adafruit standard format for microcontrollers. Large, comparatively for microcontrollers. Still pretty small compared to a Raspberry Pi or other types of SBCs (Single Board Computers) Alot of feather boards. All the same size and mostly use the same standards for pins and connections. Note Not all feathers run CircuitPython .","title":"Back to Index"},{"location":"glossary/feather/#some-versions-of-the-adafruit-feather","text":"Device Microcontroller Code RAM Cost Adafruit HUZZAH32 ESP32 Arduino only 4MB Flash + 520KB SRAM $21.95 Adafruit M4 Express SAMD51 Arduino or CircuitPython 512KB Flash + 192KB RAM $21.95 Black Adafruit Feather RP2040 RP2040 Arduino or CircuitPython 8MB SPI Flash + 264KB RAM $19.95 Pink Adafruit Feather RP2040 RP2040 Arduino or CircuitPython 8MB SPI Flash + 264KB RAM $19.95 Adafruit Feather ESP32-S2 TFT Feather ESP32-S2 Arduino or CircuitPython 4 MB Flash + 2MB PSRAM $24.95 Adafruit Feather ESP32-S2 with BME280 Sensor ESP32-S2 Arduino or CircuitPython 2 MB of SPI Flash storage $24.95","title":"Some Versions of the Adafruit Feather"},{"location":"glossary/feather/#featherwing","text":"Plugin add-on boards that provide additional features. E.g., running motors, adding sensors, include displays, add bluetooth or WiFi capabliities. Feather Format is an Adafruit standard format for microcontrollers (Large, comparatively for microcontrollers. It's still pretty small compared to a Raspberry Pi or other types of SBCs) Alot of feather boards. All the same size and mostly use the same standards for pins and connections. NOTE: not all feathers run CircuitPython. Example: NeoPixel FeatherWing for all Feather Boards https://www.adafruit.com/product/2945","title":"Featherwing"},{"location":"glossary/feather/#some-featherwings","text":"Device Cost Adafruit AirLift FeatherWing $12.95 Adafruit FeatherWing OLED 128x64 $14.95 Adafruit Ultimate GPS FeatherWIng $24.95 Additional References Introducing Adafruit Feather This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Some FeatherWings"},{"location":"glossary/glider/","text":"Glider Back to Index Related Pyleap , Circuit Pyaground Bluefruit Glider iOS app to interact with Adafruit microcontrollers over Bluetooth LE WIP Note You will need to connect the Circuit Playground Bluefruit to a battery - Do NOT connect to a computer!! Adafruit Blog 2/14/2022: Wirelessly Program a Circuit Playground Bluefruit Using the File Glider App Adafruit Learn Guide: Wirelessly Program a Circuit Playground Bluefruit Using the File Glider App This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Glider"},{"location":"glossary/glider/#glider","text":"","title":"Glider"},{"location":"glossary/glider/#back-to-index","text":"Related Pyleap , Circuit Pyaground Bluefruit Glider iOS app to interact with Adafruit microcontrollers over Bluetooth LE WIP Note You will need to connect the Circuit Playground Bluefruit to a battery - Do NOT connect to a computer!! Adafruit Blog 2/14/2022: Wirelessly Program a Circuit Playground Bluefruit Using the File Glider App Adafruit Learn Guide: Wirelessly Program a Circuit Playground Bluefruit Using the File Glider App This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/gpio/","text":"GPIO Back to Index Related I2C , SPI , Raspberry Pi WIP GPIO - General Purpose Input/Output standard interface used to connect electronic devices can be used with sensors, displays, etc GPIO are usually in the form of \"pins\", as opposed to other types of connectors . Different Raspberry Pi models have either 26 or 40 GPIO pins. The newer Rasbperry Pi models have two banks of 20 pins. Website reference guide to the Raspberry Pi GPIO pins: https://pinout.xyz Additional References https://en.wikipedia.org/wiki/General-purpose_input/output https://opensource.com/article/19/3/gpio-pins-raspberry-pi https://www.raspberrypi.com/documentation/computers/os.html#gpio-and-the-40-pin-header https://pinout.xyz Raspberry Pi GPIO - Getting started with gpiozero 2/22/2020 https://www.youtube.com/watch?v=iL_oZGHLHvU https://dronebotworkshop.com/raspberry-pi-gpio/ This page was last updated on 2022-03-03 15:45:07 -0500.","title":"GPIO"},{"location":"glossary/gpio/#gpio","text":"","title":"GPIO"},{"location":"glossary/gpio/#back-to-index","text":"Related I2C , SPI , Raspberry Pi WIP GPIO - General Purpose Input/Output standard interface used to connect electronic devices can be used with sensors, displays, etc GPIO are usually in the form of \"pins\", as opposed to other types of connectors . Different Raspberry Pi models have either 26 or 40 GPIO pins. The newer Rasbperry Pi models have two banks of 20 pins. Website reference guide to the Raspberry Pi GPIO pins: https://pinout.xyz","title":"Back to Index"},{"location":"glossary/gpio/#additional-references","text":"https://en.wikipedia.org/wiki/General-purpose_input/output https://opensource.com/article/19/3/gpio-pins-raspberry-pi https://www.raspberrypi.com/documentation/computers/os.html#gpio-and-the-40-pin-header https://pinout.xyz Raspberry Pi GPIO - Getting started with gpiozero 2/22/2020 https://www.youtube.com/watch?v=iL_oZGHLHvU https://dronebotworkshop.com/raspberry-pi-gpio/ This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Additional References"},{"location":"glossary/hat/","text":"HAT Back to Index Related GPIO , Raspberry Pi HAT Hardware Attached on Top WIP HATs Example: Raspberry Pi Build HAT for Lego https://blog.adafruit.com/2021/11/12/the-raspberry-pi-build-hat-and-lego-components-at-raspberry_pis-coderdojo-piday-raspberrypi/ https://www.freecodecamp.org/news/what-is-raspberry-pi-specs-and-models-2021-guide/ This page was last updated on 2022-03-03 15:45:07 -0500.","title":"HAT"},{"location":"glossary/hat/#hat","text":"","title":"HAT"},{"location":"glossary/hat/#back-to-index","text":"Related GPIO , Raspberry Pi HAT Hardware Attached on Top WIP HATs Example: Raspberry Pi Build HAT for Lego https://blog.adafruit.com/2021/11/12/the-raspberry-pi-build-hat-and-lego-components-at-raspberry_pis-coderdojo-piday-raspberrypi/ https://www.freecodecamp.org/news/what-is-raspberry-pi-specs-and-models-2021-guide/ This page was last updated on 2022-03-03 15:45:07 -0500.","title":"Back to Index"},{"location":"glossary/i2c/","text":"I2C Back to Index Related SPI , QWIIC , STEMMA , STEMMA QT , What is the difference between Stemma and Stemma QT , GPIO WIP I2C or Inter-Integrated Circuit is a serial communication protocol commonly used for sensors and other simple devices that don\u2019t need to send or receive data quickly. I2C has become the standard for sensors - rarely see SPI over sensors anymore. I2C uses four wires power ground clock (SCL) data (SDA) I2C uses unique addresses for devices so it makes it possible to daisy chain multiple devices. NOTE: if you need to use the same type of component or sensor twice, some devices allow you to set a jumper to change the default address. Another option is to use SparkFun STEMMA QT / Qwiic TCA9548A Mux Breakout - 8 Channel Addresses range from 0 to 128 A seven bit wide address space theoretically allows 128 I2C addresses \u2013 however, some addresses are reserved for special purposes. Thus, only 112 addresses are available with the 7 bit address scheme. 5 THe QWIIC and STEMMA QT devices exclusively communicate via I2C. STEMMA 4-pin connectors can also use I2C. Grove devices can also use I2C. If you are unsure if a device uses I2C, if you see SCL and SDA pins then it is an I2C device. I2C is ideal for short distances and low bandwidth communication. I2C uses a client/server architecture. I2C limitiations: No hot plugging support No auto device discovery Addresses collisions may occur (if multiple devices use the same address) https://blog.adafruit.com/2022/02/03/luxuriously-long-stemma-qt-cable-samples/ Quote I2C was never meant to go 200, 300 or 400mm but we laugh in the face of death thanks to these samples we got of some looooooooong stemma qt cables. each cable has two JST SH connectors on either end and a PVC sheathed center. we were inspired by this tweet https://twitter.com/lovyan03/status/1480867328783163396 about I2C wire interleaving with power in order to avoid cross-talk for long cables (I2C is not differential so you definitely do not want to use twisted wires!) if you look closely, the cable is flat and has the red power wire between SDA and SCL instead of having them next to each other. we\u2019re just trying it out here with our fancy new ESP32 Feather V2 which has an onboard STEMMA QT connector Additional References 1. Adafruit Learn Guide: Working with I2C devices 1. Adafruit Learn Guide: I2C devices 2. CircuitPython Basics: I2C and SPI 3. CircuitPython Basics: Digital Inputs & Outputs 4. CircuitPython Basics: Analog Inputs & Outputs 5. I2C addressing This page was last updated on 2022-03-16 15:07:07 -0500.","title":"I2C"},{"location":"glossary/i2c/#i2c","text":"","title":"I2C"},{"location":"glossary/i2c/#back-to-index","text":"Related SPI , QWIIC , STEMMA , STEMMA QT , What is the difference between Stemma and Stemma QT , GPIO WIP I2C or Inter-Integrated Circuit is a serial communication protocol commonly used for sensors and other simple devices that don\u2019t need to send or receive data quickly. I2C has become the standard for sensors - rarely see SPI over sensors anymore. I2C uses four wires power ground clock (SCL) data (SDA) I2C uses unique addresses for devices so it makes it possible to daisy chain multiple devices. NOTE: if you need to use the same type of component or sensor twice, some devices allow you to set a jumper to change the default address. Another option is to use SparkFun STEMMA QT / Qwiic TCA9548A Mux Breakout - 8 Channel Addresses range from 0 to 128 A seven bit wide address space theoretically allows 128 I2C addresses \u2013 however, some addresses are reserved for special purposes. Thus, only 112 addresses are available with the 7 bit address scheme. 5 THe QWIIC and STEMMA QT devices exclusively communicate via I2C. STEMMA 4-pin connectors can also use I2C. Grove devices can also use I2C. If you are unsure if a device uses I2C, if you see SCL and SDA pins then it is an I2C device. I2C is ideal for short distances and low bandwidth communication. I2C uses a client/server architecture. I2C limitiations: No hot plugging support No auto device discovery Addresses collisions may occur (if multiple devices use the same address) https://blog.adafruit.com/2022/02/03/luxuriously-long-stemma-qt-cable-samples/ Quote I2C was never meant to go 200, 300 or 400mm but we laugh in the face of death thanks to these samples we got of some looooooooong stemma qt cables. each cable has two JST SH connectors on either end and a PVC sheathed center. we were inspired by this tweet https://twitter.com/lovyan03/status/1480867328783163396 about I2C wire interleaving with power in order to avoid cross-talk for long cables (I2C is not differential so you definitely do not want to use twisted wires!) if you look closely, the cable is flat and has the red power wire between SDA and SCL instead of having them next to each other. we\u2019re just trying it out here with our fancy new ESP32 Feather V2 which has an onboard STEMMA QT connector Additional References 1. Adafruit Learn Guide: Working with I2C devices 1. Adafruit Learn Guide: I2C devices 2. CircuitPython Basics: I2C and SPI 3. CircuitPython Basics: Digital Inputs & Outputs 4. CircuitPython Basics: Analog Inputs & Outputs 5. I2C addressing This page was last updated on 2022-03-16 15:07:07 -0500.","title":"Back to Index"},{"location":"glossary/iot/","text":"IOT Back to Index Related Adafruit IO , WipperSnapper IOT or Internet of Things WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"IOT"},{"location":"glossary/iot/#iot","text":"","title":"IOT"},{"location":"glossary/iot/#back-to-index","text":"Related Adafruit IO , WipperSnapper IOT or Internet of Things WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/itsy_bitsy/","text":"Itsy Bitsy Back to Index Related Feather , QT Py Itsy Bitsy is a small sized board, smaller than Feather WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Itsy Bitsy"},{"location":"glossary/itsy_bitsy/#itsy-bitsy","text":"","title":"Itsy Bitsy"},{"location":"glossary/itsy_bitsy/#back-to-index","text":"Related Feather , QT Py Itsy Bitsy is a small sized board, smaller than Feather WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/metro/","text":"METRO Back to Index Related Feather , QT Py , Itsy Bitsy Metro Arduino form factor WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Metro"},{"location":"glossary/metro/#metro","text":"","title":"METRO"},{"location":"glossary/metro/#back-to-index","text":"Related Feather , QT Py , Itsy Bitsy Metro Arduino form factor WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/microcontroller/","text":"Microcontroller Back to Index Related Feather , Itsy Bitsy , QT Py , RP2040 Microcontrollers are single purpose computers small embedded development boards limited storage and memory limited processing power Microcontrollers vs General Purpose Computer Use of microcontrollers is fine for most cases When you need more computational power, you may want to use a Raspberry Pi For example, if you wish to have a web dashboard to interface with Comparison of Raspberry Pi to Arduino Features Raspberry Pi Arduino Raspberry Pi is a Microcomputer Arduino is a Microcontroller Operating System on MicroSD card Bootloader on chip USB, Video, Camera, Display & Audio USB I2C &SPI Busses I2C & SPI Buses Digital I/O Digital I/O and Analog Inputs 5v USB power 5v USB & 8-20v DC power Commercial patented product Open source design The Raspberry Pi's schematics are released, but the board itself is not open hardware. The Raspberry Pi Foundation relies on income from the sale of Raspberry Pis to do its charitable work. Reference: https://opensource.com/resources/raspberry-pi Specs Raspberry Pi Arduino Up to 1.5 GHz 64-bit quad-core CPU 16 MHz 8-bit single-core MCU 512 MB to 8 GB RAM 2 Kb - 8 Kb SRAM 26 Digital I/O pins 14 - 54 Digital I/O pins No Analog inputs 6 - 16 Anallog inputs Bluetooth & WiFi (some models) No Bluetooth or WiFi Ethernet (some models) No Ethernet Expand with HATs Expand with Shields Extras Raspberry Pi Arduino MicroSD card USB Cable USB (or USB-C) power supply Computer Keyboard Mouse HDMI monitor Adapter cables as required NOTE: as the Raspberry Pi is a SBC (Single Board Computer) - you will need all the peripherals for Input and Output, as well as an OS. NOTE: the Arduino is a microcontroller so that it requires a separate computer to push code/instructions to it Recap Arduino - precision timing, measure pulse widths to a high degree of accuracy Raspberry Pi - add more intelligence Resources Learn: The Great Search SAMD21 Microcontrollers https://makezine.com/comparison/boards https://www.digikey.com/en/maker/boards-guide https://media.digikey.com/Resources/Maker/the-original-guide-to-boards-2020.pdf As mentioned by Lady Ada on 8/6/2021 https://youtu.be/UwGtmSZkm2c?t=245 This page was last updated on 2022-03-02 14:26:07 -0500.","title":"Microcontroller"},{"location":"glossary/microcontroller/#microcontroller","text":"","title":"Microcontroller"},{"location":"glossary/microcontroller/#back-to-index","text":"Related Feather , Itsy Bitsy , QT Py , RP2040 Microcontrollers are single purpose computers small embedded development boards limited storage and memory limited processing power","title":"Back to Index"},{"location":"glossary/microcontroller/#microcontrollers-vs-general-purpose-computer","text":"Use of microcontrollers is fine for most cases When you need more computational power, you may want to use a Raspberry Pi For example, if you wish to have a web dashboard to interface with","title":"Microcontrollers vs General Purpose Computer"},{"location":"glossary/microcontroller/#comparison-of-raspberry-pi-to-arduino","text":"","title":"Comparison of Raspberry Pi to Arduino"},{"location":"glossary/microcontroller/#features","text":"Raspberry Pi Arduino Raspberry Pi is a Microcomputer Arduino is a Microcontroller Operating System on MicroSD card Bootloader on chip USB, Video, Camera, Display & Audio USB I2C &SPI Busses I2C & SPI Buses Digital I/O Digital I/O and Analog Inputs 5v USB power 5v USB & 8-20v DC power Commercial patented product Open source design The Raspberry Pi's schematics are released, but the board itself is not open hardware. The Raspberry Pi Foundation relies on income from the sale of Raspberry Pis to do its charitable work. Reference: https://opensource.com/resources/raspberry-pi","title":"Features"},{"location":"glossary/microcontroller/#specs","text":"Raspberry Pi Arduino Up to 1.5 GHz 64-bit quad-core CPU 16 MHz 8-bit single-core MCU 512 MB to 8 GB RAM 2 Kb - 8 Kb SRAM 26 Digital I/O pins 14 - 54 Digital I/O pins No Analog inputs 6 - 16 Anallog inputs Bluetooth & WiFi (some models) No Bluetooth or WiFi Ethernet (some models) No Ethernet Expand with HATs Expand with Shields","title":"Specs"},{"location":"glossary/microcontroller/#extras","text":"Raspberry Pi Arduino MicroSD card USB Cable USB (or USB-C) power supply Computer Keyboard Mouse HDMI monitor Adapter cables as required NOTE: as the Raspberry Pi is a SBC (Single Board Computer) - you will need all the peripherals for Input and Output, as well as an OS. NOTE: the Arduino is a microcontroller so that it requires a separate computer to push code/instructions to it Recap Arduino - precision timing, measure pulse widths to a high degree of accuracy Raspberry Pi - add more intelligence","title":"Extras"},{"location":"glossary/microcontroller/#resources","text":"Learn: The Great Search SAMD21 Microcontrollers https://makezine.com/comparison/boards https://www.digikey.com/en/maker/boards-guide https://media.digikey.com/Resources/Maker/the-original-guide-to-boards-2020.pdf As mentioned by Lady Ada on 8/6/2021 https://youtu.be/UwGtmSZkm2c?t=245 This page was last updated on 2022-03-02 14:26:07 -0500.","title":"Resources"},{"location":"glossary/neopixel/","text":"NeoPixel Back to Index NeoPixel WIP [ ] Neopixel Uberguide: https://learn.adafruit.com/adafruit-neopixel-uberguide?view=all [ ] Learn: Make It Glow - Your First NeoPixel Project https://learn.adafruit.com/make-it-glow-your-first-neopixel-project [ ] Learn: NeoPixel Basics - Make Your Project Glow (No Soldering!) https://www.youtube.com/watch?v=vCDfyxNFeEw 4/8/2020 (2:41 video) [ ] Neopixels on Raspberry Pi: https://learn.adafruit.com/neopixels-on-raspberry-pi Learn: CircuitPython Neopixels Using SPI: https://learn.adafruit.com/circuitpython-neopixels-using-spi Neopixel ring: https://www.adafruit.com/product/1643 Adafruit NeoPixel LED Strip w/ Alligator Clips https://www.adafruit.com/product/3811 Neopixel questions on Stemma QT: https://forums.adafruit.com/viewtopic.php?f=47&t=173454&p=845748&hilit=neopixel+strip+stemma#p845748 https://forums.adafruit.com/viewtopic.php?f=57&t=158443&p=780838&hilit=neopixel+strip+stemma#p780838 - [ ] Learn: Sipping power with Neopixels https://learn.adafruit.com/sipping-power-with-neopixels/overview [ ] Great method for connecting neopixel strips to Circuit Playground Bluefruit https://www.youtube.com/watch?v=TbR1q9Jyvyk&t=69s Connect LED Strand to CPB and Add CircuitPython Code - Bluefruit School 7/29/2021 Try this out #next Ordered the connectors mentioned in the video from Amazon - Delivered 11/23/2021 [ ] MakerSnack Bluetooth Mason Jar Light https://www.youtube.com/watch?v=13cEzoIdi6A 7/29/2021 [ ] MakerSnack SparkleScarf https://www.youtube.com/watch?v=_VzG5EY9yiI 7/29/2021 [ ] MakerSnack Smart Tie https://www.youtube.com/watch?v=lAmcyOB4wnw 7/29/2021 [ ] MakerSnack - Swift Sign and More with the Adafruit LED Matrix Portal https://www.youtube.com/watch?v=Ss4KpRQE9eY 10/18/2020 [ ] https://learn.adafruit.com/qt-py-and-neopixel-leds QTpy SAMD21 doesn't support circuitpython led_animation library (maybe due to memory constraints)? This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Neopixel"},{"location":"glossary/neopixel/#neopixel","text":"","title":"NeoPixel"},{"location":"glossary/neopixel/#back-to-index","text":"NeoPixel WIP [ ] Neopixel Uberguide: https://learn.adafruit.com/adafruit-neopixel-uberguide?view=all [ ] Learn: Make It Glow - Your First NeoPixel Project https://learn.adafruit.com/make-it-glow-your-first-neopixel-project [ ] Learn: NeoPixel Basics - Make Your Project Glow (No Soldering!) https://www.youtube.com/watch?v=vCDfyxNFeEw 4/8/2020 (2:41 video) [ ] Neopixels on Raspberry Pi: https://learn.adafruit.com/neopixels-on-raspberry-pi Learn: CircuitPython Neopixels Using SPI: https://learn.adafruit.com/circuitpython-neopixels-using-spi Neopixel ring: https://www.adafruit.com/product/1643 Adafruit NeoPixel LED Strip w/ Alligator Clips https://www.adafruit.com/product/3811 Neopixel questions on Stemma QT: https://forums.adafruit.com/viewtopic.php?f=47&t=173454&p=845748&hilit=neopixel+strip+stemma#p845748 https://forums.adafruit.com/viewtopic.php?f=57&t=158443&p=780838&hilit=neopixel+strip+stemma#p780838 - [ ] Learn: Sipping power with Neopixels https://learn.adafruit.com/sipping-power-with-neopixels/overview [ ] Great method for connecting neopixel strips to Circuit Playground Bluefruit https://www.youtube.com/watch?v=TbR1q9Jyvyk&t=69s Connect LED Strand to CPB and Add CircuitPython Code - Bluefruit School 7/29/2021 Try this out #next Ordered the connectors mentioned in the video from Amazon - Delivered 11/23/2021 [ ] MakerSnack Bluetooth Mason Jar Light https://www.youtube.com/watch?v=13cEzoIdi6A 7/29/2021 [ ] MakerSnack SparkleScarf https://www.youtube.com/watch?v=_VzG5EY9yiI 7/29/2021 [ ] MakerSnack Smart Tie https://www.youtube.com/watch?v=lAmcyOB4wnw 7/29/2021 [ ] MakerSnack - Swift Sign and More with the Adafruit LED Matrix Portal https://www.youtube.com/watch?v=Ss4KpRQE9eY 10/18/2020 [ ] https://learn.adafruit.com/qt-py-and-neopixel-leds QTpy SAMD21 doesn't support circuitpython led_animation library (maybe due to memory constraints)? This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/pwm/","text":"PWM Back to Index Related SPI , QWIIC , STEMMA , STEMMA QT , What is the difference between Stemma and Stemma QT , GPIO PWM WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"PWM"},{"location":"glossary/pwm/#pwm","text":"","title":"PWM"},{"location":"glossary/pwm/#back-to-index","text":"Related SPI , QWIIC , STEMMA , STEMMA QT , What is the difference between Stemma and Stemma QT , GPIO PWM WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/pyleap/","text":"PyLeap Back to Index Related Glider , Circuit Pyaground Bluefruit , CLUE PyLeap is an app for iOS and iPadOS . It allows you to collect complete projects from the Adafruit Learn System, and transfer them directly to your Circuit Playground Bluefruit without opening a code editor or connecting to a computer. Send files and libraries directly to your Bluefruit device! Note You will need to connect the Circuit Playground Bluefruit to a battery - Do NOT connect to a computer!! The main PyLeap guide on the Adafruit Learning System: Adafruit Learn Guide: PyLeap App The following PyLeap projects (as of 2/2022) are available on the Adafruit Learning System: Adafruit Learn Guide: PyLeap device enabled - In Rainbows Adafruit Learn Guide: Pyleap touch neopixel rainbow Adafruit Learn Guide: PyLeap NeoPixel Sound Meter for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap NeoPixel Light Meter for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap Button Controlled NeoPixels for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap WAV Playback for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap MP3 Playback for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap Tone Piano for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap EyeLights LED Glasses Rainbows for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap Blink Animation for Circuit Playground Bluefruit Additional References Adafruit Demo Video on Youtube: Demo video from 11/24/2021 Adafruit Demo Video on Youtube: PyLeap and Glider for CircuitPython. 12/15/2021. (2 minutes) Adafruit Blog 12/22/2021: PyLeap officially released on the App Store Adafruit Blog 2/3/2022: CLUE support coming soon to PyLeap Github repo - PyLeap - iOS app PyLeap - iOS app (this is one of two Adafruit iOS apps) - a BLE file transfer app to send CircuitPython projects via BLE to your Adafruit hardware This page was last updated on 2022-02-23 11:15:07 -0500.","title":"PyLeap"},{"location":"glossary/pyleap/#pyleap","text":"","title":"PyLeap"},{"location":"glossary/pyleap/#back-to-index","text":"Related Glider , Circuit Pyaground Bluefruit , CLUE PyLeap is an app for iOS and iPadOS . It allows you to collect complete projects from the Adafruit Learn System, and transfer them directly to your Circuit Playground Bluefruit without opening a code editor or connecting to a computer. Send files and libraries directly to your Bluefruit device! Note You will need to connect the Circuit Playground Bluefruit to a battery - Do NOT connect to a computer!! The main PyLeap guide on the Adafruit Learning System: Adafruit Learn Guide: PyLeap App The following PyLeap projects (as of 2/2022) are available on the Adafruit Learning System: Adafruit Learn Guide: PyLeap device enabled - In Rainbows Adafruit Learn Guide: Pyleap touch neopixel rainbow Adafruit Learn Guide: PyLeap NeoPixel Sound Meter for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap NeoPixel Light Meter for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap Button Controlled NeoPixels for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap WAV Playback for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap MP3 Playback for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap Tone Piano for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap EyeLights LED Glasses Rainbows for Circuit Playground Bluefruit Adafruit Learn Guide: PyLeap Blink Animation for Circuit Playground Bluefruit Additional References Adafruit Demo Video on Youtube: Demo video from 11/24/2021 Adafruit Demo Video on Youtube: PyLeap and Glider for CircuitPython. 12/15/2021. (2 minutes) Adafruit Blog 12/22/2021: PyLeap officially released on the App Store Adafruit Blog 2/3/2022: CLUE support coming soon to PyLeap Github repo - PyLeap - iOS app PyLeap - iOS app (this is one of two Adafruit iOS apps) - a BLE file transfer app to send CircuitPython projects via BLE to your Adafruit hardware This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/qt_py/","text":"QT Py Back to Index Related Feather , Itsy Bitsy WIP QT Py is tiny. It is size and pin compatible with Seeed Studio XIAO. Adafruit sells the Seeduino XIAO expansion board which works with the Adafruit QT Py. Three versions of QT Py Device Microcontroller Code RAM / Storage Cost QT Py SAMD21 ATSAMD21 ARM Cortex M0 Arduino, CircuitPython, or MakeCode 32KB RAM / 256 KB of SPI Flash storage $7.50 QT Py ESP32-S2 ESP32-S2 Arduino, CircuitPython, or MakeCode 2MB PSRSM / 4 MB of SPI Flash storage $12.50 QT Py RP2040 RP2040 Arduino, CircuitPython, or MakeCode 264KB RAM / 8MB of SPI Flash $9.95 Additional versions of the QT Py on the way Device Microcontroller Code RAM /Storage QT Py nRF52840 1 nRF52840 Arduino, CircuitPython, or MakeCode 256KB RAM / ? storage QT Py ESP32-S3 2, 3 ESP32-S3 Arduino, CircuitPython, or MakeCode ? RAM / ? storage QT Py ESP32-C3 4 ESP32-C3 Arduino, CircuitPython, or MakeCode 400KB SRAM / 4MB Flash storage Adafruit blog post about QT Py nRF52840 1/6/2022 Now we\u2019ve got the QT Py SAMD21, RP2040 and ESP32-S2 designed and fabricated, we\u2019re going to follow up with an NRF52840 version! We\u2019ve been using the Nordict nRF series for a loooooong time (anyone else remember the nRF8001? it was like the AT90S2313 of bluetooth le for us). nRF52840 is the first one with native USB \u2013 and its plenty fast as a Cortex M4 at 64MHz and 256K of RAM. we already did a module-less route of this chip on the Circuit Playground Bluefruit so we know the schem capture is right. Adaafruit blog post about QT Py ESP32-S3 1/7/2022 This is a swap-out of the ESP32-S2 QT Py for the new ESP32-S3 chip. The S3 is really a nice piece of kit \u2013 dual core is back and it also re-adds BLE. It\u2019s basically an ESP32 with native USB, we\u2019re looking forward to it! note that the S3 chip looks a lot like the S2 but the chip pinout is NOT the same, the reset, and some power pins have moved. and some gpio shifted down one. also, looks like the dual DAC was removed. anyways, just watch out don\u2019t think you can use the exact same layout. we had to shift a few parts but it all still looks like it fits! top part is identical to the S2 QT Py, and the bottom only shifted a few passives around. we\u2019ll get some 4 layer prototypes on order. Desk of Lady Ada youtube video 1/9/2022 This weekend we cranked through 3.5 QT Py designs (we didnt finish routing one, its a toughie!) - we already make SAMD21, RP2040 and ESP32-S2 and we wanted to add some more chips to the mix: ESP32-S3 (dual core version of the S2), ESP32 Pico (OG ESP with built in flash/psram), ESP32-C3 (Risc-V wifi!) and nRF52840 (BLE wonder-chip from Nordic). the last one is what we didn't get to finish routing because its a particularly tough one. The other 3 worked out fine with a 4 layer PCB. We also designed a few 'BFF' boards - that fit onto a QT Py like a shield. Adafruit blog post about QT Ot ESP32-C3 3/9/2022 ESP32-C3 is a low-cost microcontroller from Espressif that supports 2.4 GHz Wi-Fi and Bluetooth\u00ae Low Energy (Bluetooth LE). It has built-in USB-to-Serial, but not native USB \u2013 it cannot act as a keyboard or disk drive. The chip used here has 4MB of Flash memory, 400 KB of SRAM and can easily handle TLS connections. BFF As of January 2022, BFF is the placeholder name for Adafruit expansion boards for QT Py boards that fit onto a QT Py like a shield. https://blog.adafruit.com/2022/01/11/qt-py-bff-with-lipoly-charging-and-switch/ https://blog.adafruit.com/2022/01/11/gamer-bff-qt-py-mini-gaming-add-on/ Additional References Hackster.io QT Py Review This page was last updated on 2022-03-09 18:36:07 -0500.","title":"QT Py"},{"location":"glossary/qt_py/#qt-py","text":"","title":"QT Py"},{"location":"glossary/qt_py/#back-to-index","text":"Related Feather , Itsy Bitsy WIP QT Py is tiny. It is size and pin compatible with Seeed Studio XIAO. Adafruit sells the Seeduino XIAO expansion board which works with the Adafruit QT Py.","title":"Back to Index"},{"location":"glossary/qt_py/#three-versions-of-qt-py","text":"Device Microcontroller Code RAM / Storage Cost QT Py SAMD21 ATSAMD21 ARM Cortex M0 Arduino, CircuitPython, or MakeCode 32KB RAM / 256 KB of SPI Flash storage $7.50 QT Py ESP32-S2 ESP32-S2 Arduino, CircuitPython, or MakeCode 2MB PSRSM / 4 MB of SPI Flash storage $12.50 QT Py RP2040 RP2040 Arduino, CircuitPython, or MakeCode 264KB RAM / 8MB of SPI Flash $9.95","title":"Three versions of QT Py"},{"location":"glossary/qt_py/#additional-versions-of-the-qt-py-on-the-way","text":"Device Microcontroller Code RAM /Storage QT Py nRF52840 1 nRF52840 Arduino, CircuitPython, or MakeCode 256KB RAM / ? storage QT Py ESP32-S3 2, 3 ESP32-S3 Arduino, CircuitPython, or MakeCode ? RAM / ? storage QT Py ESP32-C3 4 ESP32-C3 Arduino, CircuitPython, or MakeCode 400KB SRAM / 4MB Flash storage Adafruit blog post about QT Py nRF52840 1/6/2022 Now we\u2019ve got the QT Py SAMD21, RP2040 and ESP32-S2 designed and fabricated, we\u2019re going to follow up with an NRF52840 version! We\u2019ve been using the Nordict nRF series for a loooooong time (anyone else remember the nRF8001? it was like the AT90S2313 of bluetooth le for us). nRF52840 is the first one with native USB \u2013 and its plenty fast as a Cortex M4 at 64MHz and 256K of RAM. we already did a module-less route of this chip on the Circuit Playground Bluefruit so we know the schem capture is right. Adaafruit blog post about QT Py ESP32-S3 1/7/2022 This is a swap-out of the ESP32-S2 QT Py for the new ESP32-S3 chip. The S3 is really a nice piece of kit \u2013 dual core is back and it also re-adds BLE. It\u2019s basically an ESP32 with native USB, we\u2019re looking forward to it! note that the S3 chip looks a lot like the S2 but the chip pinout is NOT the same, the reset, and some power pins have moved. and some gpio shifted down one. also, looks like the dual DAC was removed. anyways, just watch out don\u2019t think you can use the exact same layout. we had to shift a few parts but it all still looks like it fits! top part is identical to the S2 QT Py, and the bottom only shifted a few passives around. we\u2019ll get some 4 layer prototypes on order. Desk of Lady Ada youtube video 1/9/2022 This weekend we cranked through 3.5 QT Py designs (we didnt finish routing one, its a toughie!) - we already make SAMD21, RP2040 and ESP32-S2 and we wanted to add some more chips to the mix: ESP32-S3 (dual core version of the S2), ESP32 Pico (OG ESP with built in flash/psram), ESP32-C3 (Risc-V wifi!) and nRF52840 (BLE wonder-chip from Nordic). the last one is what we didn't get to finish routing because its a particularly tough one. The other 3 worked out fine with a 4 layer PCB. We also designed a few 'BFF' boards - that fit onto a QT Py like a shield. Adafruit blog post about QT Ot ESP32-C3 3/9/2022 ESP32-C3 is a low-cost microcontroller from Espressif that supports 2.4 GHz Wi-Fi and Bluetooth\u00ae Low Energy (Bluetooth LE). It has built-in USB-to-Serial, but not native USB \u2013 it cannot act as a keyboard or disk drive. The chip used here has 4MB of Flash memory, 400 KB of SRAM and can easily handle TLS connections.","title":"Additional versions of the QT Py on the way"},{"location":"glossary/qt_py/#bff","text":"As of January 2022, BFF is the placeholder name for Adafruit expansion boards for QT Py boards that fit onto a QT Py like a shield. https://blog.adafruit.com/2022/01/11/qt-py-bff-with-lipoly-charging-and-switch/ https://blog.adafruit.com/2022/01/11/gamer-bff-qt-py-mini-gaming-add-on/","title":"BFF"},{"location":"glossary/qt_py/#additional-references","text":"Hackster.io QT Py Review This page was last updated on 2022-03-09 18:36:07 -0500.","title":"Additional References"},{"location":"glossary/raspberry_pi/","text":"Raspberry Pi Back to Index Related GPIO , HAT WIP The Raspberry Pi is a SBC (Single Board Computer) produced by the Raspberry Pi Foundation . The Raspberry Pi is a General Purpose Computer which is different from a microcontroller which is a single purpose computer. A chart comparing the Raspberry Pi to an Arduino is on the microcontroller glossary page. The Raspberry Pi's schematics are released, but the board itself is not open hardware. The Raspberry Pi Foundation relies on income from the sale of Raspberry Pis to do its charitable work. Reference: https://opensource.com/resources/raspberry-pi What is Raspberry Pi? Specs and Models (2021 Guide) 8/25/2021 CircuitPython on Raspberry Pi (Bare Metal / No OS) https://learn.adafruit.com/raspberry-pi-care-and-troubleshooting/ 11/10/2021 raspberrypi Advanced options with Raspberry Pi Imager makes it a much better choice than Balena Etcher. https://youtu.be/hCxT0A-5_9k?t=283 Open Advanced Settings Options Ctrl-shift-x Then you can set hostname, enable SSH, set password for pi user, Configure WiFi, Set Locale Settings. Awesome! Additional reference: https://learn.adafruit.com/raspberry-pi-zero-creation/using-rpi-imager 2/24/2020 raspberrypi confirmed 1.2 release https://hackaday.com/2020/02/23/raspberry-pi-slips-out-new-pcb-version-with-usb-c-power-fix/ https://news.ycombinator.com/item?id=22402211 2/20/2020 raspberrypi https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md Improved USB-C on newer Pi4s? - Raspberry Pi Forums https://www.raspberrypi.org/forums/viewtopic.php?t=260719 https://tutorial.cytron.io/2020/02/22/how-to-check-if-your-raspberry-pi-4-model-b-is-rev1-2/ https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md cat /proc/cpuinfo The last three lines show the hardware type, the revision code, and the Pi's unique serial number. Raspberry Pi 4B 4GB c03111 4B 1.1 4GB Sony UK c03112 4B 1.2 4GB Sony UK Saniabox - Raspberry Pi 4B 2GB b03112 4B 1.2 Raspberry Pi 4B 4GB rev 1.1 processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 108.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : c03111 Serial : 10000000032c4bda Model : Raspberry Pi 4 Model B Rev 1.1 Raspberry Pi 4B 4GB rev 1.2 processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 108.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : c03112 Serial : 10000000717e4b0e Model : Raspberry Pi 4 Model B Rev 1.2 Raspberry Pi 4B 8GB processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 108.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : d03114 Serial : 1000000005056aef Model : Raspberry Pi 4 Model B Rev 1.4 11/9/2020 Raspberry Pi 400 processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 324.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0sssssssssssssssssssssssssssssssssssssssssssssssx41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : c03130 Serial : 1000000045f95cf0 Model : Raspberry Pi 400 Rev 1.0 References Raspberry Pi Awesome list Raspberry Pi inventory tracker As referenced from: https://www.jeffgeerling.com/blog/2022/its-dire-raspberry-pi-availability-tracker-launched https://news.ycombinator.com/item?id=30154141 This page was last updated on 2022-03-08 14:23:07 -0500.","title":"Rasbperry Pi"},{"location":"glossary/raspberry_pi/#raspberry-pi","text":"","title":"Raspberry Pi"},{"location":"glossary/raspberry_pi/#back-to-index","text":"Related GPIO , HAT WIP The Raspberry Pi is a SBC (Single Board Computer) produced by the Raspberry Pi Foundation . The Raspberry Pi is a General Purpose Computer which is different from a microcontroller which is a single purpose computer. A chart comparing the Raspberry Pi to an Arduino is on the microcontroller glossary page. The Raspberry Pi's schematics are released, but the board itself is not open hardware. The Raspberry Pi Foundation relies on income from the sale of Raspberry Pis to do its charitable work. Reference: https://opensource.com/resources/raspberry-pi What is Raspberry Pi? Specs and Models (2021 Guide) 8/25/2021 CircuitPython on Raspberry Pi (Bare Metal / No OS) https://learn.adafruit.com/raspberry-pi-care-and-troubleshooting/ 11/10/2021","title":"Back to Index"},{"location":"glossary/raspberry_pi/#raspberrypi-advanced-options-with-raspberry-pi-imager-makes-it-a-much-better-choice-than-balena-etcher","text":"https://youtu.be/hCxT0A-5_9k?t=283 Open Advanced Settings Options Ctrl-shift-x Then you can set hostname, enable SSH, set password for pi user, Configure WiFi, Set Locale Settings. Awesome! Additional reference: https://learn.adafruit.com/raspberry-pi-zero-creation/using-rpi-imager","title":"raspberrypi  Advanced options with Raspberry Pi Imager makes it a much better choice than Balena Etcher."},{"location":"glossary/raspberry_pi/#2242020","text":"","title":"2/24/2020"},{"location":"glossary/raspberry_pi/#raspberrypi-confirmed-12-release","text":"https://hackaday.com/2020/02/23/raspberry-pi-slips-out-new-pcb-version-with-usb-c-power-fix/ https://news.ycombinator.com/item?id=22402211","title":"raspberrypi  confirmed 1.2 release"},{"location":"glossary/raspberry_pi/#2202020","text":"","title":"2/20/2020"},{"location":"glossary/raspberry_pi/#raspberrypi","text":"https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md Improved USB-C on newer Pi4s? - Raspberry Pi Forums https://www.raspberrypi.org/forums/viewtopic.php?t=260719 https://tutorial.cytron.io/2020/02/22/how-to-check-if-your-raspberry-pi-4-model-b-is-rev1-2/ https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md cat /proc/cpuinfo The last three lines show the hardware type, the revision code, and the Pi's unique serial number. Raspberry Pi 4B 4GB c03111 4B 1.1 4GB Sony UK c03112 4B 1.2 4GB Sony UK Saniabox - Raspberry Pi 4B 2GB b03112 4B 1.2 Raspberry Pi 4B 4GB rev 1.1 processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 108.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : c03111 Serial : 10000000032c4bda Model : Raspberry Pi 4 Model B Rev 1.1 Raspberry Pi 4B 4GB rev 1.2 processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 108.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : c03112 Serial : 10000000717e4b0e Model : Raspberry Pi 4 Model B Rev 1.2 Raspberry Pi 4B 8GB processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 108.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : d03114 Serial : 1000000005056aef Model : Raspberry Pi 4 Model B Rev 1.4","title":"raspberrypi"},{"location":"glossary/raspberry_pi/#1192020","text":"Raspberry Pi 400 processor : 3 model name : ARMv7 Processor rev 3 (v7l) BogoMIPS : 324.00 Features : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 CPU implementer : 0sssssssssssssssssssssssssssssssssssssssssssssssx41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xd08 CPU revision : 3 Hardware : BCM2711 Revision : c03130 Serial : 1000000045f95cf0 Model : Raspberry Pi 400 Rev 1.0","title":"11/9/2020"},{"location":"glossary/raspberry_pi/#references","text":"Raspberry Pi Awesome list Raspberry Pi inventory tracker As referenced from: https://www.jeffgeerling.com/blog/2022/its-dire-raspberry-pi-availability-tracker-launched https://news.ycombinator.com/item?id=30154141 This page was last updated on 2022-03-08 14:23:07 -0500.","title":"References"},{"location":"glossary/rp2040/","text":"RP2040 Back to Index Related Microcontroller , Feather , QT Py , Itsy Bitsy WIP RP2040 Raspberry Pi Foundation's first microcontroller Raspberry Pi Pico and the chipset RP2040 . Adafruit has a great walkthrough on how to get started with CircuitPython with Raspberry Pi Pico The RP2040 chipset is used by other manufacturers to produce a whole range of new microcontrollers: Adafruit Feather RP2040 Adafruit MacroPad Arduino Nano RP2040 Connect with headers Cytron Maker Nano RP2040 Raspberry Pi Pico QT Py RP2040 Here's a great write up of the best RP2040 boards in 2022: Best RP2040 boards 2022 This page was last updated on 2022-03-10 13:37:07 -0500.","title":"RP2040"},{"location":"glossary/rp2040/#rp2040","text":"","title":"RP2040"},{"location":"glossary/rp2040/#back-to-index","text":"Related Microcontroller , Feather , QT Py , Itsy Bitsy WIP RP2040 Raspberry Pi Foundation's first microcontroller Raspberry Pi Pico and the chipset RP2040 . Adafruit has a great walkthrough on how to get started with CircuitPython with Raspberry Pi Pico The RP2040 chipset is used by other manufacturers to produce a whole range of new microcontrollers: Adafruit Feather RP2040 Adafruit MacroPad Arduino Nano RP2040 Connect with headers Cytron Maker Nano RP2040 Raspberry Pi Pico QT Py RP2040 Here's a great write up of the best RP2040 boards in 2022: Best RP2040 boards 2022 This page was last updated on 2022-03-10 13:37:07 -0500.","title":"Back to Index"},{"location":"glossary/shield/","text":"Shield Back to Index Related HAT Shield Example: Adafruit 16-Channel 12-bit PWM/Servo Shield - I2C interface https://www.adafruit.com/product/1411 WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Shield"},{"location":"glossary/shield/#shield","text":"","title":"Shield"},{"location":"glossary/shield/#back-to-index","text":"Related HAT Shield Example: Adafruit 16-Channel 12-bit PWM/Servo Shield - I2C interface https://www.adafruit.com/product/1411 WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/spi/","text":"SPI Back to Index Related I2C , QWIIC , STEMMA , STEMMA QT , What is the difference between Stemma and Stemma QT , GPIO WIP SPI raspberrypi Raspberry Pi GPIO - Getting started with gpiozero 2/22/2020 https://www.youtube.com/watch?v=iL_oZGHLHvU https://dronebotworkshop.com/raspberry-pi-gpio/ Use of Arduino is fine for most cases When you need more computational power, you may want to use a Raspberry Pi 16:15 GPIO Pins - Digital I/O 17:00 - Pins 3 & 5 - I2C (I2C1 SDA (data), I2C1 SCL (clock)) Pins 8 & 10 - Serial I/O Pins 19, 21, 23, 24, 26 - SPI (Serial Peripheral Interface) NOTE: https://pinout.xyz/pinout/spi https://en.wikipedia.org/wiki/Serial_Peripheral_Interface electronics serial communication PROTOCOLS: UART - I2C - SPI - Serial communications #001 https://www.youtube.com/watch?v=IyGwvGzrqp8 http://electronoobs.com/eng_circuitos_tut36.php Additional References Adafruit Learn Guide: SPI devices CircuitPython Basics: I2C and SPI CircuitPython Basics: Digital Inputs & Outputs CircuitPython Basics: Analog Inputs & Outputs I2C addressing This page was last updated on 2022-02-23 11:15:07 -0500.","title":"SPI"},{"location":"glossary/spi/#spi","text":"","title":"SPI"},{"location":"glossary/spi/#back-to-index","text":"Related I2C , QWIIC , STEMMA , STEMMA QT , What is the difference between Stemma and Stemma QT , GPIO WIP SPI","title":"Back to Index"},{"location":"glossary/spi/#raspberrypi-raspberry-pi-gpio-getting-started-with-gpiozero-2222020","text":"https://www.youtube.com/watch?v=iL_oZGHLHvU https://dronebotworkshop.com/raspberry-pi-gpio/ Use of Arduino is fine for most cases When you need more computational power, you may want to use a Raspberry Pi 16:15 GPIO Pins - Digital I/O 17:00 - Pins 3 & 5 - I2C (I2C1 SDA (data), I2C1 SCL (clock)) Pins 8 & 10 - Serial I/O Pins 19, 21, 23, 24, 26 - SPI (Serial Peripheral Interface) NOTE: https://pinout.xyz/pinout/spi https://en.wikipedia.org/wiki/Serial_Peripheral_Interface","title":"raspberrypi  Raspberry Pi GPIO - Getting started with gpiozero  2/22/2020"},{"location":"glossary/spi/#electronics-serial-communication","text":"PROTOCOLS: UART - I2C - SPI - Serial communications #001 https://www.youtube.com/watch?v=IyGwvGzrqp8 http://electronoobs.com/eng_circuitos_tut36.php Additional References Adafruit Learn Guide: SPI devices CircuitPython Basics: I2C and SPI CircuitPython Basics: Digital Inputs & Outputs CircuitPython Basics: Analog Inputs & Outputs I2C addressing This page was last updated on 2022-02-23 11:15:07 -0500.","title":"electronics serial communication"},{"location":"glossary/teensy/","text":"Teensy Back to Index Related Feather , QT Py Teensy Teensy 3.6 without headers https://www.adafruit.com/product/3266 The awesome new Teensy 3.6 is a small, breadboard-friendly development board designed by Paul Stoffregen and PJRC. Teensy 3.6 brings a low-cost 32-bit ARM Cortex-M4 platform to hobbyists, students and engineers, using an adapted version of the Arduino IDE (Teensyduino) or programming directly in C language. Teensy 3.6 is an upgrade over 3.2 and 3.5, for when you need even more power! Version 3.6 features a 32 bit 180 MHz ARM Cortex-M4 processor with floating point unit. All digital and analog pins are 3.3 volts. WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Teensy"},{"location":"glossary/teensy/#teensy","text":"","title":"Teensy"},{"location":"glossary/teensy/#back-to-index","text":"Related Feather , QT Py Teensy Teensy 3.6 without headers https://www.adafruit.com/product/3266 The awesome new Teensy 3.6 is a small, breadboard-friendly development board designed by Paul Stoffregen and PJRC. Teensy 3.6 brings a low-cost 32-bit ARM Cortex-M4 platform to hobbyists, students and engineers, using an adapted version of the Arduino IDE (Teensyduino) or programming directly in C language. Teensy 3.6 is an upgrade over 3.2 and 3.5, for when you need even more power! Version 3.6 features a 32 bit 180 MHz ARM Cortex-M4 processor with floating point unit. All digital and analog pins are 3.3 volts. WIP This page was last updated on 2022-02-23 11:15:07 -0500.","title":"Back to Index"},{"location":"glossary/wippersnapper/","text":"WipperSnapper Back to Index Related Adafruit IO WipperSnapper WIP Adafruit Youtube video 9/28/2021: Welcome to WipperSnapper Adafuirt Blog 7/12/2021: WipperSnapper Beta Adafruit Learn Guide: Quickstart Adafruit IO WipperSnapper Adafruit Learn Guide: No-Code WipperSnapper Water Detection (requires Adafruit IO+ subscription) WipperSnapper Devices List You can visit this page at any time by navigating to https://io.adafruit.com/wippersnapper. Adafruit Youtube video 9/29/2021: I2C Scan with Adafruit.io WipperSnapper Adafruit Learn Guide: Digital Inputs with Adafruit IO WipperSnapper Adafruit Learn Guide: WipperSnapper Action Counter using funhouse Adafruit Youtube Video 1/12/2022: QT Py ESP32-S2 wipper snapper (2minutes) Adafruit Blog 2/14/2022: WipperSnapper No-Code IoT Platform now works with Adafruit Feather HUZZAH ESP8266 Adafruit Blog 3/9/2022: WipperSnapper update - MCP9808 temperature sensor and Feahter ESP32v2 Adafruit Blog 3/11/2022: Wipper Snapper - how to add a new component This page was last updated on 2022-03-11 15:17:07 -0500.","title":"WipperSnapper"},{"location":"glossary/wippersnapper/#wippersnapper","text":"","title":"WipperSnapper"},{"location":"glossary/wippersnapper/#back-to-index","text":"Related Adafruit IO WipperSnapper WIP Adafruit Youtube video 9/28/2021: Welcome to WipperSnapper Adafuirt Blog 7/12/2021: WipperSnapper Beta Adafruit Learn Guide: Quickstart Adafruit IO WipperSnapper Adafruit Learn Guide: No-Code WipperSnapper Water Detection (requires Adafruit IO+ subscription) WipperSnapper Devices List You can visit this page at any time by navigating to https://io.adafruit.com/wippersnapper. Adafruit Youtube video 9/29/2021: I2C Scan with Adafruit.io WipperSnapper Adafruit Learn Guide: Digital Inputs with Adafruit IO WipperSnapper Adafruit Learn Guide: WipperSnapper Action Counter using funhouse Adafruit Youtube Video 1/12/2022: QT Py ESP32-S2 wipper snapper (2minutes) Adafruit Blog 2/14/2022: WipperSnapper No-Code IoT Platform now works with Adafruit Feather HUZZAH ESP8266 Adafruit Blog 3/9/2022: WipperSnapper update - MCP9808 temperature sensor and Feahter ESP32v2 Adafruit Blog 3/11/2022: Wipper Snapper - how to add a new component This page was last updated on 2022-03-11 15:17:07 -0500.","title":"Back to Index"},{"location":"hardware/","text":"Hardware The Adafruit lingo for their hardware is quite extensive and can be confusing to someone new to the Adafruit ecosystem. One of the primary goals of this website is to help newcomers sort through this cornicopia of terminology. Adafruit designs and sells their own custom microcontrollers, components, sensors, and more. What are Microcontrollers? Microcontrollers are single purpose computers small embedded development boards limited storage and memory limited processing power Microcontrollers vs General Purpose Computer Use of microcontrollers is fine for many cases When you need more computational power, you may want to use a Raspberry Pi For example, if you wish to have a web dashboard to interface with, then you will need to use a Raspberry Pi For more info, see the Glossary page for Microcontroller Recommended: First Adafruit Hardware for Beginners Note A Beginner's Recommendation . Circuit Playground Bluefruit Among the many Adafruit devices, the Circuit Playground Bluefruit is more accesible to beginners. It is a great piece of hardware to start with. For more info, see the Glossary page for Circuit Playground Bluefruit List of hardware supported by CircuitPython List of all the hardware currently supported by CircuitPython (Adafruit and other manufacturers) is available at the CircuitPython Downloads Page . As of Feb 2022 There are over 270 boards supported by CircuitPython and that list grows everyday. The list is sorted by number of downloads. The most popular board -- the Raspberry Pi Pico -- is not manufactured by Adafruit. Adafruit Hardware Adafruit offers 68 different microcontrollers which run CircuitPython. Within the Adafruit ecosystem, the primary microcontroller form factors are: Circuit Playground Adafruit Feather (Regular) Supported by an extensive array of expansion options called FeatherWings ItsyBitsy (Small) QT Py (Tiny) Metro (Arduino form factor) Trinkey (USB dongles) Other form factors: CLUE Gemma M0 (tiny - great for wearble projects) FunHouse (home automation) KB2040 (custom keyboards) MacroPad (custom macrokeypad) MagTag (e-ink display with WiFi) MatrixPortal (power LED Matrix displays - has WiFi) PyBadge/EdgeBadge/PyGamer PyPortal/PyPortal Titano (an IoT display) Trellis Trinket M0 Teensy Chipsets Most Adafruit devices use one of the following chipsets: SAMD21 SAMD51 ESP32-S2 ESP32-S3 ESP32-C3 NRF52840 RP2040 There are features and advantages to each chipset, so there are often multiple versions of a particular Adafruit form factor based upon different chipsets. For example: Circuit Playground Versions QT Py Versions Pretty Pins - pin out diagrams for Adafruit hardware CSV files for Adafruit pin out diagrams - only needed to be done once per chip Choosing a Board Go to Choosing a Board Go to Choosing a Board This page was last updated on 2022-03-13 13:03:07 -0500.","title":"Overview"},{"location":"hardware/#hardware","text":"The Adafruit lingo for their hardware is quite extensive and can be confusing to someone new to the Adafruit ecosystem. One of the primary goals of this website is to help newcomers sort through this cornicopia of terminology. Adafruit designs and sells their own custom microcontrollers, components, sensors, and more.","title":"Hardware"},{"location":"hardware/#what-are-microcontrollers","text":"Microcontrollers are single purpose computers small embedded development boards limited storage and memory limited processing power Microcontrollers vs General Purpose Computer Use of microcontrollers is fine for many cases When you need more computational power, you may want to use a Raspberry Pi For example, if you wish to have a web dashboard to interface with, then you will need to use a Raspberry Pi For more info, see the Glossary page for Microcontroller","title":"What are Microcontrollers?"},{"location":"hardware/#recommended-first-adafruit-hardware-for-beginners","text":"Note A Beginner's Recommendation . Circuit Playground Bluefruit Among the many Adafruit devices, the Circuit Playground Bluefruit is more accesible to beginners. It is a great piece of hardware to start with. For more info, see the Glossary page for Circuit Playground Bluefruit","title":"Recommended: First Adafruit Hardware for Beginners"},{"location":"hardware/#list-of-hardware-supported-by-circuitpython","text":"List of all the hardware currently supported by CircuitPython (Adafruit and other manufacturers) is available at the CircuitPython Downloads Page . As of Feb 2022 There are over 270 boards supported by CircuitPython and that list grows everyday. The list is sorted by number of downloads. The most popular board -- the Raspberry Pi Pico -- is not manufactured by Adafruit.","title":"List of hardware supported by CircuitPython"},{"location":"hardware/#adafruit-hardware","text":"Adafruit offers 68 different microcontrollers which run CircuitPython.","title":"Adafruit Hardware"},{"location":"hardware/#within-the-adafruit-ecosystem-the-primary-microcontroller-form-factors-are","text":"Circuit Playground Adafruit Feather (Regular) Supported by an extensive array of expansion options called FeatherWings ItsyBitsy (Small) QT Py (Tiny) Metro (Arduino form factor) Trinkey (USB dongles)","title":"Within the Adafruit ecosystem, the primary microcontroller form factors are:"},{"location":"hardware/#other-form-factors","text":"CLUE Gemma M0 (tiny - great for wearble projects) FunHouse (home automation) KB2040 (custom keyboards) MacroPad (custom macrokeypad) MagTag (e-ink display with WiFi) MatrixPortal (power LED Matrix displays - has WiFi) PyBadge/EdgeBadge/PyGamer PyPortal/PyPortal Titano (an IoT display) Trellis Trinket M0 Teensy","title":"Other form factors:"},{"location":"hardware/#chipsets","text":"Most Adafruit devices use one of the following chipsets: SAMD21 SAMD51 ESP32-S2 ESP32-S3 ESP32-C3 NRF52840 RP2040 There are features and advantages to each chipset, so there are often multiple versions of a particular Adafruit form factor based upon different chipsets. For example: Circuit Playground Versions QT Py Versions Pretty Pins - pin out diagrams for Adafruit hardware CSV files for Adafruit pin out diagrams - only needed to be done once per chip","title":"Chipsets"},{"location":"hardware/#choosing-a-board","text":"Go to Choosing a Board Go to Choosing a Board This page was last updated on 2022-03-13 13:03:07 -0500.","title":"Choosing a Board"},{"location":"hardware/choosing_a_board/","text":"Choosing a board Back to Hardware Overview Related Grove , JST , QWIIC , Stemma , Stemma QT , What is the difference between Stemma and Stemma QT Adafruit Learn Guides on choosing a microcontroller Here are some great Adafruit guides on how to choose a microcontroller: Adafruit Learn Guide: Which CircuitPython board is right for you? Adafruit Learn Guide: How to choose a microcontroller Adafruit Learn Guide: Best Beginner Boards for Teachers Considerations for Choosing a Board There are many features to consider when choosing a board What Software is supported CircuitPython Arduino MakeCode Wireless WiFi Bluetooth Connectors Solderless STEMMA, STEMMA QT, etc Alligator Clips Bolt on kit for Circuit Playground or Gemma Headers Breadboard Stacking Headers Size Expansion Battery and Pass-thru chargning Cabling Price Power Reference: Youtube video: CircuitPython School - Choosing a Board for CircuitPython: A Few Important Considerations Minute 4:00 - Arduino Nano RP2040 Connect Pros and Cons listed Minute 6:15 Stemma-QT is discussed Minute 8:49 Stemma standard is discussed - not plug-compatible with Stemma-QT Minute 10:30 - Feather RP2040 Pros and Cons listed Minute 11:19 - QT Py RP2040 Pros and Cons listed Minute 12:19 Microcontrollers vs \"Computers\" Youtube video: CircuitPython School - Adding STEMMA QT_Qwiic to an Arduino RP2040 + Using a Temperature Sensor Minute 0:57 Stemma QT recap Minute 1:42 Lists some boards which have STEMMA-QT ports Connectors Explore what is STEMMA or STEMMA QT Go to Connectors Go to Connectors CircuitPython components for beginners sensors - temperature, light, sound, proximity RFID, NFC, PIR Rotary encoders Potentiometers buttons relays cameras displays This page was last updated on 2022-03-11 13:15:07 -0500.","title":"Choosing a Board"},{"location":"hardware/choosing_a_board/#choosing-a-board","text":"","title":"Choosing a board"},{"location":"hardware/choosing_a_board/#back-to-hardware-overview","text":"Related Grove , JST , QWIIC , Stemma , Stemma QT , What is the difference between Stemma and Stemma QT","title":"Back to Hardware Overview"},{"location":"hardware/choosing_a_board/#adafruit-learn-guides-on-choosing-a-microcontroller","text":"Here are some great Adafruit guides on how to choose a microcontroller: Adafruit Learn Guide: Which CircuitPython board is right for you? Adafruit Learn Guide: How to choose a microcontroller Adafruit Learn Guide: Best Beginner Boards for Teachers","title":"Adafruit Learn Guides on choosing a microcontroller"},{"location":"hardware/choosing_a_board/#considerations-for-choosing-a-board","text":"There are many features to consider when choosing a board What Software is supported CircuitPython Arduino MakeCode Wireless WiFi Bluetooth Connectors Solderless STEMMA, STEMMA QT, etc Alligator Clips Bolt on kit for Circuit Playground or Gemma Headers Breadboard Stacking Headers Size Expansion Battery and Pass-thru chargning Cabling Price Power Reference: Youtube video: CircuitPython School - Choosing a Board for CircuitPython: A Few Important Considerations Minute 4:00 - Arduino Nano RP2040 Connect Pros and Cons listed Minute 6:15 Stemma-QT is discussed Minute 8:49 Stemma standard is discussed - not plug-compatible with Stemma-QT Minute 10:30 - Feather RP2040 Pros and Cons listed Minute 11:19 - QT Py RP2040 Pros and Cons listed Minute 12:19 Microcontrollers vs \"Computers\" Youtube video: CircuitPython School - Adding STEMMA QT_Qwiic to an Arduino RP2040 + Using a Temperature Sensor Minute 0:57 Stemma QT recap Minute 1:42 Lists some boards which have STEMMA-QT ports","title":"Considerations for Choosing a Board"},{"location":"hardware/choosing_a_board/#connectors","text":"Explore what is STEMMA or STEMMA QT Go to Connectors Go to Connectors CircuitPython components for beginners sensors - temperature, light, sound, proximity RFID, NFC, PIR Rotary encoders Potentiometers buttons relays cameras displays This page was last updated on 2022-03-11 13:15:07 -0500.","title":"Connectors"}]}