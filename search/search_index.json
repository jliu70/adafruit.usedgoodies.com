{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"<p>It's never been a better time to learn electronics and programming. The cost of computing components keeps decreasing, and many companies are making it easier and accessible (Adafruit, Sparkfun, etc). Couple that with the rise of Python, and the barriers to entry continue to get lower and lower.</p>"},{"location":"#introduction","title":"Introduction","text":"<p>This guide is for people new to Adafruit and to electronics.  </p> <ul> <li>The focus is on the Adafruit ecosystem </li> <li>Roadmap for people new to the Adafruit ecosystem.  </li> <li>Review Adafruit lingo and branding.  </li> </ul> <p>This website does not cover electronics in general --  Along the way some electronics is discussed, but this website does not cover topics in depth.  </p> <p>As much as possible, links to additional resources or references will be provided.</p> <p>Note</p> <p>I am not affiliated with Adafruit in any way, and I am not being paid by Adafruit.  I'm just a huge fan of Adafruit.  I wrote this guide because I haven't seen anything on Adafruit similar to this.</p> <p>Getting Started</p>"},{"location":"contact/","title":"Contact Us","text":""},{"location":"contact/#questions-comments-suggestions-or-error-corrections","title":"Questions, comments, suggestions or error corrections","text":"<p>I hope you found this website to be helpful.  </p> <p>If you have additional questions, comments, suggests or error corrections, please feel free to send feedback.</p>"},{"location":"contact/#option-1-adafruit-forums","title":"Option 1: Adafruit Forums","text":"<p>The easiest way to send feedback is via the Adafruit Forums:</p> <ul> <li>Adafruit Forum Post: Adafruit for Newbies - Reference website to help newcomers</li> </ul> <p>You will need to create a free Adafruit forum account in order to post.</p> <p>For newbies, the benefits are: </p> <ul> <li>Straight forward and simple to post to the forum.</li> <li>If there is a question where I do not know the answer, Adafruit support or other community members may also be able to help</li> </ul>"},{"location":"contact/#option-2-github-issue","title":"Option 2: Github Issue","text":"<p>For more experienced people, if you have a Github account, you may also choose to open an issue on the repo for the site itself:</p> <ul> <li>Github adafruit.usedgoodies.com repo - Issues</li> </ul> <p>Please note that while I will see submissions here, that it's not as visible to the rest of the community. </p> <p>This page was last updated on 2022-02-23 11:15:07 -0500.</p>"},{"location":"circuitpython/","title":"CircuitPython","text":"<p>The majority of Adafruit hardware can run either</p> <ul> <li> <p>Arduino </p> <p>or </p> </li> <li> <p>CircuitPython </p> </li> <li> <p>Some Adafruit hardware is also compatible with MakeCode.</p> </li> </ul> <p>Note</p> <p>A Beginner's Recommendation.</p> <p>CircuitPython</p>"},{"location":"circuitpython/#what-is-circuitpython","title":"What is CircuitPython?","text":"<p>This website focuses on CircuitPython which is a version of python for microcontrollers.  Adafruit is the principle backer for CircuitPython.  </p> <p>I recommend CircuitPython over Arduino for beginners because:</p> <ul> <li>Python is a more accesible programming language than <code>C++</code> (which is what Arduino uses). <ul> <li>Python syntax is more similar to plain language</li> </ul> </li> <li>Python gives beginners an easier and quicker feedback loop <ul> <li>Python code does not need to be compiled in the way that C++ (Arduino) code requirees.<ul> <li>With CircuitPython, the code is stored and run directly on the microcontroller, aka \"click save and your code starts running\" </li> </ul> </li> <li>Arduino code requires the traditional method of:<ul> <li>Compiling code on an external device (e.g., your laptop)</li> <li>Downloading the compiled binary to the microcontroller through the Arduino IDE</li> <li>Debugging the code</li> <li>Watching the output</li> </ul> </li> </ul> </li> <li>Edit with any code editor</li> </ul> <p>Because of these and other reasons, Python continues to be increasingly used for microcontroller projects.</p>"},{"location":"circuitpython/#makecode","title":"MakeCode","text":"<p>Note</p> <p>Great for younger students, MakeCode is a blocked-based programming language which is similar to Scratch.  </p> <p>Block-based programming, such as MakeCode or Scratch, is great for younger beginners.  Using drag-and-drop blocks avoids common syntax errors like typos or formatting issues, which can be source of frustration for new programmers.   However, the power and flexiblity of block-based programs is limited.  </p> <p>Hence for older students, or those students already experienced with Scratch or MakeCode, I recommend jumping straight into python.</p>"},{"location":"circuitpython/#edublocks","title":"Edublocks","text":"<p>For those looking to ease the transition from block-based programming to python, EduBlocks is an interesting hybrid which offers python in a block-based format.</p> <p>The CircuitPython Show interviews Joshua Lowe, the creator of EduBlocks (Aug 8, 2022).  Joshua Lowe joins the show and shares how he started programming and created Edublocks.</p>"},{"location":"circuitpython/#codeskool","title":"CodeSkool","text":"<p>CodeSkool is a block based Python for Raspberry Pi Pico  https://www.reddit.com/r/circuitpython/comments/uri5ws/teach_kids_python_and_embedded_electronics_with_4/ https://ide.codeskool.cc Now at CodeSkool (https://ide.codeskool.cc) we support the complete examples of PicoZero Python API https://picozero.readthedocs.io/en/latest/recipes.html All you need is a $4 raspberry Pico board, few led, resistors, a buzzer &amp; a speaker. Now write programs that runs and interact with the physical world, using drag &amp; drop scratch blocks with our Python extension. With Scratch Kids can use the familiar environment to program Pico. Just drag the blocks and it will generate the python code, that they can upload directly, i.e. save directly using the upload button to the device. The kids don't need any tool, just a browser and there familiar scratch environment and they can write code that is running on embedded hardware and can interface with the real world like they used to do with makey makey, etc</p>"},{"location":"circuitpython/#what-about-micropython","title":"What about Micropython?","text":"<p>MicroPython is an open source Python programming language interpretor that runs on small embedded development boards, aka microcontrollers.</p> <ul> <li>Lean and efficient implementation of Python 3 <ul> <li>Includes a small subset of Python standard library</li> </ul> </li> <li>Optimized to run on microcontrollers</li> <li>Micropython developed by Damien George in 2014<ul> <li>CircuitPython is a fork of Micropython <ul> <li>CircuirtPython developed by Adafruit in 2017</li> </ul> </li> <li>While CircuitPython looks somewhat like MicroPython there are some differences.</li> </ul> </li> </ul> <p>Choose MicroPython</p> <ul> <li>For advanced features like interrupts and threading</li> <li>Complete access to the RP2040\u2019s Programmable I/O (PIO) in Python </li> </ul> <p>Choose CircuitPython  </p> <ul> <li>Beginner friendly</li> <li>Extensive library support for sensors and other breakouts </li> <li>Well supported by Adafruit</li> </ul>"},{"location":"circuitpython/#circuitpython-documentation","title":"CircuitPython Documentation","text":"<p>CircuitPython documentation is hosted at Read the Docs.</p> <p>http://docs.circuitpython.org/</p>"},{"location":"circuitpython/#circuitpython-community","title":"CircuitPython Community","text":"<p>https://learn.adafruit.com/welcome-to-the-community</p>"},{"location":"circuitpython/#additional-references","title":"Additional References","text":"<ul> <li>Adafruit Learn Guide: Welcome to CircuitPython</li> <li>Adafruit Learn Guide: What is CircuitPython?</li> <li>Arduino </li> <li>CircuitPython.org</li> <li>MicroPython</li> <li>EduBlocks </li> <li>MakeCode </li> <li>Scratch</li> </ul>"},{"location":"circuitpython/#additional-circuitpython-resources","title":"Additional CircuitPython Resources","text":"<ul> <li>Explore CircuitPython on Adafruit: Kits, boards, featherwings, sensors, projects</li> </ul> <p>Adafruit has a great walkthrough on how to get started with CircuitPython with Raspberry Pi Pico</p> <ul> <li>Adafruit video Collin lab one minute CircuitPython on Raspberry Pi Pico </li> <li>Awesome CircuitPython list</li> <li> <p>circuitpython-tricks a GitHub repository with a very good list of tips &amp; tricks </p> <ul> <li>Adafruit Learn Guide: Todbot's CircuitPython Tricks     Includes links to the related Circuit Python Parsec videos </li> </ul> </li> <li> <p>Independent podcast: The CircuitPython Show (Youtube) where Paul Cutler interviews members of the CircuitPython Community on a bi-weekly schedule</p> </li> <li> <p>Adafruit Blog 5/16/2022:  There are now over 300 CircuitPython compatible microcontroller boards</p> </li> <li> <p>Adafruit Blog 3/1/2023: NEW GUIDE: CircuitPython Safe Mode</p> </li> </ul> <p>This page was last updated on 2023-03-01 15:25:07 -0500.</p>"},{"location":"circuitpython/installation/","title":"Installation","text":"<p>Adafruit has great documentation for CircuitPython.</p> <p>This page tries to supplement the existing documentation by providing a quick overview and a summary of the overall process.</p> <p>Other documentation listed at Additional Referernces</p>"},{"location":"circuitpython/installation/#circuitpython-installation-has-two-general-steps","title":"CircuitPython installation has two general steps:","text":"<ol> <li>Installing the CircuitPython UF2 image onto your device</li> <li>Installing additional CircuitPython Libraries as needed</li> </ol>"},{"location":"circuitpython/installation/#i-circuitpython-uf2-image","title":"I. CircuitPython UF2 Image","text":"<p>Installation of CircuitPython via CircuitPython UF2 image installation is a simple drag-and-drop operation because Adafruit devices usually support USB mode.</p> <p>When you connect the microcontroller to your computer via a USB cable, it will appear on your computer as a USB drive.</p> <p>Warning</p> <p>Make sure that the cable you use is a USB data cable.  If you are using a USB charging cable, the device will not be mounted on your system as a USB drive.</p>"},{"location":"circuitpython/installation/#uf2-steps","title":"UF2 Steps","text":"<ol> <li>Download UF2 image for your board<ul> <li>Go to CircuitPython Downloads site and click on your board</li> <li>NOTE: if your board does not appear on the list, then it probably does not support CircuitPython.  The majority of Adafruit devices support CircuitPython.</li> </ul> </li> <li>Place your device into bootloader mode <ul> <li>Refer to documentation for your device as this process varies</li> </ul> </li> <li>Drag and drop the UF2 file you downloaded in the first step to your device via the mounted Bootloader USB drive <ul> <li>The name of the mounted Bootloader drive varies.  For example, the <code>Raspberry Pi Pico</code> bootloader drive is named <code>RPI-RPI2</code>)</li> <li>If the copy is successful, you should see the Bootloader drive automatically unmount, and then a new drive usually named <code>CIRCUITPY</code> will automatically mount</li> </ul> </li> </ol> <p>If the above three steps complete successfully, you are done!  You can start coding with CircuitPython on your device.  Thereafter when you reconnect your device to your computer, it should automatically been seen as a USB drive named <code>CIRCUITPY</code>.   You will no longer see the bootloader disk mounted unless you place the device into bootloader mode -- usually you will only go to the bootloader mode to upgrade CircuitPython. </p> <p>Located on your <code>CIRCUITPY</code> drive folder, the main starter program is <code>code.py</code> </p> <p>Use any editor of your choice  --  changes saved to <code>code.py</code> run immediately.</p> <p>Note</p> <p>A Beginner's Recommendation.</p> <p>Mu Editor</p> <p>While you may use any editor of your choice the Mu Editor is a great editor for beginners. There are versions for Windows, Mac OS, and Linux.</p> <ul> <li>When you first run Mu Editor, it should prompt you to pick a mode<ul> <li>You may pick the mode for \"CircuiPython\".  <ul> <li>The advantage to \"CircuitPython mode\" is that the Mu Editor will let you access the Serial Console where you can interact with the REPL (Read Eval Print Loop) </li> </ul> </li> </ul> </li> </ul>"},{"location":"circuitpython/installation/#additional-references","title":"Additional References","text":"<ul> <li> <p>Great video walkthrough of the process: CircuitPython School - CircuitPython Installation</p> </li> <li> <p>Another great video walkthrough of the process: DroneBot Workshop - CircuitPython with Raspberry Pi Pico</p> </li> </ul>"},{"location":"circuitpython/installation/#ii-circuitpython-libaries","title":"II. CircuitPython Libaries","text":"<p>Once you have CircuitPython installed on your device, you can start coding in CircuitPython immediately. However, once your code makes calls beyond the libraries included with the UF2 image install  -- most commonly after you attach sensors or other breakouts to the microcontroller -- you will need the following additional steps: </p> <ul> <li>Download the CircuitPython Library Bundle</li> <li>Copy additional libraries to the microcontroller</li> </ul> <p>As of January 23, 2023 there are 400 CircuitPython libraries!</p> <p>The full CircuitPython Library Bundle is around 3.5MB compressed.  </p> <ul> <li>Since the storage available on most microcontrollers is limited<ul> <li>There is often not enough capacity to store the complete CircuitPython Library bundle</li> <li>Only copy additional libraries individually based upon the sensors, components and other breakouts you attach</li> </ul> </li> </ul>"},{"location":"circuitpython/installation/#the-main-options-for-copying-additional-libraries-onto-the-microcontroller-are","title":"The main options for copying additional libraries onto the microcontroller are:","text":"<ul> <li>For Adafruit Learn Guides:  Bundlefly</li> <li>Manually Copy</li> <li>Using a Tool (I highly recommend <code>circup</code>)</li> </ul>"},{"location":"circuitpython/installation/#bundlefly","title":"Bundlefly","text":"<p>Note</p> <p>A Beginner's Recommendation.</p> <p>Bundlefly</p> <p>All CircuitPython Adafruit Learn Guides now have a feature called Bundlefly which will allow users to download one zip file which includes the code, all required libraries, and if needed, asset files.</p> <p>Find the download link called <code>Download Project Bundle</code> located at the beginning of any CircuitPython code section.</p> <p>Once you have extracted all the files from the downloaded zip file, you just drag-and-drop them onto your microntroller CIRCUITPY drive.</p>"},{"location":"circuitpython/installation/#manually-copy","title":"Manually Copy","text":"<p>You can download the library bundle and then copy the libraries over to the microntroller manually.  This is the original method which is labor intensive and prone to error.</p> <ol> <li>Download the CircuitPython Library Bundle<ul> <li> <p>Warning</p> Make sure to download the bundle that matches the major version of your CircuitPython  </li> <li>Unzip the bundle, then drag and drop the individual libraries you need</li> </ul> </li> </ol> <p>Note</p> <p>Most Adafruit learn guides and other 3rd party tutorials reference the manual method.</p>"},{"location":"circuitpython/installation/#using-a-tool-circup","title":"Using a tool: circup","text":"<p>Circup is a great way to install CircuitPython libraries and keep all your CircuitPython libraries up to date.</p> <p>While <code>circup</code> does require some intial setup, you should only need to do the setup once.</p> <p>Circup usage is very similar to python <code>pip</code>.</p> <p>Note</p> <p>IMHO using <code>circup</code> is vastly superior to copying CircuitPython libraries manually, but it does require the user to be comfortable with the command line.</p> <p>Circup Advantages</p> <ul> <li>No need to manually: <ul> <li>Download the CircuitPython Bundle Library zip file</li> <li>Extract the bundle zip file</li> <li>Drag and drop individual libraries to the microcontroller</li> </ul> </li> <li>Install individual libraries by name or a list of libraries in a text file.</li> <li>Generate a list of libraries currently installed on your device with the <code>freeze</code> option. (see below for more info)</li> </ul> <p>I first learned about <code>circup</code> from one of John Park's CircuitPython Parsec videos: </p> <ul> <li>Adafruit Blog on John Park's CircuitPython Parsec:  CircUp  CircuitPython Updater </li> <li>Video: John Park's CircuitPython Parsec: Circup CircuitPython Updater   (9/17/2021)</li> </ul>"},{"location":"circuitpython/installation/#circup-initial-setup-only-need-to-run-once","title":"Circup Initial Setup - only need to run once","text":"<p>Pre-requisite</p> <ul> <li>Have a working Python3 installation on your computer.<ul> <li>For Windows, best to download python and install.</li> <li>For Mac, you have options such as <ul> <li>homebrew </li> <li>Command Line Tools (must have an Apple ID) (what I use)</li> </ul> </li> <li>For Linux, check your distro documentation for info on how to install Python3 (if not already installed)</li> </ul> </li> </ul> <p>I recommend to install circup via a python virtual environment.</p> <p>Although if you prefer, you may skip the virtual environment creation and directly <code>pip install circup</code> onto your computer.</p> <p>Create Python Virtual Environment (optional - skip to Install Circup if you don't want to use a virtual environment)</p> <p>On a Mac:</p> <pre><code>python3 -m venv ~/.virtualenvs/circup\n</code></pre> <p>On Linux:</p> <pre><code>python3 -m venv ~/.virtualenvs/circup\n</code></pre> <p>On Windows:</p> <p>Pre-requisites</p> <ul> <li>Install Python on your computer</li> </ul> <pre><code>python -m venv ~/.virtualenvs/circup\n</code></pre> <p>Activate Virtual Environment</p> <p>Mac and Linux</p> <pre><code>. ~/.virtualenvs/circup/bin/activate\n</code></pre> <p>Windows</p> <pre><code>source ~/.virtualenvs/circup/Scripts/activate\n</code></pre> <p>Install Circup</p> <p>On all platforms:</p> <pre><code>pip install circup\n</code></pre> <p>On Mac/Linux if you did not use a virtual environment:</p> <pre><code>pip3 install circup\n</code></pre>"},{"location":"circuitpython/installation/#circup-usage","title":"Circup Usage","text":"<p>NOTE: If using a python virtual environment, before you can call circup, you will first need to activate the virtual environment. (see Activate Virtual Environment above)</p> <p>Command Examples</p> <ul> <li>Circup install a library</li> </ul> <pre><code>circup install adafruit_debouncer\n</code></pre> <ul> <li>Circup remove a library</li> </ul> <pre><code>(circup) jliu@JEFFREYs-MBP ~ % circup uninstall adafruit_debouncer\nFound device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0.\nA newer version of CircuitPython (7.0.0) is available.\nGet it here: https://circuitpython.org/downloads\nUninstalled 'adafruit_debouncer'.\n</code></pre> <ul> <li>Circup install list of libraries from a text file </li> </ul> <pre><code>(circup) jliu@JEFFREYs-MBP /Volumes/CIRCUITPY/lib % circup install -r ../requirements.txt\nFound device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0.\nA newer version of CircuitPython (7.0.0) is available.\nGet it here: https://circuitpython.org/downloads\nSearching for dependencies for: ['a newer version of circuitpython (7.0.0) is available.', 'adafruit_debouncer', 'found device at /volumes/circuitpy, running circuitpython 6.3.0.', 'get it here: https://circuitpython.org/downloads']\nWARNING:\n    a newer version of circuitpython (7.0.0) is available. is not a known CircuitPython library.\nWARNING:\n    found device at /volumes/circuitpy, running circuitpython 6.3.0. is not a known CircuitPython library.\nWARNING:\n    get it here: https://circuitpython.org/downloads is not a known CircuitPython library.\nReady to install: ['adafruit_debouncer']\n\n\nInstalled 'adafruit_debouncer'.\n</code></pre> <ul> <li>Circup create list of libraries from installed libraries on microcontroller<ul> <li>Similar to the <code>pip freeze</code> command. </li> <li>NOTE: Instead of the <code>freeze</code> option, you may also manually create a text file with a list of libraries.</li> </ul> </li> </ul> <pre><code>circup freeze &gt; requirements.txt\n</code></pre> <ul> <li>Circup update existing libraries</li> </ul> <pre><code>circup update\n</code></pre>"},{"location":"circuitpython/installation/#circup-miscellaneous-info","title":"Circup Miscellaneous Info","text":"<ul> <li>Circup bundles-show</li> </ul> <pre><code>(circup) jliu@JEFFREYs-MBP ~ % circup bundle-show\nadafruit/Adafruit_CircuitPython_Bundle\n https://github.com/adafruit/Adafruit_CircuitPython_Bundle\n version = 20210921\nadafruit/CircuitPython_Community_Bundle\n https://github.com/adafruit/CircuitPython_Community_Bundle\n version = 20210921\ncircuitpython/CircuitPython_Org_Bundle\n https://github.com/circuitpython/CircuitPython_Org_Bundle\n version = 0.0.3\n</code></pre> <p>Github Issue requesting support for community bundle and future bundles</p> <ul> <li>Circup bundles by default are downloaded to User's <code>DATA_DIR/circup</code> </li> </ul> <p>NOTE:  Mac default <code>DATA_DIR/circup</code> directory is  <code>~/Library/Application\\ Support/circup</code></p> <pre><code>(circup) % ls -lrt ~/Library/Application\\ Support/circup\ntotal 35752\n-rw-r--r--  1 jliu  staff  11320 Sep 21 11:55 circuitpython-org-bundle-py.zip\n-rw-r--r--  1 jliu  staff   5506 Sep 21 11:55 circuitpython-org-bundle-6mpy.zip\n-rw-r--r--  1 jliu  staff   4992 Sep 21 11:55 circuitpython-org-bundle-7mpy.zip\ndrwxr-xr-x  5 jliu  staff  160 Sep 21 11:55 circuitpython\n-rw-r--r--  1 jliu  staff  4531939 Dec  5 10:25 adafruit-circuitpython-bundle-6mpy.zip\n-rw-r--r--  1 jliu  staff  1398845 Dec  5 10:25 circuitpython-community-bundle-py.zip\n-rw-r--r--  1 jliu  staff   866768 Dec  5 10:25 circuitpython-community-bundle-6mpy.zip\n-rw-r--r--  1 jliu  staff   655732 Dec  5 10:25 circuitpython-community-bundle-7mpy.zip\n-rw-r--r--  1 jliu  staff  7197908 Jan  1 19:44 adafruit-circuitpython-bundle-py.zip\n-rw-r--r--  1 jliu  staff  3607698 Jan  1 19:44 adafruit-circuitpython-bundle-7mpy.zip\ndrwxr-xr-x  8 jliu  staff  256 Jan  1 19:44 adafruit\n-rw-r--r--  1 jliu  staff  160 Jan  1 19:44 circup.json\n\n(circup) jliu@JEFFREYs-MBP ~/Library/Application Support/circup  % du -sh .\n 51M   .\n</code></pre> <p>Config file <code>circup.json</code></p> <pre><code>% find ~ -name circup.json\n/Users/jliu/Library/Application Support/circup/circup.json\n</code></pre> <p>Circup help</p> <pre><code>(circup) jliu@JEFFREYs-MBP ~  % circup --help\nUsage: circup [OPTIONS] COMMAND [ARGS]...\n\n  A tool to manage and update libraries on a CircuitPython device.\n\nOptions:\n  --verbose         Comprehensive logging is sent to stdout.\n  --path DIRECTORY  Path to CircuitPython directory. Overrides automatic path\n                    detection.\n  --version         Show the version and exit.\n  --help            Show this message and exit.\n\nCommands:\n  bundle-add     Add bundles to the local bundles list, by \"user/repo\"...\n  bundle-remove  Remove one or more bundles from the local bundles list.\n  bundle-show    Show the list of bundles, default and local, with URL,...\n  freeze         Output details of all the modules found on the connected...\n  install        Install a named module(s) onto the device.\n  list           Lists all out of date modules found on the connected...\n  show           Show a list of available modules in the bundle.\n  uninstall      Uninstall a named module(s) from the connected device.\n  update         Update modules on the device. Use --all to automatically\n                 update all modules without Major Version warnings.\n\n</code></pre>"},{"location":"circuitpython/installation/#circup-resources","title":"Circup Resources","text":"<ul> <li>Circup documentation</li> <li>Circup Github repo</li> <li>Adafruit Learn Guide: Circup</li> </ul> <p>https://adafruit-playground.com/u/tyeth/pages/creating-a-circuitpython-library-bundle-for-circup</p>"},{"location":"circuitpython/installation/#alternatives-to-circup","title":"Alternatives to Circup","text":"<ul> <li>[ ] minipip: a tool for installing distribution packages for MicroPython and CircuitPython #CircuitPython #MicroPython  </li> </ul> <p>https://blog.adafruit.com/2021/05/26/minipip-a-tool-for-installing-distribution-packages-for-micropython-and-circuitpython-circuitpython-amicropython-aivarannamaa/</p> <ul> <li>[ ] pipkin - successor to minipip, included with Thonny 4</li> </ul> <p>https://pypi.org/project/pipkin/ https://forums.adafruit.com/viewtopic.php?f=60&amp;t=189621 https://blog.adafruit.com/2022/03/25/thonny-python-editor-gets-4-0-0-beta-release-python-micropython/</p> <ul> <li>[ ] circuitpython_deploy</li> </ul>"},{"location":"circuitpython/installation/#online-options","title":"Online Options","text":"<ul> <li> <p>CircuitPython Online IDE</p> </li> <li> <p>CircuitPython Online IDE for Classes</p> </li> </ul>"},{"location":"circuitpython/installation/#ios","title":"iOS","text":"<ul> <li>Edit CircuitPython Code on iOS with Runestone</li> </ul>"},{"location":"circuitpython/installation/#other","title":"Other","text":"<ul> <li>New PIO functionality in CircuitPython with RP2040</li> </ul> <p>This page was last updated on 2023-01-23 12:21:07 -0500.</p>"},{"location":"circuitpython/parsec/","title":"CircuitPython Parsec","text":"<p>The CircuitPython Parsec is a weekly video hosted by John Park of Adafruit.  Each video offers a quick tip with CircuitPython and is generally around 2 minutes or less in length.</p> <p>Here's the complete youtube playlist</p>"},{"location":"circuitpython/parsec/#individual-circuitpython-parsec-videos-with-descriptions","title":"Individual CircuitPython Parsec videos with descriptions","text":"<ul> <li>Firmware Drag and Drop Demo  (4/16/2021)</li> <li>OS and Board Libraries  (4/26/2021)</li> </ul> <p>Some tips on finding out which board type and version of Circuit Python you're running, more at : https://github.com/todbot/circuitpython-tricks </p> <pre><code>import os\nprint (os.uname().machine)\nprint (os.uname().version)   # NOTE: this only prints the version for CircuitPython on embeded devices\nprint (os.uname())\n\nimport board\nboard.[tab]  # press tab for auto-completion - similar to auto-complete on bash\n</code></pre> <ul> <li>Digital Input  (4/30/2021)</li> <li>Digital Output   (5/10/2021)</li> <li>Analog Input  (5/15/2021)</li> <li>Analog Output  (5/24/2021)</li> <li>PWM Output   (5/28/2021)</li> <li>Debouncer    (6/7/2021)</li> <li>Map Range  (6/11/2021) https://blog.adafruit.com/2021/06/11/john-parks-circuitpython-parsec-map-range-adafruit-johnedgarpark-adafruit-circuitpython/ Use the map_range function of the Simple math library to re-map numbers to a new range. Potentiometer giving you 0 \u2013 65520 but you really need 64 \u2013 127? Map_range has got you covered!</li> <li>Wave playback (6/29/2021)  https://blog.adafruit.com/2021/06/29/john-parks-circuitpython-parsec-wave-playback-adafruit-johnedgarpark-adafruit-circuitpython/       </li> <li>Rotary Encorder   (7/6/2021) </li> <li>String Formatting (7/9/2021)</li> <li>Mod Operator  (7/17/2021)</li> <li>Timing Events (8/9/2021)</li> <li>Code for Board Types (8/17/2021)</li> <li>Min-Max Values  (8/23/2021)</li> <li>Color Helper Module  (8/31/2021)</li> <li>List Slices (9/3/2021)</li> <li>Return Values (9/10/2021)</li> <li>CircUp  CircuitPython Updater  (9/17/2021)</li> </ul> <p>https://circup.readthedocs.io/en/latest/ https://github.com/adafruit/circup https://learn.adafruit.com/keep-your-circuitpython-libraries-on-devices-up-to-date-with-circup/</p> <pre><code>python3 -m venv ~/.virtualenvs/circup\n. ~/.virtualenvs/circup/bin/activate\n\n(circup) jliu@JEFFREYs-MBP ~/Downloads/CircuitPython/circuitpython-class % python --version\nPython 3.8.2\n\npip install circup\n\n\n(circup) jliu@JEFFREYs-MBP /Volumes/CIRCUITPY/lib % circup bundle-show\nadafruit/Adafruit_CircuitPython_Bundle\n https://github.com/adafruit/Adafruit_CircuitPython_Bundle\n version = 20210921\nadafruit/CircuitPython_Community_Bundle\n https://github.com/adafruit/CircuitPython_Community_Bundle\n version = 20210921\ncircuitpython/CircuitPython_Org_Bundle\n https://github.com/circuitpython/CircuitPython_Org_Bundle\n version = 0.0.3\n\n\n\ncd /Volumes/CIRCUITPY/lib\n\ncircup install adafruit_debouncer\n\ncircup uninstall adafruit_debouncer\n\n(circup) jliu@JEFFREYs-MBP ~/Downloads/CircuitPython/circuitpython-class % ls -lrt ~/Library/Application\\ Support/circup\ntotal 34080\n-rw-r--r-- 1 jliu staff 6901917 Sep 20 12:21 adafruit-circuitpython-bundle-py.zip\n-rw-r--r-- 1 jliu staff 4426830 Sep 20 12:21 adafruit-circuitpython-bundle-6mpy.zip\n-rw-r--r-- 1 jliu staff 3468520 Sep 20 12:21 adafruit-circuitpython-bundle-7mpy.zip\n-rw-r--r-- 1 jliu staff 1247376 Sep 20 12:21 circuitpython-community-bundle-py.zip\n-rw-r--r-- 1 jliu staff  766679 Sep 20 12:21 circuitpython-community-bundle-6mpy.zip\n-rw-r--r-- 1 jliu staff  593322 Sep 20 12:21 circuitpython-community-bundle-7mpy.zip\ndrwxr-xr-x 8 jliu staff 256 Sep 20 12:21 adafruit\n-rw-r--r-- 1 jliu staff 11320 Sep 20 12:21 circuitpython-org-bundle-py.zip\n-rw-r--r-- 1 jliu staff  5506 Sep 20 12:21 circuitpython-org-bundle-6mpy.zip\n-rw-r--r-- 1 jliu staff  4992 Sep 20 12:21 circuitpython-org-bundle-7mpy.zip\ndrwxr-xr-x 5 jliu staff 160 Sep 20 12:21 circuitpython\n-rw-r--r-- 1 jliu staff 160 Sep 20 12:21 circup.json\n\n(circup) jliu@JEFFREYs-MBP ~/Downloads/CircuitPython/circuitpython-class % du -sh ~/Library/Application\\ Support/circup\n49M  /Users/jliu/Library/Application Support/circup\n\n\n\n\n(circup) jliu@JEFFREYs-MBP /Volumes/CIRCUITPY/lib % circup freeze &gt; ../requirements.txt\n\n\n\n(circup) jliu@JEFFREYs-MBP /Volumes/CIRCUITPY/lib % circup uninstall adafruit_debouncer\nFound device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0.\nA newer version of CircuitPython (7.0.0) is available.\nGet it here: https://circuitpython.org/downloads\nUninstalled 'adafruit_debouncer'.\n\n\n(circup) jliu@JEFFREYs-MBP /Volumes/CIRCUITPY/lib % circup install -r ../requirements.txt\nFound device at /Volumes/CIRCUITPY, running CircuitPython 6.3.0.\nA newer version of CircuitPython (7.0.0) is available.\nGet it here: https://circuitpython.org/downloads\nSearching for dependencies for: ['a newer version of circuitpython (7.0.0) is available.', 'adafruit_debouncer', 'found device at /volumes/circuitpy, running circuitpython 6.3.0.', 'get it here: https://circuitpython.org/downloads']\nWARNING:\n    a newer version of circuitpython (7.0.0) is available. is not a known CircuitPython library.\nWARNING:\n    found device at /volumes/circuitpy, running circuitpython 6.3.0. is not a known CircuitPython library.\nWARNING:\n    get it here: https://circuitpython.org/downloads is not a known CircuitPython library.\nReady to install: ['adafruit_debouncer']\n\n\nInstalled 'adafruit_debouncer'.\n</code></pre> <p>https://github.com/adafruit/circup/pull/110  Support for community bundle and future bundles NOTE:  by default the DATA_DIR/circup directory on Mac is  ~/Library/Application\\ Support/circup</p> <pre><code>find ~ -name circup.json\n/Users/jliu/Library/Application Support/circup/circup.json\n\n\n(circup) jliu@JEFFREYs-MBP ~  % cd Library/Application\\ Support/circup \n\n(circup) jliu@JEFFREYs-MBP ~/Library/Application Support/circup  % ls -lrt\ntotal 35752\n-rw-r--r--  1 jliu  staff  11320 Sep 21 11:55 circuitpython-org-bundle-py.zip\n-rw-r--r--  1 jliu  staff   5506 Sep 21 11:55 circuitpython-org-bundle-6mpy.zip\n-rw-r--r--  1 jliu  staff   4992 Sep 21 11:55 circuitpython-org-bundle-7mpy.zip\ndrwxr-xr-x  5 jliu  staff  160 Sep 21 11:55 circuitpython\n-rw-r--r--  1 jliu  staff  4531939 Dec  5 10:25 adafruit-circuitpython-bundle-6mpy.zip\n-rw-r--r--  1 jliu  staff  1398845 Dec  5 10:25 circuitpython-community-bundle-py.zip\n-rw-r--r--  1 jliu  staff   866768 Dec  5 10:25 circuitpython-community-bundle-6mpy.zip\n-rw-r--r--  1 jliu  staff   655732 Dec  5 10:25 circuitpython-community-bundle-7mpy.zip\n-rw-r--r--  1 jliu  staff  7197908 Jan  1 19:44 adafruit-circuitpython-bundle-py.zip\n-rw-r--r--  1 jliu  staff  3607698 Jan  1 19:44 adafruit-circuitpython-bundle-7mpy.zip\ndrwxr-xr-x  8 jliu  staff  256 Jan  1 19:44 adafruit\n-rw-r--r--  1 jliu  staff  160 Jan  1 19:44 circup.json\n\n(circup) jliu@JEFFREYs-MBP ~/Library/Application Support/circup  % du -sh .\n 51M   .\n</code></pre> <pre><code>- [ ] minipip: a tool for installing distribution packages for MicroPython and CircuitPython #CircuitPython #MicroPython  https://blog.adafruit.com/2021/05/26/minipip-a-tool-for-installing-distribution-packages-for-micropython-and-circuitpython-circuitpython-amicropython-aivarannamaa/\n\n- [ ] pipkin - successor to minipip, included with Thonny 4\n</code></pre> <p>https://pypi.org/project/pipkin/ https://forums.adafruit.com/viewtopic.php?f=60&amp;t=189621 https://blog.adafruit.com/2022/03/25/thonny-python-editor-gets-4-0-0-beta-release-python-micropython/</p> <ul> <li>Servo Animation List  (9/24/2021)</li> <li>Servo Easing   (10/1/2021) Use this simple technique to ease the motion of your servo motors and avoid sudden, jerky halting!</li> <li>CPU Temperature  (10/8/2021) </li> <li>boot.py  (10/14/2021) Use the boot.py file to prevent the CIRCUITPY drive from showing up when you don\u2019t want it to!  https://learn.adafruit.com/customizing-usb-devices-in-circuitpython/circuitpy-midi-serial</li> <li>Random Delay (10/25/2021)</li> <li>Dual NeoPixel Rings  (10/29/2021)</li> <li>Sine Wave Tones   (11/8/2021)     Debouncer and PWM audio example for CircuitPython Bluefruit</li> <li>Free Memory  (11/15/2021)  Check your board\u2019s free memory with the Garbage Collector. Example from the REPL:</li> </ul> <pre><code>import gc\ndir(gc)\n['__class__', '__name__', 'collect', 'disable', 'enable', 'isenabled', 'mem_alloc', 'mem_free']\n\nprint(gc.mem_free())\n142288\n\nfrom adafruit_led_animation.color import *\nprint(gc.mem_free())\n139472\n\n## NOTE: so there is no difference if you just import individual colors\nfrom adafruit_led_animation.color import CYAN\nprint(gc.mem_free())\n139472\n</code></pre> <ul> <li>Keyword Arguments   (11/19/2021)</li> <li>Print w/o Newline  Improve your serial output by printing without newline!  (12/6/2021)  (also see 8/12/2022)</li> <li>Pixel Patterns  Create patterns of NeoPixels using for loops and the range() command.  (12/13/2021)  </li> <li>Fake Ground Pin    (12/17/2021)</li> <li>Linear Interpolation  (1/7/2022) lerp() is a simple function to do linear interpolation between two values, for example RGB color mixing.</li> <li>Capacitive Touch Sensing (1/14/2022) Learn to use capacitive touch pins in CircuitPython for simple touch sensing!</li> <li>User Input  (1/22/2022) You can employ typed user input from the USB serial REPL in your CircuitPython code.</li> <li>WiFi Sniffing    (1/31/2022) You can sniff for WiFi networks in CircuitPython on ESP-32 S2 with just a tiny bit of code!</li> <li>Dictionaries    (2/7/2022) Use dictionaries in CircuitPython to organize and access your data!</li> <li>Wav Audio Crossfader  (2/14/2022) Crossfade looping audio files with the audio mixer in CircuitPython.</li> <li>DisplayIO Fill  (2/18/2022) Use this simple trick to display shapes on TFT and OLED displays using displayio and fill.</li> <li>DisplayIO Movement (2/25/2022) How to move screen shapes with DisplayIO.</li> <li>DisplayIO Text  (3/7/2022) How to use Text Labels with DisplayIO</li> <li>DisplayIO Rotation (3/12/2022) Use display.rotation() to re-orient your screen.</li> <li>DisplayIO Palette Swap (3/20/2022) Swap out each color in an bitmap palette for a cool image effect.</li> <li>VectorIO Circle and Rectangle  (3/28/2022) VectorIO is a lightweight 2D shapes library for DisplayIO </li> <li>VectorIO polygonal shapes (4/1/2022) Introducing vectorIO polygonal shapes \u2014 VectorIO is a lightweight, 2D shape drawing library for displayio in CircuitPython.</li> <li>Touchscreen (4/8/2022) How to use a touchscreen in CircuitPython.</li> <li>Transparent Sprites  (4/15/2022)</li> <li>Mouse Cursor (5/6/2022)     https://learn.adafruit.com/cursor-for-circuitpython      https://learn.adafruit.com/creating-your-first-tilemap-game-with-circuitpython</li> <li>Cursor Control (5/13/2022) It\u2019s simple to made cool disco light patterns for NeoPixels using random integers for color component values.</li> <li>Bi-color LED Matrix  (5/20/2022)</li> <li>NTP time server (5/27/2022) Learn to set your board's RTC (real time clock) with the NTP time server using CircuitPython.  ESP32-S2 TFT Feather: https://www.adafruit.com/product/5300 Base template found here: https://docs.circuitpython.org/projects/ntp/en/latest/examples.html</li> <li>Random Range Tones (6/2/2022) https://blog.adafruit.com/2022/06/02/john-parks-circuitpython-parsec-random-range-tones-adafruit-johnedgarpark-adafruit-circuitpython/ You can play back \u201ccomputery/roboty\u201d bleeps with random.randomrange() and random.uniform() to define pitch and duration in CircuitPython.</li> <li>Pixelmap (6/17/2022) Use the PixelMap feature of the led_animation library to create multiple logical strips from a single physical NeoPixel strip, grid, or ring!</li> <li>TileGrid Sprite Sheet (6/24/2022) Create dynamic user interface elements using TileGrid Sprite Sheets.</li> <li>SVG to VectorIO (7/1/2022) Convert SVG graphics to VectorIO shapes for use with CircuitPython. Thanks to Todbot for this cool method!  Use PathToPoints to format the SVG into CircuitPython code.</li> <li>Pixel Framebuf  (7/8/2022) Easily display shapes, pixels, and lines on a DotStar or NeoPixel grid using pixel_framebuf in CircuitPython.</li> <li>List parsing  (7/17/2022) Learn how to use the 'sort()' command to sort lists into alphabetical-, reverse-, size- and other useful orders.</li> <li>tio - a simple serial device I/O tool (7/22/2022) Check out \u2018tio\u2019 the Serial IO tool for any operating system that makes it painless to debug your microcontroller, even when resetting or power cycling your board. https://github.com/tio/tio To make a simpler serial device tool for talking with serial TTY devices with less focus on classic terminal/modem features and more focus on the needs of embedded developers and hackers. tio was originally created to replace screen for connecting to serial devices when used in combination with tmux.</li> <li>discotool  (8/1/2022) Use discotool to make your CircuitPython REPL adventures much friendlier! https://github.com/Neradoc/discotool     If you have multiple devices connected, it will display friendly names and allows you to connect via them.     Seems to be based off tio.     Can also call subcommands for circup update etc. </li> <li>Carriage Return (8/12/2022) Use 'end='\\r'' carriage return to prevent newlines in your print statements. (also see 12/6/2021)</li> <li>Mode Select (8/22/2022) Create a mode select in your CircuitPython code that runs at the start of the program, allowing users to choose settings.</li> <li>Range (9/2/2022) Adjust the step size of loop iteration with range(start, stop, step)</li> <li>Progress Bars  (9/9/2022) Create horizontal progress bars in CircuitPython. It's easy, fun, and low calorie.</li> <li>Bitmap Snow (9/16/2022) Draw randomized pixels in a bitmap object to create multicolored \"snow\" using CircuitPython.</li> <li>Bitmap Line Drawing (9/26/2022) Make a DIY line drawing function for bitmap pixels in CircuitPython.</li> <li>USB Brightness Control (9/30/2022) Build a custom brightness controller for your computer or mobile device using CircuitPython.</li> <li>Boot_Out.txt (10/10/2022) That mysterious 'boot_out.txt' file on your CircuitPython board isn't so mysterious after all!</li> <li>Deep Sleep  (10/16/2022) Use the alarm library to send your microcontroller into deep sleep and then wake up later.</li> <li>Bluetooth Naming (10/22/2022) Give your Bluetooth Low Energy object descriptive advertised name in CircuitPython.</li> </ul> <pre><code>ble.name = \"BLE Midid Fader\"\n</code></pre> <ul> <li>numpy LED Fades (10/28/2022) Speed up LED fades with numpy!</li> <li>File Glider iOS App (11/18/2022) Code your BLE CircuitPython device right from your mobile device with the Adafruit File Glider app for iOS and Android! https://learn.adafruit.com/how-to-transfer-files-to-a-circuit-playground-bluefruit-using-the-fileglider-app</li> <li>Incremental Iteration (11/28/2022) How iterate incrementally with a loop within a loop.</li> <li>Blink Without Delay  (12/5/2022) How to use timing intervals in CircuitPython without blocking your code.</li> <li>Timing with Ticks (12/8/2022)</li> <li>I2C Scanning (12/26/2022) Scan the I2C bus for device addresses in CircuitPython.</li> </ul> <pre><code>import board\n\ni2c = board.I2C() # or busio.I2C(pin_scl,pin_sda)\n\nwhile not i2c.try_lock():\n    pass\n\nprint(\"I2C addresses found: \", [hex(device_address) for device_address in i2c.scan()])\n\ni2c.unlock()\n</code></pre> <ul> <li> <p>Using SNES Controllers  (1/2/2023) How to use Super Nintendo controllers in CircuitPython with the keypad library.</p> </li> <li> <p>Long vs Short Press  (1/6/2023) You can use a single button to mean two different things depending on how long you press it! Learn how to use a short duration vs. a long duration button press in CircuitPython (adafruit_debouncer library).</p> </li> <li> <p>Multi Clicks  (1/13/2023) Enable single-click/double-click button functions in CircuitPython!</p> </li> <li> <p>I2S Audio Pins (1/20/2023) Use CircuitPython to determine valid sets of pins on your microcontroller to use with I2S audio. Code is here: https://learn.adafruit.com/mp3-playback-rp2040#circuitpython-mp3-capable-pins-3101440</p> </li> <li> <p>List Filtering (1/27/2023) Get more (less?) out of lists with List Filtering!</p> </li> <li> <p>Iterate Up and Down (2/3/2023) Iterate up and down in your for loops to count up &amp; down and cycle behaviors.</p> </li> </ul> <p>-Noise (2/10/2023) Use the Noise library's noise function to smoothly flow through values. This simplex noise (based on Ken Perlin's 2D noise function) is great for creating undulating LED values and more. Implemented by Tod @todbot Kurt, noise is available in the CircuitPython Community Bundle, and can be installed with 'circup install noise'</p> <p>-Supervisor Reload (2/19/2023) Use the Supervisor to change CircuitPython\u2019s autoreload behavior.</p> <p>-Unpacking Tuples (2/24/2023) Learn how to unpack the multiple values in a tuple and use the ones you want.</p> <ul> <li> <p>Rainbowio Colorwheel (3/4/2023) Easily change hue values on NeoPixels with Rainbowio Colorwheel!</p> </li> <li> <p>ANSI Escape Codes (3/13/1023) Use ANSI escape codes in CircuitPython color text in your REPL terminal and help with debugging.</p> </li> <li> <p>One Liners (3/20/2023) Use multiple command copy/paste one-liners for quick debugging and testing. Sample one liners here: https://github.com/todbot/circuitpython-tricks#use-repl-fast-with-copy-paste-multi-one-liners</p> </li> <li> <p>DotStar LEDs  (3/27/2023) How to use DotStar RGB LEDs in CircuitPython</p> </li> <li> <p>Integer Divide (4/7/2023) How to use use integer divide // to get whole numbers in CircuitPython</p> </li> <li> <p>Wiichuck uDraw Tablet  (4/15/2023) Use a Nintendo uDraw tablet in CircuitPython to control NeoPixels, MIDI, motors, and anything else! The wiichuck library from the Community Bundle makes it simple.</p> </li> <li> <p>Touchscreen Calibration  (4/28/2023) How to calibrate a touchscreen in CircuitPython using adafruit_touchscreen library and Cedar Grove Maker\u2019s calibration program.</p> </li> <li> <p>LCD Character Displays (5/12/2023) How to use an LCD character display in CircuitPython</p> </li> <li> <p>Enumerate (5/19/2023) How to use the enumerate command in CircuitPython</p> </li> <li> <p>S3 Builds of CircuitPython  (5/29/2023) How to get the latest builds of CircuitPython from the S3 server.</p> </li> <li> <p>Color Gradients with NeoPixels (6/2/2023) Create RGB color gradients for NeoPixels in CircuitPython</p> </li> <li> <p>Absolute Wave Rectifier (6/19/2023) Rectify a sine wave with the absolute function in CircuitPython.</p> </li> <li> <p>Function Lists (6/24/2023) Make and call lists of functions in CircuitPython.</p> </li> <li> <p>Circuit Playground LED/Switch (7/7/2023) Use the Circuit Playground library on the CPX and CPB boards to light the LED and use the switch.</p> </li> <li> <p>Circuit Playground Tap Detection (7/14/2023) Use the Circuit Playground library on the CPX and CPB boards to detect single and double taps with the on-board accelerometer.</p> </li> <li> <p>Circuit Playground NeoPixels (7/28/2023) Use the Circuit Playground library on the CPX and CPB boards to easily control on-board NeoPixels.</p> </li> <li> <p>Circuit Playground Light Detection (8/4/2023) Use the on-board light detector on Circuit Playground boards!</p> </li> <li> <p>Circuit Playground Buttons (8/11/2023) Use the built-in buttons on Circuit Playground boards!</p> </li> <li> <p>Circuit Playground Temperature (8/21/2023) Use the built-in temperature sensor on Circuit Playground boards!</p> </li> <li> <p>Circuit Playground Touch Sensing (9/8/2023) How to use the capacitive touch pads on the Circuit Playground Express/Bluefruit boards with Circuit Playground in CircuitPython.</p> </li> <li> <p>Circuit Playground Tones (9/15/2023) Play simple music with the Tones command on Circuit Playground Express/Bluefruit boards with Circuit Playground in CircuitPython.</p> </li> <li> <p>Circuit Playground Play Files (9/22/2023) Play audio .wav files with the cp.play_file() command on Circuit Playground Express/Bluefruit boards with Circuit Playground in CircuitPython.</p> </li> <li> <p>Circuit Playground Sound Detection (9/29/2023) Use the built-in mic on Circuit Playground Bluefruit to sense sound levels and detect loud sounds to trigger events.</p> </li> <li> <p>Bitmap Label Highlighting  (10/6/2023) Highlight display text with bitmap label colors.</p> </li> <li> <p>Debouncer Timer (10/13/2023) Use the Debouncer library to create a simple event timer in CircuitPython</p> </li> <li> <p>Print Debugger (10/27/2023) Use a special print function to simplify debugging.</p> </li> <li> <p>WiFi Web Workflow (11/3/2023) Code your ESP32 boards in CircuitPython over WiFi! Right in the browser!! https://learn.adafruit.com/getting-started-with-web-workflow-using-the-code-editor</p> </li> <li> <p>Set Next Code File (11/10/2023) Create a code file that allows you to launch other code files in CircuitPython! code example here: https://github.com/jedgarpark/parsec/blob/main/2023-11-09/code.py</p> </li> <li> <p>Non-Volatile Memory (11/17/2023) You can save data between power cycles in non-volatile memory with this one simple trick in CircuitPython! code example here: https://github.com/jedgarpark/parsec/blob/main/2023-11-16/code.py</p> </li> <li> <p>For Statements with Enumeration  (12/8/2023) Simplify and clarify your 'for' statements with enumeration. code example here: https://github.com/jedgarpark/parsec/blob/main/2023-11-29/code.py</p> </li> <li> <p>asyncio  (12/15/2023) Do multiple things at once with asyncio! code example here: https://github.com/jedgarpark/parsec/blob/main/2023-12-15/asyncio_code.py</p> </li> </ul>"},{"location":"circuitpython/parsec/#additional-references","title":"Additional References","text":"<ul> <li>Adafruit Learn Guide: Welcome to CircuitPython</li> <li>Adafruit Learn Guide: What is CircuitPython?</li> <li>CircuitPython.org</li> </ul> <p>This page was last updated on 2023-12-15 11:25:07 -0500.</p>"},{"location":"getting-started/","title":"Introduction","text":"<p>This guide is for people new to Adafruit and to electronics.  </p> <ul> <li>The focus is on the Adafruit ecosystem </li> <li>Roadmap for people new to the Adafruit ecosystem.  </li> <li>Review Adafruit lingo and branding.  </li> </ul> <p>This website does not cover electronics in general --  Along the way some electronics is discussed, but this website does not cover topics in depth.  </p> <p>As much as possible, links to additional resources or references will be provided.</p> <p>Adafruit is an open-source hardware company which designs custom hardware and components.  Located in New York City, Adafruit was founded by Limor Fried (aka \"Lady Ada\") in 2005.  All designs and guides are openly shared. </p> <p>Adafruit also provides Learn Guides which uses the hardware to do cool stuff. Adafruit has over 2,600 guides, and it can be overwhelming for those just starting out (\"newbies\"). </p> <p>Note</p> <p>While there is no \"right\" or \"wrong\" approach to learning electronics, on this website I make some opinionated recommendations geared to the absolute \"newbie\" \u2013 people who are new to both electronics and to the Adafruit ecosystem.  </p> <p>You will see these labeled as:</p> <p>A Beginner's Recommendation</p> <p>Feel free to ignore my recommendations if you are already knowledgable in electronics in general and just wish to get quickly acclimated with the Adafruit lingo.  Often \"newbies\" want a clearly defined roadmap, so my recommendations are for those who have no idea where to start and just want to get started somewhere.  I will explain why I make the recommendations.   </p>"},{"location":"getting-started/#the-adafruit-website","title":"The Adafruit website","text":"<p>Let's begin with a general overview of how the Adafruit website is organized. As of 1/2022, the adafruit.com website has a navigation bar on the top left.</p> <p></p> <ul> <li>\"Shop\" - the online store where you can peruse product pages, and place online orders.  Specific product pages will often include links to related Learn Guides. </li> <li>\"Learn\" - where documenation and Learn Guides are located.  More details below.</li> <li>\"Blog\" - Adafruit's blog which is updated daily.  </li> <li>\"Forums\" - Adafruit's support forums where you can seek help from customer support or the community.</li> <li>\"LIVE!\" - where you can find Adafruit's currently live streaming show, or if there isn't currently a live stream their main YouTube Channel.  More details below.</li> <li>\"AdaBox\" - a link to their order page for Adabox.  More on Adabox below.</li> <li>\"IO\" - a link to Adafruit's online service. </li> </ul>"},{"location":"getting-started/#learn-guides","title":"Learn Guides","text":"<p>Adafruit offers thousands of learn guides -- Most Learn Guides are walk throughs of specific projects with Adafruit hardware and software.  Some Learn Guides discuss  electronics topics. </p>"},{"location":"getting-started/#guides-for-beginners","title":"Guides for Beginners","text":"<p>https://blog.adafruit.com/2021/04/20/adafruitlearningsystem-weekly-update-beginner/</p> <p>\"If you are just getting started with electronics, it can be difficult to know where to begin. With almost 2,500 guides published on the Adafruit Learning System, it might seem hard to figure out which guides are best for a beginner like you. Thankfully, we have each guide tagged with its difficulty level making it easier for beginners to find the right guides. We even have a curated beginners page that has a breakdown of guides that might interest those who know nothing about electronics, all the way through those who are just getting their feet wet.\"</p> <ul> <li> <p>Adafruit Learn Guides tagged \"beginner\":  https://learn.adafruit.com/guides/beginner</p> </li> <li> <p>Adafruit Weekly Trending Learn Guides:  https://learn.adafruit.com/guides/trending</p> </li> <li> <p>Git repo for Adafruit Learning Guides (kinda large at 1.1GB):  https://github.com/adafruit/Adafruit_Learning_System_Guides</p> </li> </ul>"},{"location":"getting-started/#shows","title":"Shows","text":"<p>Aside from articles on the adafruit.com website, Adafruit broadcasts many shows throughout the week covering various topics.  Most of these shows are posted to YouTube if you miss the live stream.</p> <ul> <li>Webpage with a description of Adafruit shows https://www.adafruit.com/shows</li> </ul> <p>The shows are great resources and very informative.  For an absolute newbie, some shows may be hard to digest since there is often an assumption that viewers already possess some basic understanding -- although if you attend a live stream, you may ask questions during the show, and Adafruit will likely answer your questions.</p>"},{"location":"getting-started/#adabox","title":"Adabox","text":"<p>Note</p> <p>Before we dive into the Adafruit ecosystem, a Beginner's Recommendation.</p> <p>Adabox</p> <p>Adabox is a discovery subscription service with curated Adafruit products.  The target audience is geared towards beginners and hobbyists.</p> <p>I'm skeptical of many subscription services, but in the case of Adabox, I whole-heartedly recommend that beginners (and non-beginners) give it a try.</p> <p>Adabox is released on a Quarterly cadence (as much as possible). You have the option either to subscribe, or you can gift one or multiple Adabox to yourself (or others).</p> <p>Each Adabox is standalone and shipped with all the components and parts needed to construct projects.</p> <p>In my opinion, Adabox is for kids ages 12 and up.  Younger kids may need adults to help them. The construction of the hardware is usually not that difficult -- it's more on the software/programming side where younger kids may need adult assistance.</p> <p>I've been an Adabox subscriber since Adabox015, and I've back purchased Adabox007 and Adabox014, as well as bought the equivalent kits for Adabox008, Adabox010, Adabox011, Adabox012, and Adabox013.  </p> <p>PROs</p> <ul> <li>Value of all the equipment and shipping often exceeds the amount you pay for the subscription, and Adabox includes custom extras which are not available in their regular online store.  </li> <li>Cool unboxing live stream (recorded and available afterwards on YouTube) <ul> <li>Entertaining and goes through the contents of the Adabox</li> <li>Demo of one or two projects is shown.  </li> <li>If you attend the live stream, you may ask questions. </li> </ul> </li> <li>Adabox is often accompanied with a long list of Learn Guides (projects).  <ul> <li>The Learn Guides are accessible to newbies</li> </ul> </li> <li>Ask questions or request support via Adafruit's support forums.</li> </ul> <p>CONs</p> <ul> <li>Delivery of the Adabox can be delayed.  The global chip shortage and supply chain delays have made it difficult for Adafruit.  I received the most recent two adaboxes weeks after the official unboxing video (whereas in the past the unboxing videos were timed to coincide with the majority of customers to have already received their Adabox.)</li> <li>Occassionally there may be some things mentioned which could be hard for newbies to follow.    (Hence, why I wrote this guide.)</li> </ul>"},{"location":"getting-started/#list-of-adaboxes","title":"List of Adaboxes","text":"Adabox Release Date Description Adabox001 11/2016 Welcome to feather - Feather 32u4 Adalogger, Neopixel feather wing, LCD 16x2, Piezo buzzer, TMP36 sensor, etc Adabox002 12/2016 Making Things Move - Feather Bluetooth LE Mini Robot - Feather 32u4 Bluefruit LE, DC Motor and Stepper FeatherWing, Piezo buzzer, etc Adabox003 5/2017 The World of IoT - Feather Huzzah with ESP8266 WiFi, Featherwing OLED 128x32, DHT22 sensor, Micro servo, PIR sensor, etc Adabox004 8/2017 Making Things Dance - Feather Huzzah with ESP8266 WiFi, MusicMaker Featherwing, 3W 4ohm speaker, etc Adabox005 9/2017 Break for Pi - Raspberry Pi Zero, Adafruit Joy Bonnet, Hammer Headers, etc Adabox006 1/2018 CircuitPython - Circuit Playground Express, Alligator clips, etc Adabox007 6/2018 Spy - Gemma M0, lock picks, practice lock, Piezo buzzer, etc  https://www.adafruit.com/adabox007 Adabox008 10/2018 Octo Crickit MakeRobotFriend - Circuit Playground Express, Adafruit CRICKIT for Circuit Playground Express, etc  https://www.adafruit.com/adabox008 Adabox009 10/2018 Hallowing - Adafruit Hallowing M0 Express, Micro Servo, PIR sensor, Neopixel LED strip, etc Adabox010 1/2019 Rainbow Trellis - Adafruit NeoTrellis M4, etc https://www.adafruit.com/adabox010 Adabox011 4/2019 PyPortal - PyPortal, PyPortal Desktop Enclosure kit  https://www.adafruit.com/adabox011 Adabox012 7/2019 PyGamer - PyGamer, PyGamer acrylic enclosure kit, etc  https://www.adafruit.com/adabox012 Adabox013 9/2019 Monster M4sk - The Monster M4sk, etc  https://www.adafruit.com/adabox013 Adabox014 12/2019 Merry Adaboxmas - Circuit Playground Bluefruit, TFT Gizmo, snow globe, etc  https://www.adafruit.com/adabox014 Adabox015 7/2020 Come to your Sensors - Adafruit CLUE, Adafruit Bonsai Buckaroo, two Alligator clips, water pump, etc  https://www.adafruit.com/adabox015 Adabox016 10/2020 MatrixPortal - MatrixPortal M4, 64x32 RGB Matrix, LED Diffusion Acrylic, etc  https://www.adafruit.com/adabox016 Adabox017 12/2020 Good Fortune Ahead - MagTag, Neopixel strip, Magnetic whiteboard, etc  https://www.adafruit.com/adabox017 Adabox018 5/17/2021 No place like home - FunHouse, mini PIR sensor, ultrasonic distance sensor, etc  https://www.adafruit.com/adabox018 Adabox019 7/31/2021 Macropad   https://www.adafruit.com/adabox019 Adabox020 10/27/2021 LED Glasses  https://www.adafruit.com/adabox020/"},{"location":"getting-started/#other-media","title":"Other Media","text":"<p>Aside from Video https://www.adafruit.com/shows</p> <p>Adafruit is dedicated to providing you information in your chosen way.</p> <ul> <li>Newsletters</li> <li>Blog</li> <li>Instagram</li> <li>Reddit</li> <li> <p>Discord</p> </li> <li> <p>Adafruit music library on SoundCloud</p> </li> <li> <p>Adafruit Blog: 3 million orders reached on 1/23/2023 - Congrats Adafruit!</p> </li> </ul>"},{"location":"getting-started/#next-steps","title":"Next Steps","text":"<p>Next Steps</p> <p>This page was last updated on 2023-01-20 11:05:07 -0500.</p>"},{"location":"getting-started/website-structure/","title":"How this website is organized","text":"<p>This website has three main sections, Hardware, CircuitPython, and Glossary</p> <p>For beginners, the Hardware and CircuitPython sections offer an opinionated roadmap/walkthrough of the Adafruit ecosystem.</p> <p>For more experienced people or to quickly look up the definition of a specific term, feel free to jump to the Glossary.</p>"},{"location":"getting-started/website-structure/#hardware","title":"Hardware","text":"<p>Adafruit is an open-source hardware company which designs custom hardware and components.  </p> <p>The Hardware section will explore Adafruit lingo and branding.</p> <p>Hardware - Overview</p>"},{"location":"getting-started/website-structure/#circuitpython","title":"CircuitPython","text":"<p>This website will focus on CircuitPython which is a version of python for microcontrollers recommended for beginners who are just getting started.  </p> <p>CircuitPython - Overview</p>"},{"location":"getting-started/website-structure/#glossary","title":"Glossary","text":"<p>Definitions for various terms, listed in alphabetical order.</p> <p>Glossary - Index</p> <p>This page was last updated on 2022-02-23 11:15:07 -0500.</p>"},{"location":"glossary/","title":"Index","text":"<ul> <li>Adafruit Feather aka Feather</li> <li>Adafruit Featherwing aka Featherwing</li> <li>Adafruit IO</li> <li>AirLift</li> <li>Arduino</li> <li>Backpack</li> <li>Bell</li> <li>BFF</li> <li>Blinka</li> <li>Bundlefly</li> <li>Cape</li> <li>CircuitPython</li> <li>Circuit Playground</li> <li>Clue</li> <li>Connectors</li> <li>Crickit</li> <li>ESP32</li> <li>Feather</li> <li>FeatherWing</li> <li>Gemma</li> <li>Glider</li> <li>GPIO</li> <li>Grove</li> <li>HAT</li> <li>I2C</li> <li>IOT</li> <li>Itsy Bitsy ItsyBitsy (Small)</li> <li>JST </li> <li>JST PH - see JST</li> <li>JST SH - see JST</li> <li>Metro</li> <li>Microcontroller</li> <li>NeoPixel</li> <li>PWM</li> <li>PyLeap</li> <li>QT Py QT Py (Tiny)</li> <li>QWIIC</li> <li>Rasbperry Pi</li> <li>RP2040</li> <li>SBC</li> <li>Shield</li> <li>SPI</li> <li>STEMMA</li> <li>STEMMA QT </li> <li>Teensy</li> <li>WipperSnapper</li> </ul>"},{"location":"glossary/adafruit_io/","title":"Adafruit IO","text":""},{"location":"glossary/adafruit_io/#back-to-index","title":"Back to Index","text":"<p>Related IOT, WipperSnapper</p> <p>Adafruit IO </p> <p>Quote</p> <p>The internet of things for everyone</p> <p>The easiest way to stream,log, and interact with your data</p> <p>WIP</p> <p>Adafruit IO Basics: Feeds</p> <p>Adafruit IO Basics: Dashboards</p> <p>Adafruit IO Basics: Digital Input</p> <p>https://blog.adafruit.com/2022/02/08/adafruit-io-new-dashboard-blocks-and-block-changes/ We have two new block additions ready for you to use in your IO dashboards.</p> <p>The first is the Divider Block. This block is a simple way to help you organize your dashboard and break it up a bit. You can stretch the block horizontally or vertically. Basically, just edit the block layout and drag and drop to where you would like the line divided. It allows for a couple of line widths as well.</p> <p>The second new block is the Battery Block. This block takes a value from 0-100.0 and displays the percentage left in a battery icon. It also allows for the text of the value to be displayed, similar to the options on a phone. This block works particularly well paired with the Adafruit LC709203F Fuel Gauge and Battery Monitor.</p> <p>Adafruit Blog: 3/31/2022 Adafruit IO New Actions Features</p> <p>Adafruit Blog: 4/1/2022 Adafruit IO is now storing over 1 billion data records</p> <p>Adafruit Blog 10/18/2022: Over 1000 IoT devices have connected to Adafruit.io</p>"},{"location":"glossary/adafruit_io/#alternative","title":"Alternative","text":"<p>https://blog.adafruit.com/2022/01/26/golioth-simplifies-sending-internet-of-things-data-from-circuitpython-devices-circuitpython-iot-internetofthings-golioth_iot/ https://blog.golioth.io/click-save-to-stream-iot-device-data-to-the-cloud/</p> <p>This page was last updated on 2023-11-06 12:45:07 -0500.</p>"},{"location":"glossary/airlift/","title":"AirLift","text":""},{"location":"glossary/airlift/#back-to-index","title":"Back to Index","text":"<p>Related Adafruit IO</p> <p>WIP</p> <p>AirLift</p> <p>Learn Guide: Adafruit AirLift ESP32 WiFi Co-Processor Breakout</p> <p>Learn Guide: Adafruit IO Basics: AirLift</p> <p>Learn Guide: Adafruit AirLift FeatherWing - ESP32 WiFi Co-Processor</p> <p>This page was last updated on 2022-03-03 15:45:07 -0500.</p>"},{"location":"glossary/arduino/","title":"AirLift","text":""},{"location":"glossary/arduino/#back-to-index","title":"Back to Index","text":"<p>Related Shield</p> <p>WIP</p> <p>Arduino is a programmable circuit board with microntroller which can be used to control motors, lights, and sensors.</p> <p>Tutorials on Youtube to get you started: </p> <ul> <li>Learn Arduino in 15 Minutes</li> <li>Introduction to Arduino: Arduino For Kids &amp; Beginners</li> <li>Freecodecamp.org Arduino Course for Beginners - Open-Source Electronics Platform (4 hours 6/8/2021)</li> </ul> <p>Adafruit Blog: Maker Becky Stern does new electronic video series for Digi-Key</p> <p>Arduino Basics</p> <p>Adafruit Blog: A Beginner\u2019s Guide to Arduino Inputs/Outputs</p> <p>This page was last updated on 2023-01-22 18:45:07 -0500.</p>"},{"location":"glossary/backpack/","title":"Backpack","text":""},{"location":"glossary/backpack/#back-to-index","title":"Back to Index","text":"<p>Related expansion boards</p> <p>WIP </p> <p>Backpack LED backpacks for 7 Segment or alphanumeric displays</p> <p>As of 1/19/2022 a few of these have been updated with Stemma QT to have easy setup without the need for soldering.</p> <p>Example products Adafruit 7-Segment LED Matrix Backpack - STEMMA QT / qwiic   $5.95 https://www.adafruit.com/product/877  Adafruit 0.56\" 4-Digit 7-Segment Display w/I2C Backpack - White - STEMMA QT / qwiic  $10.95 https://www.adafruit.com/product/1002 Adafruit 0.56\" 4-Digit 7-Segment Display w/ I2C Backpack - Blue - STEMMA QT / qwiic $11.95 https://www.adafruit.com/product/881 dafruit 0.56\" 4-Digit 7-Segment Display with I2C Backpack - Red - STEMMA QT / qwiic  $9.95 https://www.adafruit.com/product/878</p> <p>CircuitPython Library https://github.com/adafruit/Adafruit_CircuitPython_HT16K33</p> <p>Additional Reference https://learn.adafruit.com/led-backpack-displays-on-raspberry-pi-and-beaglebone-black</p> <p>This page was last updated on 2022-07-19 15:45:07 -0500.</p>"},{"location":"glossary/bell/","title":"Bell","text":""},{"location":"glossary/bell/#back-to-index","title":"Back to Index","text":"<p>Related expansion boards</p> <p>Bell</p> <p>WIP</p> <p>Adafruit is working on new add-on boards for the Raspberry Pi Pico form factor.</p> <p>With a wide variety of names for add-on boards: shields, capes, FeatherWings, HATs, gizmos, etc., Adafruit wanted a name for their line of boards.</p> <p>As the new Pico W is being dubbed the \u201cPicow\u201d by the community, cow-themed ideas are being used. Adafruit, after consideration, announced on their Ask an Engineer show, Top Secret segment, their add-on boards will be called \u201cbells\u201d (like cowbell) \u2013 Adafruit Top Secret. (7/14/2022)</p> <p>This page was last updated on 2022-07-19 13:45:07 -0500.</p>"},{"location":"glossary/blinka/","title":"Blinka","text":""},{"location":"glossary/blinka/#back-to-index","title":"Back to Index","text":"<p>Related microcontroller, CircuitPython</p> <p>WIP </p> <p>Blinka, our CircuitPython library compatibility layer for Single Board Computers, or SBCs. </p> <p>More techincal guides on how to add SBC to Blinka:</p> <p>First step https://learn.adafruit.com/adding-a-single-board-computer-to-platformdetect-for-blinka</p> <p>Second step https://learn.adafruit.com/adding-a-single-board-computer-to-blinka</p> <p>Ordered 1/20/2021 - Delivered 1/23/2021 NOTE: there's a related article https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-raspberry-pi-pico - [ ] MCP2221A USB I2C/GPIO Breakout Breakout board to use Stemma  QT or Grove Sensors on your computer directly via usb Delivered 1/23/2021 Adafruit MCP2221A breakout\u00a0board  https://www.adafruit.com/product/4471  $6.50      - [ ] NOTE: before you install Blinka libraries - use venv  Mac: <code>python3 -m venv .virtualenvs/mcp2221</code> or on Windows: <code>python -m venv .virtualenvs/mcp2221</code>         Blinka brings CircuitPython APIs and CircuitPython libraries to single board computers (SBCs). It is a pip installable Python library that runs in normal \u201cdesktop\u201d Python. One can port their microcontroller code to an SBC or visa versa!     CircuitPython Libraries on any Computer with MCP2221  https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-mcp2221     Update Blinka/Platform Libraries  -  Most issues can be solved by forcing Python to upgrade to the latest<code>blinka</code>/<code>platform-detect</code>libraries.   On Raspberry Pi, try running: <code>sudo python3 -m pip install --upgrade --force-reinstall adafruit-blinka</code>.   On my Mac just run <code>pip install --upgrade --force-reinstall adafruit-blinka</code>     CircuitPython Libraries and Jupyter Notebook on any Computer with MCP2221  https://learn.adafruit.com/jupyter-on-any-computer-with-circuitpython-libraries-and-mcp2221     Learn: Google Docs Sensor Logging From Your PC  https://learn.adafruit.com/gdocs-sensor-logging-from-your-pc     JPs Product Pick of the Week 1/12/21 MCP2221A USB I2C/GPIO Breakout https://youtu.be/_nNe-YM7MCU?t=261 - [ ] Monochrome 1.3\" 128x64 OLED graphic display - STEMMA QT / Qwiic  https://www.adafruit.com/product/938  $19.95  (two) https://learn.adafruit.com/monochrome-oled-breakouts</p> <p>Learn: CircuitPython BLE Libraries on Any Computer  https://learn.adafruit.com/circuitpython-ble-libraries-on-any-computer The AdafruitBlinka bleio librarymakes this possible. It is a regular Python library that runs on desktop Python, not on CircuitPython boards. It re-implements the<code>_bleio</code>module that is part of CircuitPython: all our BLE libraries are ultimately based on<code>_bleio</code>. The Blinka bleio library only supports acting in a BLE central role.You can connect to peripheral devices, such as heart rate monitors, pulse oximeters, bicycle sensors, etc., but you cannot act as a peripheral yourself with this code.</p> <p>For Mac NOTE: pre-requisite is command line tools for python3 </p> <pre><code>python3 -m venv .virtualenvs/mcp2221\n. .virtualenvs/mcp2221/bin/activate\npip install hidapi\npip install --upgrade --force-reinstall adafruit-blinka\n(mcp2221) jliu@JEFFREYs-MBP ~ % pip install adafruit-circuitpython-ahtx0\nexport BLINKA_MCP2221=\"1\"\n\n(mcp2221) jliu@JEFFREYs-MBP ~  % python\nPython 3.7.3 (default, Apr 24 2020, 18:51:23) \n[Clang 11.0.3 (clang-1103.0.32.62)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import board\n&gt;&gt;&gt; dir(board)\n['G0', 'G1', 'G2', 'G3', 'I2C', 'SCL', 'SDA', 'SPI', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'ap_board', 'board_id', 'detector', 'pin', 'sys']\n&gt;&gt;&gt; exit()\n</code></pre> <p>For Windows</p> <pre><code>PS C:\\Users\\jeffrey.liu&gt; python --verison\nPython 3.9.2\n\npython -m venv .virtualenvs/mcp2221\n\n# NOTE: recall that git bash python cli repl just hangs and does not load - so open Powershell window instead\nPS C:\\Users\\jeffrey.liu&gt; .virtualenvs\\mcp2221\\Scripts\\activate.ps1\npip install hidapi\npip install --upgrade --force-reinstall adafruit-blinka\npip install adafruit-circuitpython-ahtx0\n$env:BLINKA_MCP2221=\"1\"\n\npython\nPython 3.9.2 (tags/v3.9.2:1a79785, Feb 19 2021, 13:44:55) [MSC v.1928 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n&gt;&gt;&gt; import board\n&gt;&gt;&gt; dir(board)\n['G0', 'G1', 'G2', 'G3', 'I2C', 'SCL', 'SDA', 'SPI', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__spec__', 'ap_board', 'board_id', 'detector', 'pin', 'sys']\n&gt;&gt;&gt; exit()\n</code></pre> <p>For Windows upgrade adafruit-blinka output:</p> <pre><code>PS C:\\Users\\jeffrey.liu&gt; .virtualenvs\\mcp2221\\Scripts\\activate.ps1\n\n(mcp2221) PS C:\\Users\\jeffrey.liu&gt; pip list\n\nPackage\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Version\n----------------------- -------\nAdafruit-Blinka\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6.2.2\nAdafruit-PlatformDetect 3.1.1\nAdafruit-PureIO\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1.1.8\nhidapi\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0.10.1\npip\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 20.2.3\npyftdi\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0.52.9\npyserial\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3.5\npyusb\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1.1.1\nsetuptools\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 49.2.1\n\nWARNING: You are using pip version 20.2.3; however, version 21.0.1 is available.\nYou should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command.\n\n\n(mcp2221) PS C:\\Users\\jeffrey.liu&gt; pip install --upgrade --force-reinstall adafruit-blinka\n\nCollecting adafruit-blinka\n\u00a0 Downloading Adafruit-Blinka-6.3.0.tar.gz (118 kB)\nCollecting Adafruit-PlatformDetect&gt;=3.1.0\n\u00a0 Downloading Adafruit-PlatformDetect-3.2.0.tar.gz (29 kB)\nCollecting Adafruit-PureIO&gt;=1.1.7\n\u00a0 Using cached Adafruit_PureIO-1.1.8.tar.gz (26 kB)\nCollecting pyftdi&gt;=0.40.0\n\u00a0 Using cached pyftdi-0.52.9-py3-none-any.whl (139 kB)\nCollecting pyserial&gt;=3.0\n\u00a0 Using cached pyserial-3.5-py2.py3-none-any.whl (90 kB)\nCollecting pyusb&gt;=1.0.0\n\u00a0 Using cached pyusb-1.1.1-py3-none-any.whl (58 kB)\n...\n...\n...\n\u00a0 Attempting uninstall: adafruit-blinka\n\u00a0\u00a0\u00a0 Found existing installation: Adafruit-Blinka 6.2.2\n\u00a0\u00a0\u00a0 Uninstalling Adafruit-Blinka-6.2.2:\n\u00a0\u00a0\u00a0\u00a0\u00a0 Successfully uninstalled Adafruit-Blinka-6.2.2\n\u00a0\u00a0\u00a0 Running setup.py install for adafruit-blinka ... done\nSuccessfully installed Adafruit-PlatformDetect-3.2.0 Adafruit-PureIO-1.1.8 adafruit-blinka-6.3.0 pyftdi-0.52.9 pyserial-3.5 pyusb-1.1.1\n\nWARNING: You are using pip version 20.2.3; however, version 21.0.1 is available.\nYou should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command.\n\n(mcp2221) PS C:\\Users\\jeffrey.liu&gt; pip list\n\nPackage\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Version\n----------------------- -------\nAdafruit-Blinka\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 6.3.0\nAdafruit-PlatformDetect 3.2.0\nAdafruit-PureIO\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1.1.8\nhidapi\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0.10.1\npip\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 20.2.3\npyftdi\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 0.52.9\npyserial\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 3.5\npyusb\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1.1.1\nsetuptools\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 49.2.1\n\nWARNING: You are using pip version 20.2.3; however, version 21.0.1 is available.\n\nYou should consider upgrading via the 'c:\\users\\jeffrey.liu\\.virtualenvs\\mcp2221\\scripts\\python.exe -m pip install --upgrade pip' command.\n</code></pre> <ul> <li>[ ] A brief history of microcontrollers and a Great demo by Ladyada for using CircuitPython and Blinka to connect to a temperature sensor three ways (Raspberry Pi Pico, Raspberry Pi 4, and MCP2221A) https://www.youtube.com/watch?v=jZnDCs80b_A&amp;t=3405s  1/31/2021 Reference:  Page 48 of  RPi_Pi Pico_Digital Edition.pdf NOTE: UTIME VS TIME If you\u2019ve programmed in Python before, you\u2019ll be used to using the \u2018time\u2019 library.  The utime library is a version designed for microcontrollers like the Pico \u2013 the \u2018u\u2019 standing for \u2018\u03bc\u2019, the Greek letter \u2018mu\u2019, which is used as a shorthand for \u2018micro\u2019.  If you forget and use import time, don\u2019t worry: MicroPython will automatically use the utime library instead.</li> </ul> <p>Raspberry Pi Pico code</p> <pre><code>import time\nimport board\nimport busio\nimport adafruit_ahtx0\n\ni2c_bus = busio.I2C(board.GP1, board.GP0)\n\nsensor = adafruit_ahtx0.AHTx0(i2c_bus)\n\nwhile True:\n    print(\"\\nTemperature: %0.1f C\" % sensor.temperature)\n    print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32))\n    print(\"Humidity: %0.1f %%\" % sensor.relative_humidity)\n    time.sleep(2)\n</code></pre> <p>Raspberry Pi 4 code</p> <pre><code>import time\nimport board\n# note import busio not needed for Raspberry Pi\nimport adafruit_ahtx0\n\n# create the sensor object using I2C\nsensor = adafruit_ahtx0.AHTx0(board.I2C())\n\nwhile True:\n    print(\"\\nTemperature: %0.1f C\" % sensor.temperature)\n    print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32))\n    print(\"Humidity: %0.1f %%\" % sensor.relative_humidity)\n    time.sleep(2)\n</code></pre> <p>MCP2221 code</p> <pre><code>import time\nimport board\nimport busio\nimport adafruit_ahtx0\n\n# Create library object using our Bus I2C port\ni2c = busio.I2C(board.SCL, board.SDA)\nsensor = adafruit_ahtx0.AHTx0(i2c)\n\nwhile True:\n    print(\"\\nTemperature: %0.1f C\" % sensor.temperature)\n    print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32))\n    print(\"Humidity: %0.1f %%\" % sensor.relative_humidity)\n    time.sleep(2)\n</code></pre> <p>MCP2221 code without busio</p> <pre><code>import time\nimport board\nimport adafruit_ahtx0\n\n# Create library object using our Bus I2C port\ni2c = board.I2C()\nsensor = adafruit_ahtx0.AHTx0(i2c)\n\nwhile True:\n    print(\"\\nTemperature: %0.1f C\" % sensor.temperature)\n    print(\"Temperature: %0.1f F\" % ((sensor.temperature * 1.8)+32))\n    print(\"\\nHumidity: %0.1f %%\" % sensor.relative_humidity)\n    time.sleep(2)\n</code></pre> <p>Ordered 2/6/2021 - Delivered 2/17/2021 - [ ] AHT20 Temperature &amp; Humidity Sensor breakout https://www.adafruit.com/product/4566  $4.50 Learn:  Adafruit AHT20 Temperature &amp; Humidity Sensor   https://learn.adafruit.com/adafruit-aht20</p> <p>Sample output:</p> <pre><code>(mcp2221) jliu@JEFFREYs-MBP ~ % python test.py\n\nTemperature: 24.2 C\nHumidity: 29.6 %\n\n\nTemperature: 24.1 C\nHumidity: 29.7 %\n\n\nTemperature: 24.1 C\nHumidity: 29.8 %\n\n\nTemperature: 24.0 C\nHumidity: 29.9 %\n\n^CTraceback (most recent call last):\n File \"test.py\", line 13, in &amp;lt;module&amp;gt;\n time.sleep(2)\nKeyboardInterrupt\n</code></pre> <p>NOTE: there's a related article https://learn.adafruit.com/circuitpython-libraries-on-any-computer-with-raspberry-pi-pico - [ ] FT232H General Purpose USB to I2C,  SPI, GPIO Breakout board to use Stemma  QT or Grove Sensors on your computer directly via usb  https://www.adafruit.com/product/2264  $15 Delivered 10/27/2021     CircuitPython Libraries on any Computer with FT232H https://learn.adafruit.com/circuitpython-on-any-computer-with-ft232h     The support for the FT232H in Blinka utilizes thepyftdi librarybyeblot. This in turn relies on a few other things, like libusb. So before we can actually use the FT232H, we need to get everything setup. See the OS specific sections for what we went through to get things working for each. NOTE: 10/28/2021  useless on Mac OS unless you use homebrew python.  Bleh!</p> <p>Mac OS:</p> <pre><code>pip install --upgrade pip\n\npip install libusb pyftdi adafruit-blinka\n\npip install --upgrade --force-reinstall adafruit-blinka\n\n(ft232h) jliu@JEFFREYs-MBP ~ % pip list\nPackage  Version\nAdafruit-Blinka  6.15.0\nAdafruit-PlatformDetect 3.17.1\nAdafruit-PureIO  1.1.9\nlibusb 1.0.23b7\npip  21.3.1\npyftdi 0.53.3\npyserial 3.5\npyusb  1.2.1\nsetuptools 58.3.0\n\n\nexport BLINKA_FT232H=1\n\nimport board\n\n\n\n\n&gt;&gt;&gt; import board\n\nTraceback (most recent call last):\n\n File \"&amp;lt;stdin&amp;gt;\", line 1, in &amp;lt;module&amp;gt;\n\n File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/board.py\", line 40, in &amp;lt;module&amp;gt;\n\n from adafruit_blinka.agnostic import board_id, detector\n\n File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/adafruit_blinka/agnostic/__init__.py\", line 18, in &amp;lt;module&amp;gt;\n\n chip_id = detector.chip.id\n\n File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/adafruit_platformdetect/chip.py\", line 79, in id\n\n count = len(UsbTools.find_all([(0x0403, 0x6014)]))\n\n File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 95, in find_all\n\n devs.update(UsbTools._find_devices(vid, pid, nocache))\n\n File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 597, in _find_devices\n\n backend = cls._load_backend()\n\n File \"/Users/jliu/.virtualenvs/ft232h/lib/python3.8/site-packages/pyftdi/usbtools.py\", line 663, in _load_backend\n\n raise ValueError('No backend available')\n\nValueError: No backend available\n\n&gt;&gt;&gt; exit()\n\n</code></pre> <p>https://forums.adafruit.com/viewtopic.php?f=8&amp;t=182556&amp;p=887762&amp;hilit=ft232h+ValueError%3A+No+backend+available#p887762     https://github.com/pyusb/pyusb/issues/355 https://forums.adafruit.com/viewtopic.php?f=19&amp;t=182685</p> <pre><code>\"No backend available\" error while testing the install, be sure you have installed your version of Python3 via Homebrew, otherwise the pyftdi and adafruit-blinka libraries will not be able to find the libusb package that you installed with Homebrew.\n</code></pre> <p>So the conclusion is that the FT232H is useless on the Mac unless you use Homebrew.  Bleh!  </p> <p>4/12/2023 - Explaining Computers youtube video https://blog.adafruit.com/2023/04/12/add-gpio-to-any-pc-or-laptop-using-an-adafruit-ft232h-chrisbarnatt/ https://www.youtube.com/watch?v=Rt5xtIyxgco  3/5/2023</p> <p>Forum question I posted regarding busio:  https://forums.adafruit.com/viewtopic.php?f=60&amp;t=175971&amp;p=857191#p857191 Very thorough responses there on how \"import board\" automagically sets to the default board.SCL and board.SDA for both Blinka and for firmware. Blinka:  https://github.com/adafruit/Adafruit_Blinka/blob/813d634f2ca50a93fa6dfb53e18aa09403be2440/src/board.py#L213 C code (firmware):  https://github.com/adafruit/circuitpython/blob/b69cb0144ca0d54011be540213d1e25e673a63de/shared-module/board/init.c#L57</p> <p>In a nutshell:</p> <pre><code>i2c = board.I2C()\n</code></pre> <p>is always a shortcut for </p> <pre><code>import busio\n\ni2c = busio.I2C(board.SCL, board.SDA)\n</code></pre> <p>Verifies that if one wanted to be lazy, one could just rely on the board library to define the default SCL and SDA.  </p> <p>It seems that if you want to define different I2C buses, you would use the busio library to define that (if the hardware could support it). Hypothetical code:</p> <pre><code>import board  \nimport busio  \n\ni2c = busio.I2C(board.SCL, board.SDA)  \ni2c1 = busio.I2C(board.SCL1, board.SDA1)  \n\ni2c.try_lock()  \ni2c.scan()  \n\ni2c1.try_lock()  \ni2c1.scan()\n</code></pre> <p>References https://forums.adafruit.com/viewtopic.php?f=8&amp;t=167829&amp;start=15 https://www.raspberrypi.org/forums/viewtopic.php?t=33092 https://www.raspberrypi.org/forums/viewtopic.php?t=271200 https://randomnerdtutorials.com/esp32-i2c-communication-arduino-ide/ https://www.digikey.com/en/maker/projects/circuitpython-basics-i2c-and-spi/9799e0554de14af3850975dfb0174ae3 NOTE: As of 3/2021, confirmed <code>i2c = board.I2C()</code> works on QT Py, but it does not work on Raspberry Pi Pico. Pico generates the error:</p> <pre><code>AttributeError: 'module' object has no attribute 'I2C'\n</code></pre> <p>That's because the library doesn't define a default for the Pico:  https://github.com/adafruit/circuitpython/issues/4121 You'll need to manually define via busio.I2C the board GPIO pins you are using.  </p> <pre><code>i2c = busio.I2C(board.GP1, board.GP0)\n</code></pre> <p>NOTE: CircuitPython School also has a great blurb on busio  https://youtu.be/rSF_b8ab2gU?t=685 Creating an I2C object for use with Stemma QT devices is super easy.  Just:</p> <pre><code>i2c = board.I2C()\n</code></pre> <p>Some example code might refer to busio and pass in specific board.SDA and board.SCL objects.  You should not need that if you're using Stemma QT and use the statement above.  You can even avoid importing busio if you're not using it anyplace else in your code.</p> <p>NOTE: 10/27/2021 - CircuitPython School video \"Don't Stand So Close to Me\" has a great blurb regarding how QT Py RP2040 also needs to have the i2c object defined with busio when using the Stemma QT connector. https://youtu.be/Pn77QKCz2tM?t=918</p> <pre><code>import board\nimport busio\n\ni2c = busio.I2C(board.SCL1, board.SDA1)\n</code></pre> <p>Additional reference:  https://forums.adafruit.com/viewtopic.php?f=60&amp;t=183777&amp;p=892463&amp;hilit=qt+py+rp2040+i2c+board.I2C#p892463 The STEMMA connector on the QTPYRP2040uses a separate set of pins for I2C board.SCL1 and board.SDA1 see the guide https://learn.adafruit.com/adafruit-qt-py-2040/pinouts#stemma-qt-3091651-3</p>"},{"location":"glossary/blinka/#additional-references","title":"Additional References","text":"<ul> <li>Adafruit Blog 11/29/2022 - Celebrating 100 single board computers that support CircuitPython Blinka</li> </ul> <p>This page was last updated on 2022-12-08 21:45:07 -0500.</p>"},{"location":"glossary/bundlefly/","title":"Bundlefly","text":""},{"location":"glossary/bundlefly/#back-to-index","title":"Back to Index","text":"<p>All CircuitPython guides on the Adafruit Learning System have a feature called Bundlefly which allow users to download one zip file which includes the code, all required libraries, and if needed, asset files. </p> <p>Find the download link called <code>Download Project Bundle</code> located at the beginning of any CircuitPython code section.</p> <p>Once you have extracted all the files from the downloaded zip file, you just drag-and-drop them onto your microntroller CIRCUITPY drive.</p> <p>Adafruit Bundlefly is the easiest way to get a project working, regardless of whether you\u2019re a beginner or an expert.</p> <p>Adafruit automatically checks which libraries and assets are required for the project and bundle them up for you. </p> <ul> <li>No more digging through a huge list of libraries to find the ones you need</li> <li>No more looking for other files or dependencies. </li> <li>Simple one-click download via <code>Download Project Bundle</code> link</li> <li>Extract the files and copy to your CIRCUITPY drive</li> </ul> <p>Additional References</p> <p>https://blog.adafruit.com/2021/04/14/adafruitlearningsystem-weekly-update-project-bundle/</p> <p>This page was last updated on 2022-03-03 15:45:07 -0500.</p>"},{"location":"glossary/cape/","title":"Cape","text":""},{"location":"glossary/cape/#back-to-index","title":"Back to Index","text":"<p>Related expansion boards</p> <p>Cape</p> <p>WIP</p> <p>Capes Example: 4.3\" LCD Capacitive Touchscreen Display Cape for BeagleBone  https://www.adafruit.com/product/3396</p> <p>Most of the BeagleBone boards from BeagleBoard.org share the same form factor, have the same headers and therefore can accept the same extension boards, also known as capes in the BeagleBoard world.</p> <p>Additional References</p> <ul> <li>Adafruit Blog 4/8/2022: Beaglebone - Using Linux Device Trees on very different microcontrollers </li> </ul> <p>This page was last updated on 2022-04-08 11:45:07 -0500.</p>"},{"location":"glossary/circuit_playground/","title":"Circuit Playground","text":""},{"location":"glossary/circuit_playground/#back-to-index","title":"Back to Index","text":"<p>Related Itsy Bitsy, QT Py</p> <p>Circuit Playground is a great microcontroller for beginners.</p>"},{"location":"glossary/circuit_playground/#three-versions-of-the-circuit-playground","title":"Three versions of the Circuit Playground","text":"Device Microcontroller Code RAM / Storage Cost Circuit Playground Classic ATmega32u4 Arduino only 32KB of In-System Self-Programmable Flash $19.95 Circuit Playground Express ATSAMD21 ARM Cortex M0 Arduino, CircuitPython, or MakeCode 2 MB of SPI Flash storage $24.95 Circuit Playground Bluefruit nRF52840 Cortex M4 Arduino, CircuitPython, or MakeCode 256KB RAM, 2 MB of SPI Flash storage $24.95 <p>NOTE: because the Circuit Playground Classic only has 32KB of storage, it is unable to run CircuitPython.</p>"},{"location":"glossary/circuit_playground/#circuit-playground-bluefruit","title":"Circuit Playground Bluefruit","text":""},{"location":"glossary/circuit_playground/#recommended-first-adafruit-hardware-for-beginners","title":"Recommended: First Adafruit Hardware for Beginners","text":"<p>Note</p> <p>A Beginner's Recommendation.</p> <p>CircuitPlayground Bluefruit</p> <p>Among the many Adafruit devices, the CircuitPlayground Bluefruit is a more accesible to beginners:</p> <ul> <li>Can run CircuitPython</li> <li>Alligator clips instead of soldering</li> <li>Loaded with features: tons of sensors, accelerometer, neopixels, speaker, etc</li> <li>About the size of a Ritz cracker</li> <li>Supported by many Adafruit learn guides as well as third-party online tutorials such as CircuitPython School and Bluefruit School</li> </ul> <p> Source: https://learn.adafruit.com/assets/80460</p>"},{"location":"glossary/circuit_playground/#use-with-stemma-qt-components","title":"Use with STEMMA QT components","text":"<p>Here is a cable which has alligator clips on one end and STEMMA QT on the other:</p> <ul> <li>JST SH 4-pin Cable with Alligator Clips - STEMMA QT</li> </ul> <p>You can also get the following if you're using a breadboard:</p> <ul> <li>Small Alligator Clip to Male Jumper Wire Bundle - 12 Pieces</li> </ul>"},{"location":"glossary/circuit_playground/#additional-references","title":"Additional References","text":"<ul> <li>Adafruit Learn Guide: MakeCode for Circuit Playground Express</li> <li>Adafruit Learn Guide: Circuit Playground Bluefruit</li> </ul> <p>Adafruit Blog 1/26/2022: Circuit Playground Bluefruit BLE Heart Rate Pendant with CircuitPython</p> <p>Adafruit Blog 10/11/2022: Circuit Playground Bluefruit Talking Pumpkin</p> <p>This page was last updated on 2022-10-12 12:51:07 -0500.</p>"},{"location":"glossary/clue/","title":"CLUE","text":""},{"location":"glossary/clue/#back-to-index","title":"Back to Index","text":"<p>Related Circuit Playground, Itsy Bitsy, QT Py</p> <p>WIP</p> <p>Clue  </p> <p>Same general form factor as Micro:Bit</p> <p>Here's a fun program - WORDLE clone on an Adafruit CLUE</p> <p>https://blog.adafruit.com/2022/02/11/a-handheld-version-of-wordle-using-a-clue-and-circuitpython-clue-circuitpython-michael_lacock/</p> <p>https://forums.adafruit.com/viewtopic.php?f=60&amp;t=188244</p> <p>This page was last updated on 2022-03-03 15:45:07 -0500.</p>"},{"location":"glossary/connectors/","title":"Connectors","text":""},{"location":"glossary/connectors/#back-to-index","title":"Back to Index","text":"<p>Related I2C, SPI, GPIO</p> <p>It used to be that in order to add sensors or components to your project you had to use a breadboard or do soldering. However in the past decade companies have begun to offer connectors which let you easily connect / disconnect components to your project without a breadboard or soldering.</p> <p>A major benefit of these connectors is that it makes it much more accessible for beginners.  And experienced people can also benefit since it becomes much easier and quicker to prototype and build interesting projects.  </p> <p>On this page we describe some of the more popular connectors in use today.</p>"},{"location":"glossary/connectors/#grove","title":"Grove","text":"<p>Introduced by Seeed Studio in 2010, Grove uses a proprietary 4-pin 2.0mm pin pitch connector for its range of boards and boards made in partnership with Arduino.  The Grove connector can be used with analog, PWM, digital IO and I2C.</p> <p>While almost the same as a JST PH connector, Grove unfortunately is not compatible - they are physically too different for JST PH and Grove to be inter-changeable.</p> <p>Additional References on comparision of Grove to JST PH</p> <ol> <li>Grove compared to JST PH</li> <li>Grove compatability to JST PH</li> </ol> <p>As Grove has been around the longest, there are a large number of components available.  </p> <p>Many Grove components can be used with Adafruit hardware.</p> <ul> <li>Grove is is only compatible with STEMMA I2C components.  </li> <li>Analog, PWM and digital IO are not compatible.  </li> <li>If a component has SDA / SCL pins, then it is an I2C device.</li> </ul> <p>Seeed Studio makes a Grove - QWIIC Hub to support interoperability with Sparkfun QWIIC and Adafruit STEMMA QT.</p> <p>Description</p> <p>Different from our Grove system, QWIIC\u00a0is an I2C interface system initiated by Sparkfun around 2017, using a 4pin JST SH 1.0mm connector.\u00a0STEMMA QT initiated by Adafruit is cross-compatible with QWIIC, as they use the same connector/cable. To better support different types of interface systems, we provide Grove - QWIIC Hub, which enables you easily connect the I2C devices with Grove/QWIIC/STEMMA QT interface, get the best use of your devices/controller of different interfaces.</p> <p>Additional References</p> <ol> <li>Youtube: Grove 10th Anniversary Documentary 12/31/2020</li> </ol> <p>Related Connector Comparison, Grove, JST, QWIIC, STEMMA, STEMMA QT, What is the difference between STEMMA and STEMMA QT</p>"},{"location":"glossary/connectors/#jst","title":"JST","text":"<p>JST is an acronym for the company Japanese Solderless Terminals.  They pioneered the first solderless connectors.</p> <p>From_the_archive</p> <p>J.S.T. = Japanese Solderless Terminals As our company name implies, Solderless Terminal, has real significance. When JST was established in 1957, we were Japan's first manufacturer and distributor of Solderless Terminals.</p> <p>There are many types of JST connectors, but the two most commonly used by Adafruit are:</p> <ul> <li>JST Series  \"PH\"  2.00mm pin-to-pin pitch<ul> <li>Used with STEMMA</li> </ul> </li> <li>JST Series  \"SH\" 1.00 mm pin-to-pin pitch  <ul> <li>Used with QWIIC and STEMMA QT </li> </ul> </li> </ul> <p>Here's a great video from Jan 5, 2021 where Lady Ada talks about JST SH and PH Connectors:</p> <ul> <li>The Great Search: JST Connectors SH and PH <ul> <li>0:57 JST PH great for power - Sparkfun originally started LiPo Battery JST PH connectors and it became a Maker standard. </li> <li>2:34 JST SH  - Sparkfun also originated QWIIC for breakout boards (STEMMA QT compatible with QWIIC) <ul> <li>Used for I2C (I2C has become the standard for sensors - rarely see sensors over SPI anymore) </li> </ul> </li> </ul> </li> </ul> <p>Related Connector Comparison, Grove, JST, QWIIC, STEMMA, STEMMA QT, What is the difference between STEMMA and STEMMA QT</p>"},{"location":"glossary/connectors/#qwiic","title":"QWIIC","text":"<p>QWIIC\u00a0is an I2C interface system introduced by Sparkfun in 2017, using a 4pin JST SH 1.0mm connector.\u00a0</p> <p>STEMMA QT was introduced by Adafruit in 2018.  STEMMA QT is cross-compatible with QWIIC because they use the same connector/cable. </p> <p>The I2C protocol enables components to be daisy chained together.</p> <p>QWIIC connectors can be found on many of SparkFun\u2019s boards such as the MicroMod ATP carrier board which uses an M.2 slot, the MicroMod standard, for interchangeable processor boards such as the ESP32, Artemis and the new RP2040. There are also adapters for using QWIIC components on the Raspberry Pi via a HAT and pHAT and for the Arduino range of boards. With SparkFun\u2019s QWIIC connector we can easily connect sensors such as the HC-SR04 ultrasonic sensor, soil moisture sensor and even a NEO-M9N GPS breakout.</p> <p>Related Connector Comparison, Grove, JST, QWIIC, STEMMA, STEMMA QT, What is the difference between STEMMA and STEMMA QT</p>"},{"location":"glossary/connectors/#stemma","title":"STEMMA","text":"<p>STEMMA standard is not plug-compatible with STEMMA-QT</p> <p>STEMMA </p> <ul> <li>JST PH 3 and 4 pin connectors (2.0mm pitch connectors)<ul> <li>4 pins - I2C<ul> <li>Enable the use of multiple sensors / devices on a single bus thanks to devices having an address</li> </ul> </li> <li>3 pins - PWM/Analog/Digital<ul> <li>Control Neopixels</li> <li>Read analog sensors </li> <li>Use digital IO devices such as LEDs and buttons</li> </ul> </li> </ul> </li> <li>Connector is keyed so that it cannot be inserted incorrectly</li> <li>STEMMA is seen on larger boards such as PyPortal</li> <li>Aims to be compatible with Grove/Gravity</li> </ul> <p>** Additional References **</p> <ol> <li> <p>Adafruit STEMMA info page</p> <p>STEMMA is a plug-and-play board and sensor system that lets you quickly plug together various devices and accessories, without any soldering! STEMMA uses 3-pin cables for simple analog and digital devices, like relays and buttons. For more complex sensors and displays, we use a 4-wire I2C connection. For larger boards and devices we use a Grove-compatible connector, for smaller ones we use a QWIIC-compatible connector called STEMMA QT.</p> <p>As all STEMMA sensors have level shifting and voltage regulation, you can use them safely with any 3 to 5V power and logic device - from microcontrollers like Arduino-compatibles, to full Linux single board computers like the Raspberry Pi. We even have USB to I2C adapters that let you connect STEMMA devices directly to a computer without any microcontroller programming required! Then, use our Arduino or CircuitPython/Python libraries and examples to easily get your electronics project working on any platform with STEMMA and STEMMA QT.</p> </li> <li> <p>Adafruit Learn Guide: What is STEMMA?</p> </li> <li> <p>Awesome list for STEMMA and STEMMA QT</p> </li> </ol> <p>Related Connector Comparison, Grove, JST, QWIIC, STEMMA, STEMMA QT, What is the difference between STEMMA and STEMMA QT</p>"},{"location":"glossary/connectors/#stemma-qt","title":"STEMMA QT","text":"<p>STEMMA is not plug-compatible with STEMMA-QT</p> <p>STEMMA QT (\u2018cutie\u2019) </p> <ul> <li>JST SH (1.0mm pitch connectors)</li> <li>4 pins - I2C only </li> <li>About half the size of STEMMA<ul> <li>great for smaller boards such as Adafruit QT Py</li> </ul> </li> <li>Cross-compatible with SparkFun QWIIC</li> </ul> <p>Examples of STEMMA QT boards</p> <ul> <li>Adafruit MPR121 capacitive touch sensor</li> <li>Adafruit SGP40 air quality sensor</li> <li>Adafruit BME680 temperature / humidity / pressure sensor</li> <li>Adafruit AHT20 temperature sensor</li> <li>Adafruit VL53L1X Time of Flight Distance Sensor</li> <li>Adafruit AMG8833 IR thermal camera</li> </ul> <p>Additional References</p> <ol> <li> <p>Adafruit STEMMA info page</p> <p>STEMMA is a plug-and-play board and sensor system that lets you quickly plug together various devices and accessories, without any soldering! STEMMA uses 3-pin cables for simple analog and digital devices, like relays and buttons. For more complex sensors and displays, we use a 4-wire I2C connection. For larger boards and devices we use a Grove-compatible connector, for smaller ones we use a QWIIC-compatible connector called STEMMA QT.</p> <p>As all STEMMA sensors have level shifting and voltage regulation, you can use them safely with any 3 to 5V power and logic device - from microcontrollers like Arduino-compatibles, to full Linux single board computers like the Raspberry Pi. We even have USB to I2C adapters that let you connect STEMMA devices directly to a computer without any microcontroller programming required! Then, use our Arduino or CircuitPython/Python libraries and examples to easily get your electronics project working on any platform with STEMMA and STEMMA QT.</p> </li> <li> <p>Adafruit Learn Guide: What is STEMMA QT?</p> <p>We like the JST PH 2.0mm pitch cables because they are cross-compatible with Grove/Gravity. But they're a bit large for smaller breakout boards and wearables. So, for smaller I2C devices, we'll use the JST SH that SparkFun QWIIC uses, so that QWIIC &amp; STEMMA QT sensors are cross-compatible! https://www.youtube.com/watch?v=6GXRRuFuFy0</p> </li> <li> <p>From the Adafruit STEMMA &amp; STEMMA QT Plug &amp; play connectivity - STEMMA Sunday video 7/28/2019 description</p> <p>STEMMA started in 2014, intended to be compatible with Grove (cause Grove is all that existed at the time - since 2010) QWIIC started in 2017, STEMMA-QT added so that could use the smaller connectors. In addition - on the comparison page it states that Grove is a proprietary 4 pin 2.0mm pitch connector. STEMMA attempts to be as cross-compatible as possible with both Grove and Gravity (compatible connectors &amp; 3-5V power/logic). STEMMA QT is cross-compatible with QWIIC - STEMMA QT connector/cable is same as QWIIC. You can use STEMMA QT devices with QWIIC devices/controllers. There is also a table which outlines the compatability matrix.</p> <p>Also explains the differences to Grove and QWIIC</p> </li> <li> <p>Adafruit Learn Guide: What is STEMMA QT?</p> </li> <li> <p>Awesome list for STEMMA and STEMMA QT</p> </li> </ol> <p>Related Connector Comparison, Grove, JST, QWIIC, STEMMA, STEMMA QT, What is the difference between STEMMA and STEMMA QT</p>"},{"location":"glossary/connectors/#stemma-qwiic-and-grove-connectors-which-is-right-for-you","title":"STEMMA, QWIIC and Grove Connectors: Which is Right for You?","text":"<p>Depends on what boards you already have</p> <ul> <li>Adafruit boards usualy have some form of STEMMA / STEMMA QT connector<ul> <li>STEMMA QT is completely cross-compatible with Sparkfun QWIIC</li> <li>STEMMA is different from STEMMA QT/QWIIC, aims to be compatible with Grove I2C </li> </ul> </li> <li>Seeed Grove connectors work with multiple platforms<ul> <li>Arduino</li> <li>Raspberry Pi</li> <li>Raspberry Pi Pico</li> </ul> </li> </ul>"},{"location":"glossary/connectors/#connector-comparison","title":"Connector Comparison","text":"Device Manufacturer Connector Voltage / Logic Protocols Year Introduced Compatible Grove Seeed Studio Proprietary 4 pin 2.0mm pin pitch 3-5V DC 4 Pin I2C / Analog / Digital / PWM 2010 Compatible with STEMMA I2C only QWIIC Sparkfun JST SH 4 pin 1.0mm pin pitch 3V DC I2C 2017 N/A STEMMA Adafruit JST PH 3 Pin or JST PH 4 Pin 2.0mm pin pitch 3-5V DC 4 Pin I2C or  3 Pin Analog / Digital / PWM 2014 Only STEMMA I2C (JST PH 4 Pin) compatible with Grove STEMMA QT Adafruit JST SH 4 pin 1.0mm pin pitch 3-5V DC I2C 2018 intended to be compatible with QWIIC <p>Reference: Toms Hardware STEMMA vs QWIIC vs Grove Connectors  4/24/2021</p> <p>Note</p> <p>An Adafruit Learn Guide has a table which outlines the cross-compatability matrix.</p>"},{"location":"glossary/connectors/#additional-references","title":"Additional References","text":"<p>https://blog.adafruit.com/2023/12/12/the-electronic-connector-book-and-online-reference/</p> <p>This page was last updated on 2023-12-13 15:45:07 -0500.</p>"},{"location":"glossary/crickit/","title":"Crickit","text":""},{"location":"glossary/crickit/#back-to-index","title":"Back to Index","text":"<p>Related Itsy Bitsy, QT Py</p> <p>WIP</p> <p>Crickit</p> <p>Adafruit CRICKIT for Circuit Playground Express https://www.adafruit.com/product/3093</p> <p>Adafruit CRICKIT FeatherWing for any Feather https://www.adafruit.com/product/3343</p> <p>Adafruit CRICKIT HAT for Raspberry Pi https://www.adafruit.com/product/3957</p> <p>Adafruit CRICKIT for micro:bit https://www.adafruit.com/product/3928</p> <p>Adabox 008 https://www.adafruit.com/product/3906</p> <p>This page was last updated on 2022-03-03 15:45:07 -0500.</p>"},{"location":"glossary/esp32/","title":"ESP32","text":""},{"location":"glossary/esp32/#back-to-index","title":"Back to Index","text":"<p>Related Microcontroller, Feather, QT Py, Itsy Bitsy</p> <p>WIP </p> <p>ESP32 overview</p> <p>https://youtu.be/MEhoZ--nOgw?t=76</p> <p>ESP32-C3 single core, cost-effective RISC-V MCU with WiFi and BLE 5.0  key aim was to be a replacement for ESP8266 - easy to upgrade existing ESP8266 to ESP32-C3 cheap smart home and office devices</p> <p>ESP32-S series (ESP32-S2, ESP32-S3)  - upgrade from the ESP32  - new and faster LX7 processor architecutre - more security features - on-chip AI capabilities - secure &amp; low power use cases</p> <p>ESP32-S2 - single core  - upgrade from the ESP32  - secure &amp; low power use cases</p> <p>ESP32-S3 - dual-core  - aimed at AI and AIoT - offline voice recognition - computer vision - wake word detection - multi-dimensional human machine interface Example:  ESP32-S3-Box AI Voice development kit</p> <p>ESP32 Family Feature Grid     As mentioned from: Adafruit Blog: ESP32 Family Feature Grid     I struggle to remember the differences among the original ESP32 and the subsequent S2, S3 and C3 Series microcontrollers. Was going to carefully assemble a feature grid to organize this, and share it here on the blog\u2026but as it turns out Espressif already has a fantastic one, I just didn\u2019t think to look here. It\u2019s perfection! And long!</p> <p>Adafruit Blog: Updating ESP32 AirLift Firmware</p> <p>Adafruit Blog 1/6/2023: An alternate ESP32 flashing utility <code>esputil</code> is a command line tool for managing Espressif devices. It is a replacement for <code>esptool.py</code>. <code>esputil</code> is part of https://github.com/cpq/mdk. It is written in C and is available as a no-dependency static binary for Mac, Linux, Windows</p> <p>Adafruit Blog 1/25/2023: New Product! Featuring Adafruit ESP32-S2 Reverse TFT Feather</p> <p>Adafruit Blog 2/16/2023: New Guide! 3D Printed Stand for Feather ESP32 with Reverse TFT</p> <p>WLED project A fast and feature-rich implementation of an ESP8266/ESP32 webserver to control NeoPixel (WS2812B, WS2811, SK6812) LEDs or also SPI based chipsets like the WS2801 and APA102! As referenced from WLED on hckrnews</p> <p>ESP32 Buyer\u2019s Guide: Different Chips, Firmware, Sensors As referenced from hckrnews</p> <p>Drill down into the technical specifications of each chip, see this guide on GitHub.</p> <p>Get ESP32 GitHub updates over the air with MicroPython ugit allows one to keep your remote ESP32 devices in sync with a GitHub repository.</p> <p>This page was last updated on 2023-02-20 13:57:07 -0500.</p>"},{"location":"glossary/feather/","title":"Feather","text":""},{"location":"glossary/feather/#back-to-index","title":"Back to Index","text":"<p>Related Itsy Bitsy, QT Py</p> <p>WIP</p> <p>Feather is an Adafruit standard format for microcontrollers.</p> <ul> <li>Large, comparatively for microcontrollers.  <ul> <li>Still pretty small compared to a Raspberry Pi or other types of SBCs (Single Board Computers)</li> </ul> </li> <li>Alot of feather boards.  <ul> <li>All the same size and mostly use the same standards for pins and connections.  </li> </ul> </li> </ul> <p>Note</p> <p>Not all feathers run CircuitPython.</p>"},{"location":"glossary/feather/#some-versions-of-the-adafruit-feather","title":"Some Versions of the Adafruit Feather","text":"Device Microcontroller Code RAM Cost Adafruit HUZZAH32 ESP32 Arduino only 4MB Flash + 520KB SRAM $21.95 Adafruit M4 Express SAMD51 Arduino or CircuitPython 512KB Flash + 192KB RAM $21.95 Black Adafruit Feather RP2040 RP2040 Arduino or CircuitPython 8MB SPI Flash + 264KB RAM $19.95 Pink Adafruit Feather RP2040 RP2040 Arduino or CircuitPython 8MB SPI Flash + 264KB RAM $19.95 Adafruit Feather ESP32-S2 TFT Feather ESP32-S2 Arduino or CircuitPython 4 MB Flash + 2MB PSRAM $24.95 Adafruit Feather ESP32-S2 with BME280 Sensor ESP32-S2 Arduino or CircuitPython 2 MB of SPI Flash storage $24.95 Adafruit Feather ESP32-S3 8MB Flash No PSRAM ESP32-S3 ESP-IDF, Arduino or CircuitPython 8 MB of SPI Flash storage $17.50 Adafruit Feather ESP32-S3 4MB Flash 2MB PSRAM ESP32-S3 ESP-IDF, Arduino or CircuitPython 4 MB of SPI Flash storage + 2 MB PSRAM $17.50 <p>Make: review of Adafruit Feather RP2040</p> <p>Adafruit Blog: RP2040 Feather \u2018bones\u2019 for a few different varieties</p> <pre><code>When we kicked off the adafruit feather series of boards we started with the atmega32u4 and made a bunch of PCBs that featured that chip with accessories at the end (https://www.adafruit.com/?q=feather+32u4&amp;sort=BestMatch)\n\nfun fact: the featherline is derived from the bluefruit micro which was a popular 32u4 + BLE devboard (https://www.adafruit.com/product/2661)\n\nafter the 32u4 we went to the SAMD21 which brought cortex M0 and some circuitpython-capability to the Feather line. the SAMD21 was like-wise compact enough we could add some components on the end (https://www.adafruit.com/?q=feather+m0&amp;sort=BestMatch) with more people using circuitpython, the SAMD21 is a bit cramped with only 32KB of RAM.\n\nit\u2019d be better if we re-did the idea series but with the SAMD51 (https://www.adafruit.com/?q=feather+m4&amp;sort=BestMatch) however, the samd51 uses a lot more PCB space and now-a-days we cant get SAMD51\u2019s anyways so we thought, let\u2019s maybe try a RP2040 Feather collection?\n\nHere\u2019s the \u2018bones\u2019 of the RP2040 SCORPIO but with everything we could do in 0402 and shoved to the left. we \u2018test fitted\u2019 a few popular modules/connectors to make sure they\u2019d fit in the left-over cavity. can you guess what each one would be for, or maybe you have ideas for any ones we missed?\n</code></pre>"},{"location":"glossary/feather/#featherwing","title":"Featherwing","text":"<p>Plugin add-on boards that provide additional features.  E.g., running motors, adding sensors, include displays, add bluetooth or WiFi capabliities.</p> <p>Feather Format is an Adafruit standard format for microcontrollers (Large, comparatively for microcontrollers.  It's still pretty small compared to a Raspberry Pi or other types of SBCs)  Alot of feather boards.  All the same size and mostly use the same standards for pins and connections.  NOTE: not all feathers run CircuitPython.</p> <p>Example:  NeoPixel FeatherWing for all Feather Boards https://www.adafruit.com/product/2945</p>"},{"location":"glossary/feather/#some-featherwings","title":"Some FeatherWings","text":"Device Cost Adafruit AirLift FeatherWing $12.95 Adafruit FeatherWing OLED 128x64 $14.95 Adafruit Ultimate GPS FeatherWIng $24.95 <p>Additional References</p> <ul> <li>Introducing Adafruit Feather</li> </ul> <p>This page was last updated on 2023-02-08 18:45:07 -0500.</p>"},{"location":"glossary/gemma/","title":"Gemma","text":""},{"location":"glossary/gemma/#back-to-index","title":"Back to Index","text":"<p>Related Circuit Playground Bluefruit</p> <p>From Adafruit Daily tip 12/22/2022:</p> <p>GEMMA and Trinket are great when you want a tiny, low cost microcontroller to embed in your projects. One of the tradeoffs, however, is that they can\u2019t send data back to the computer for debugging sensor values. For instance, you want to make a pair of Firewalker sneakers with Gemma instead of Flora, but there\u2019s no easy way to calibrate your Velostat step sensor since you can\u2019t see the numerical value of the reading. We recommend keeping a FLORA around for this purpose, even if you port to GEMMA later. But there\u2019s a workaround\u2013 you can use software serial and a modified console cable to debug values on Gemma.</p> <ul> <li>Bolt on kit for Circuit Playground or Gemma</li> </ul> <p>This page was last updated on 2022-12-22 09:45:07 -0500.</p>"},{"location":"glossary/glider/","title":"Glider","text":""},{"location":"glossary/glider/#back-to-index","title":"Back to Index","text":"<p>Related Pyleap, Circuit Playground Bluefruit</p> <p>Glider</p> <p>iOS app to interact with Adafruit microcontrollers over Bluetooth LE</p> <p>WIP</p> <p>Note</p> <p>You will need to connect the Circuit Playground Bluefruit to a battery - Do NOT connect to a computer!!</p> <p>Adafruit Blog 2/14/2022: Wirelessly Program a Circuit Playground Bluefruit Using the File Glider App</p> <p>Adafruit Learn Guide: Wirelessly Program a Circuit Playground Bluefruit Using the File Glider App</p> <p>This page was last updated on 2022-03-03 15:45:07 -0500.</p>"},{"location":"glossary/gpio/","title":"GPIO","text":""},{"location":"glossary/gpio/#back-to-index","title":"Back to Index","text":"<p>Related I2C, SPI, Raspberry Pi</p> <p>WIP</p> <p>GPIO - General Purpose Input/Output </p> <ul> <li>standard interface used to connect electronic devices</li> <li>can be used with sensors, displays, etc</li> </ul> <p>GPIO are usually in the form of \"pins\", as opposed to other types of connectors.</p> <p>Different Raspberry Pi models have either 26 or 40 GPIO pins.  The newer Rasbperry Pi models have two banks of 20 pins.  </p> <p>Website reference guide to the Raspberry Pi GPIO pins: https://pinout.xyz</p>"},{"location":"glossary/gpio/#additional-references","title":"Additional References","text":"<p>https://en.wikipedia.org/wiki/General-purpose_input/output</p> <p>https://opensource.com/article/19/3/gpio-pins-raspberry-pi</p> <p>https://www.raspberrypi.com/documentation/computers/os.html#gpio-and-the-40-pin-header</p> <p>https://pinout.xyz</p> <p>Raspberry Pi GPIO - Getting started with gpiozero  2/22/2020</p> <p>https://www.youtube.com/watch?v=iL_oZGHLHvU</p> <p>https://dronebotworkshop.com/raspberry-pi-gpio/</p> <p>This page was last updated on 2022-03-03 15:45:07 -0500.</p>"},{"location":"glossary/hat/","title":"HAT","text":""},{"location":"glossary/hat/#back-to-index","title":"Back to Index","text":"<p>Related GPIO, Raspberry Pi, expansion boards</p> <p>HAT Hardware Attached on Top</p> <p>WIP</p> <p>HATs Example:  Raspberry Pi Build HAT for Lego https://blog.adafruit.com/2021/11/12/the-raspberry-pi-build-hat-and-lego-components-at-raspberry_pis-coderdojo-piday-raspberrypi/</p> <p>https://www.freecodecamp.org/news/what-is-raspberry-pi-specs-and-models-2021-guide/</p> <p>This page was last updated on 2022-07-19 15:45:07 -0500.</p>"},{"location":"glossary/i2c/","title":"I2C","text":""},{"location":"glossary/i2c/#back-to-index","title":"Back to Index","text":"<p>Related SPI, QWIIC, STEMMA, STEMMA QT, What is the difference between Stemma and Stemma QT, GPIO</p> <p>WIP</p> <p>I2C (eye-squared-C) or Inter-Integrated Circuit is a synchronous, multi-master, multi-slave, packet-switched, single-ended, serial communication bus invented in 1982 by Philips Semiconductors.</p> <p>I2C is a serial communication protocol commonly used for sensors and other simple devices that don\u2019t need to send or receive data quickly. I2C has become the standard for sensors - rarely see SPI over sensors anymore.</p> <p>I2C uses four wires</p> <ul> <li>power </li> <li>ground</li> <li>clock (SCL)</li> <li>data (SDA)</li> </ul> <p>I2C uses unique addresses for devices so it makes it possible to daisy chain multiple devices. NOTE: if you need to use the same type of component or sensor twice, some devices allow you to set a jumper to change the default address. Another option is to use SparkFun STEMMA QT / Qwiic TCA9548A Mux Breakout - 8 Channel</p> <p>Addresses range from 0 to 128  A seven bit wide address space theoretically allows 128 I2C addresses \u2013 however, some addresses are reserved for special purposes. Thus, only 112 addresses are available with the 7 bit address scheme. <sup>5</sup></p> <p>THe QWIIC and STEMMA QT devices exclusively communicate via I2C.  STEMMA 4-pin connectors can also use I2C. Grove devices can also use I2C.  If you are unsure if a device uses I2C, if you see SCL and SDA pins then it is an I2C device.</p> <p>I2C is ideal for short distances and low bandwidth communication. I2C uses a client/server architecture. </p> <p>I2C limitiations:</p> <ul> <li>No hot plugging support</li> <li>No auto device discovery</li> <li>Addresses collisions may occur (if multiple devices use the same address)</li> </ul> <p>Working with Multiple Same Address I2C Devices</p> <p>I2C Ecosystems</p> <p>https://blog.adafruit.com/2022/02/03/luxuriously-long-stemma-qt-cable-samples/</p> <p>Quote</p> <p>I2C was never meant to go 200, 300 or 400mm but we laugh in the face of death thanks to these samples we got of some looooooooong stemma qt cables. each cable has two JST SH connectors on either end and a PVC sheathed center. we were inspired by this tweet https://twitter.com/lovyan03/status/1480867328783163396 about I2C wire interleaving with power in order to avoid cross-talk for long cables (I2C is not differential so you definitely do not want to use twisted wires!) if you look closely, the cable is flat and has the red power wire between SDA and SCL instead of having them next to each other. we\u2019re just trying it out here with our fancy new ESP32 Feather V2 which has an onboard STEMMA QT connector </p> <p>I2C over the network WiFiWire is provides a Wire (i2c) protocol able to communicate over AsyncUDP. You can have your program use a Wire (i2c) sensor/device, but it is communicating over a network rather than wiring. There are server and client software.</p> <p>Additional References 1. Adafruit Learn Guide: I2C devices 2. CircuitPython Basics: I2C and SPI 3. CircuitPython Basics: Digital Inputs &amp; Outputs 4. CircuitPython Basics: Analog Inputs &amp; Outputs 1. Adafruit Learn Guide: Working with I2C devices 5. I2C addressing</p> <p>This page was last updated on 2022-05-05 16:55:07 -0500.</p>"},{"location":"glossary/iot/","title":"IOT","text":""},{"location":"glossary/iot/#back-to-index","title":"Back to Index","text":"<p>Related Adafruit IO, WipperSnapper</p> <p>IOT or Internet of Things</p> <p>WIP</p> <p>Testing out CircuitPython with Azure Library</p> <p>This page was last updated on 2022-02-23 11:15:07 -0500.</p>"},{"location":"glossary/itsy_bitsy/","title":"Itsy Bitsy","text":""},{"location":"glossary/itsy_bitsy/#back-to-index","title":"Back to Index","text":"<p>Related Feather, QT Py</p> <p>Itsy Bitsy is a small sized board, smaller than Feather</p> <p>WIP</p> <p>Some limitations </p> <ul> <li>due to smaller form factor, typically does not have a STEMMA QT connector</li> <li>usually does not have battery circuity (like the Feather does)</li> </ul> <p>This page was last updated on 2022-03-22 14:15:07 -0500.</p>"},{"location":"glossary/metro/","title":"METRO","text":""},{"location":"glossary/metro/#back-to-index","title":"Back to Index","text":"<p>Related Feather, QT Py, Itsy Bitsy</p> <p>Metro</p> <p>Arduino form factor</p> <p>WIP</p> <p>https://blog.adafruit.com/2022/05/25/make-review-adafruit-metro-esp32-s2-metro-make-adafruit/</p> <p>This page was last updated on 2022-02-23 11:15:07 -0500.</p>"},{"location":"glossary/microcontroller/","title":"Microcontroller","text":""},{"location":"glossary/microcontroller/#back-to-index","title":"Back to Index","text":"<p>Related Feather, Itsy Bitsy, QT Py, RP2040, SBC</p> <p>Microcontrollers are single purpose computers </p> <ul> <li>small embedded development boards</li> <li>limited storage and memory</li> <li>limited processing power</li> </ul>"},{"location":"glossary/microcontroller/#microcontrollers-vs-general-purpose-computer","title":"Microcontrollers vs General Purpose Computer","text":"<ul> <li>Use of microcontrollers is fine for most cases</li> <li>When you need more computational power, you may want to use a Raspberry Pi<ul> <li>For example, if you wish to have a web dashboard to interface with</li> <li>Would like to process larger data sets</li> </ul> </li> </ul>"},{"location":"glossary/microcontroller/#comparison-of-raspberry-pi-to-arduino","title":"Comparison of Raspberry Pi to Arduino","text":""},{"location":"glossary/microcontroller/#features","title":"Features","text":"Raspberry Pi Arduino Raspberry Pi is a Microcomputer Arduino is a Microcontroller Operating System on MicroSD card Bootloader on chip USB, Video, Camera, Display &amp; Audio USB I2C &amp;SPI Busses I2C &amp; SPI Buses Digital I/O Digital I/O and Analog Inputs 5v USB power 5v USB &amp; 8-20v DC power Commercial patented product Open source design <p>The Raspberry Pi's schematics are released, but the board itself is not open hardware. The Raspberry Pi Foundation relies on income from the sale of Raspberry Pis to do its charitable work. Reference: https://opensource.com/resources/raspberry-pi</p>"},{"location":"glossary/microcontroller/#specs","title":"Specs","text":"Raspberry Pi Arduino Up to 1.5 GHz 64-bit quad-core CPU 16 MHz 8-bit single-core MCU 512 MB to 8 GB RAM 2 Kb - 8 Kb SRAM 26 Digital I/O pins 14 - 54 Digital I/O pins No Analog inputs 6 - 16 Anallog inputs Bluetooth &amp; WiFi (some models) No Bluetooth or WiFi Ethernet (some models) No Ethernet Expand with HATs Expand with Shields"},{"location":"glossary/microcontroller/#extras","title":"Extras","text":"Raspberry Pi Arduino MicroSD card USB Cable USB (or USB-C) power supply Computer Keyboard Mouse HDMI monitor Adapter cables as required <p>NOTE: as the Raspberry Pi is a SBC (Single Board Computer) - you will need all the peripherals for Input and Output, as well as an OS.</p> <p>NOTE: the Arduino is a microcontroller so that it requires a separate computer to push code/instructions to it</p> <p>Recap </p> <ul> <li>Arduino - precision timing, measure pulse widths to a high degree of accuracy</li> <li>Raspberry Pi - add more intelligence  </li> </ul> <p>Using Node-RED on microcontrollers Could Node-RED generate code for MCUs? Up until now, it provides an elegant low-code/no-code solution for IoT but requires a single-board computer to run, like a Raspberry Pi 4B. The Moddable SDK implements JavaScript on MCUs and thus allows to run a Node-RED flow on them.\\ \u200bSupported hardware includes ESP32, Raspberry Pi Pico W, among other options, and proprietary boards like the Moddable Two, built around an ESP32 and a 320\u00d7240 touch display The project relies on different components: The flow is designed with Node-RED. \u200bNode-RED MCU Edition exports it to JavaScript. Moddable translates the JavaScript project into C++ code. Moddable calls the tool-chain of the board to build and link, upload and launch the project. Moddable opens an optional debugger. Node-RED now includes a new pane, MCU (above) with two parts: on top, the selection of the flows to consider for the MCU; below the choice of the targeted board and different options. Targeting MCUs with Node-RED might not be the most optimised solution, especially when displaying a dashboard, but this approach speeds up the development on interfaces for MQTT and GUI.</p>"},{"location":"glossary/microcontroller/#resources","title":"Resources","text":"<ul> <li>Learn: The Great Search SAMD21 Microcontrollers</li> </ul> <p>https://makezine.com/comparison/boards https://www.digikey.com/en/maker/boards-guide     https://media.digikey.com/Resources/Maker/the-original-guide-to-boards-2020.pdf As mentioned by Lady Ada on 8/6/2021  https://youtu.be/UwGtmSZkm2c?t=245         </p> <p>Adafruit_CircuitPython_HTTPServer - Simple HTTP Server for CircuitPython</p> <p>This page was last updated on 2022-03-29 12:26:07 -0500.</p>"},{"location":"glossary/neopixel/","title":"NeoPixel","text":""},{"location":"glossary/neopixel/#back-to-index","title":"Back to Index","text":"<p>NeoPixel</p> <p>WIP</p> <ul> <li>[ ] Neopixel Uberguide:  https://learn.adafruit.com/adafruit-neopixel-uberguide?view=all</li> <li>[ ] Learn: Make It Glow - Your First NeoPixel Project   https://learn.adafruit.com/make-it-glow-your-first-neopixel-project</li> <li> <p>[ ] Learn:  NeoPixel Basics - Make Your Project Glow (No Soldering!) https://www.youtube.com/watch?v=vCDfyxNFeEw  4/8/2020 (2:41 video)</p> </li> <li> <p>[ ] Neopixels on Raspberry Pi:   https://learn.adafruit.com/neopixels-on-raspberry-pi Learn: CircuitPython Neopixels Using SPI:  https://learn.adafruit.com/circuitpython-neopixels-using-spi Neopixel ring:  https://www.adafruit.com/product/1643 Adafruit NeoPixel LED Strip w/ Alligator Clips https://www.adafruit.com/product/3811</p> </li> </ul> <p>Neopixel questions on Stemma QT:  https://forums.adafruit.com/viewtopic.php?f=47&amp;t=173454&amp;p=845748&amp;hilit=neopixel+strip+stemma#p845748 https://forums.adafruit.com/viewtopic.php?f=57&amp;t=158443&amp;p=780838&amp;hilit=neopixel+strip+stemma#p780838 - [ ] Learn: Sipping power with Neopixels  https://learn.adafruit.com/sipping-power-with-neopixels/overview</p> <ul> <li>[ ] Great method for connecting neopixel strips to Circuit Playground Bluefruit  https://www.youtube.com/watch?v=TbR1q9Jyvyk&amp;t=69s   Connect LED Strand to CPB and Add CircuitPython Code - Bluefruit School  7/29/2021        Try this out #next   Ordered the connectors mentioned in the video from Amazon - Delivered 11/23/2021</li> <li>[ ] MakerSnack Bluetooth Mason Jar Light   https://www.youtube.com/watch?v=13cEzoIdi6A  7/29/2021</li> <li>[ ] MakerSnack SparkleScarf https://www.youtube.com/watch?v=_VzG5EY9yiI  7/29/2021</li> <li>[ ] MakerSnack Smart Tie https://www.youtube.com/watch?v=lAmcyOB4wnw  7/29/2021</li> <li> <p>[ ] MakerSnack - Swift Sign and More with the Adafruit LED Matrix Portal   https://www.youtube.com/watch?v=Ss4KpRQE9eY  10/18/2020</p> </li> <li> <p>[ ] https://learn.adafruit.com/qt-py-and-neopixel-leds   QTpy SAMD21 doesn't support circuitpython led_animation library (maybe due to memory constraints)?</p> </li> </ul> <p>This page was last updated on 2022-02-23 11:15:07 -0500.</p>"},{"location":"glossary/playground/","title":"New Notes from Adafruit Playground","text":"<p>10/30/2023</p> <p>Adafruit Playground is a new place for community members to post their projects and other making tips/tricks/techniques. Ad-free, it\u2019s an easy way to publish your work in a safe space for free.</p> <p>https://adafruit-playground.com</p> <p>https://adafruit-playground.com/u/MakerMelissa/pages/comparing-libgpiod-and-gpiozero-speeds-on-the-raspberry-pi-5</p> <p>https://adafruit-playground.com/u/DJDevon3/pages/12-panel-matrix-portal-display</p> <p>This page was last updated on 2022-10-31 14:15:07 -0500.</p>"},{"location":"glossary/pwm/","title":"PWM","text":""},{"location":"glossary/pwm/#back-to-index","title":"Back to Index","text":"<p>Related SPI, QWIIC, STEMMA, STEMMA QT, What is the difference between Stemma and Stemma QT, GPIO</p> <p>PWM</p> <p>WIP</p> <p>This page was last updated on 2022-02-23 11:15:07 -0500.</p>"},{"location":"glossary/pyleap/","title":"PyLeap","text":""},{"location":"glossary/pyleap/#back-to-index","title":"Back to Index","text":"<p>Related Glider, Circuit Playground Bluefruit, CLUE</p> <p>PyLeap  is an app for iOS and iPadOS.  It allows you to collect complete projects\u00a0from the Adafruit Learn System, and transfer them directly to your Circuit Playground Bluefruit\u00a0without opening a code editor or connecting to a computer.  Send files and libraries directly to your Bluefruit device!</p> <p>Note</p> <p>You will need to connect the Circuit Playground Bluefruit to a battery - Do NOT connect to a computer!!</p> <p>The main PyLeap guide on the Adafruit Learning System:</p> <ul> <li>Adafruit Learn Guide: PyLeap App </li> </ul> <p>The following PyLeap projects (as of 2/2022) are available on the Adafruit Learning System:</p> <ul> <li>Adafruit Learn Guide: PyLeap device enabled - In Rainbows </li> <li>Adafruit Learn Guide: Pyleap touch neopixel rainbow</li> <li>Adafruit Learn Guide: PyLeap NeoPixel Sound Meter for Circuit Playground Bluefruit</li> <li>Adafruit Learn Guide: PyLeap NeoPixel Light Meter for Circuit Playground Bluefruit</li> <li>Adafruit Learn Guide: PyLeap Button Controlled NeoPixels for Circuit Playground Bluefruit </li> <li>Adafruit Learn Guide: PyLeap WAV Playback for Circuit Playground Bluefruit </li> <li>Adafruit Learn Guide: PyLeap MP3 Playback for Circuit Playground Bluefruit</li> <li>Adafruit Learn Guide: PyLeap Tone Piano for Circuit Playground Bluefruit</li> <li>Adafruit Learn Guide: PyLeap EyeLights LED Glasses Rainbows for Circuit Playground Bluefruit</li> <li>Adafruit Learn Guide: PyLeap Blink Animation for Circuit Playground Bluefruit</li> </ul> <p>Additional References</p> <ul> <li>Adafruit Blog 6/3/2022: PyLeap 2.0 with CLUE support</li> <li>Adafruit Demo Video on Youtube: Demo video from 11/24/2021</li> <li>Adafruit Demo Video on Youtube: PyLeap and Glider for CircuitPython. 12/15/2021. (2 minutes) </li> <li>Adafruit Blog 12/22/2021: PyLeap officially released on the App Store</li> <li>Adafruit Blog 2/3/2022: CLUE support coming soon to PyLeap</li> <li>Github repo - PyLeap - iOS app <ul> <li>PyLeap - iOS app (this is one of two Adafruit iOS apps) - a BLE file transfer app to send CircuitPython projects via BLE to your Adafruit hardware</li> </ul> </li> <li>Adafruit Blog 4/8/2022: PyLeap UI update</li> <li>Adafruit Blog 10/6/2022: New Guide - PyLeap CLUE Sensor Plotter </li> <li>Adafruit Learn Guide: PyLeap Custom Conference Badge for CLUE</li> <li>Adafruit Blog: 12/9/2022: PyLeap 2.1.0 Beta support for transferring files and assets over Wi-Fi</li> <li>[Adafruit Blog: 12/19/2022: PyLeap 2.1.0 released - transferring files and assets over Wi-Fi] (https://blog.adafruit.com/2022/12/19/pyleap-gets-a-major-update-now-with-wi-fi-transfer-and-more/)</li> </ul> <p>This page was last updated on 2022-12-19 13:45:07 -0500.</p>"},{"location":"glossary/qt_py/","title":"QT Py","text":""},{"location":"glossary/qt_py/#back-to-index","title":"Back to Index","text":"<p>Related Feather, Itsy Bitsy</p> <p>WIP</p> <p>QT Py is tiny.</p> <p>It is size and pin compatible with Seeed Studio XIAO.</p> <p>Adafruit sells the Seeduino XIAO expansion board which works with the Adafruit QT Py.</p>"},{"location":"glossary/qt_py/#three-versions-of-qt-py","title":"Three versions of QT Py","text":"Device Microcontroller Code RAM / Storage Cost QT Py SAMD21 ATSAMD21 ARM Cortex M0 Arduino, CircuitPython, or MakeCode 32KB RAM / 256 KB of SPI Flash storage $7.50 QT Py ESP32-S2 ESP32-S2 Arduino, CircuitPython, or MakeCode 2MB PSRSM / 4 MB of SPI Flash storage $12.50 QT Py RP2040 RP2040 Arduino, CircuitPython, or MakeCode 264KB RAM / 8MB of SPI Flash $9.95"},{"location":"glossary/qt_py/#additional-versions-of-the-qt-py-on-the-way","title":"Additional versions of the QT Py on the way","text":"Device Microcontroller Code RAM /Storage QT Py nRF52840 <sup>1</sup> nRF52840 Arduino, CircuitPython, or MakeCode 256KB RAM / ? storage QT Py ESP32-S3 <sup>2, 3</sup> ESP32-S3 Arduino, CircuitPython, or MakeCode ? RAM / ? storage QT Py ESP32-C3 <sup>4</sup> ESP32-C3 Arduino, CircuitPython, or MakeCode 400KB SRAM / 4MB Flash storage <ol> <li> <p>Adafruit blog post about QT Py nRF52840 1/6/2022     Now we\u2019ve got the QT Py SAMD21, RP2040 and ESP32-S2 designed and fabricated, we\u2019re going to follow up with an NRF52840 version! We\u2019ve been using the Nordict nRF series for a loooooong time (anyone else remember the nRF8001? it was like the AT90S2313 of bluetooth le for us). nRF52840 is the first one with native USB \u2013 and its plenty fast as a Cortex M4 at 64MHz and 256K of RAM. we already did a module-less route of this chip on the Circuit Playground Bluefruit so we know the schem capture is right.</p> </li> <li> <p>Adaafruit blog post about QT Py ESP32-S3 1/7/2022     This is a swap-out of the ESP32-S2 QT Py for the new ESP32-S3 chip. The S3 is really a nice piece of kit \u2013 dual core is back and it also re-adds BLE. It\u2019s basically an ESP32 with native USB, we\u2019re looking forward to it! note that the S3 chip looks a lot like the S2 but the chip pinout is NOT the same, the reset, and some power pins have moved. and some gpio shifted down one. also, looks like the dual DAC was removed. anyways, just watch out don\u2019t think you can use the exact same layout. we had to shift a few parts but it all still looks like it fits! top part is identical to the S2 QT Py, and the bottom only shifted a few passives around. we\u2019ll get some 4 layer prototypes on order.</p> </li> <li> <p>Desk of Lady Ada youtube video 1/9/2022     This weekend we cranked through 3.5 QT Py designs (we didnt finish routing one, its a toughie!) - we already make SAMD21, RP2040 and ESP32-S2 and we wanted to add some more chips to the mix: ESP32-S3 (dual core version of the S2), ESP32 Pico (OG ESP with built in flash/psram), ESP32-C3 (Risc-V wifi!) and nRF52840 (BLE wonder-chip from Nordic). the last one is what we didn't get to finish routing because its a particularly tough one. The other 3 worked out fine with a 4 layer PCB. We also designed a few 'BFF' boards - that fit onto a QT Py like a shield. </p> </li> <li> <p>Adafruit blog post about QT Ot ESP32-C3 3/9/2022      ESP32-C3 is a low-cost microcontroller from Espressif that supports 2.4 GHz Wi-Fi and Bluetooth\u00ae Low Energy (Bluetooth LE). It has built-in USB-to-Serial, but not native USB \u2013 it cannot act as a keyboard or disk drive. The chip used here has 4MB of Flash memory, 400 KB of SRAM and can easily handle TLS connections.</p> </li> </ol>"},{"location":"glossary/qt_py/#bff","title":"BFF","text":"<p>As of January 2022, BFF is the placeholder name for Adafruit expansion boards for QT Py boards that fit onto a QT Py like a shield. https://blog.adafruit.com/2022/01/11/qt-py-bff-with-lipoly-charging-and-switch/ https://blog.adafruit.com/2022/01/11/gamer-bff-qt-py-mini-gaming-add-on/</p> <p>Adafruit LiIon or LiPoly Charger BFF Add-On for QT Py</p> <p>Adafruit Learn Guide: Adafruit LiIon or LiPoly Charger BFF Add-On for QT Py</p>"},{"location":"glossary/qt_py/#additional-references","title":"Additional References","text":"<ul> <li>Hackster.io QT Py Review</li> </ul> <p>This page was last updated on 2022-03-18 08:46:07 -0500.</p>"},{"location":"glossary/raspberry_pi/","title":"Raspberry Pi","text":""},{"location":"glossary/raspberry_pi/#back-to-index","title":"Back to Index","text":"<p>Related SBC, GPIO, HAT</p> <p>WIP</p> <p>The Raspberry Pi is a SBC (Single Board Computer) produced by the Raspberry Pi Foundation.</p> <p>The Raspberry Pi is a General Purpose Computer which is different from a microcontroller which is a single purpose computer.  A chart comparing the Raspberry Pi to an Arduino is on the microcontroller glossary page.</p> <p>The Raspberry Pi's schematics are released, but the board itself is not open hardware. The Raspberry Pi Foundation relies on income from the sale of Raspberry Pis to do its charitable work.  Reference:  https://opensource.com/resources/raspberry-pi</p> <p>What is Raspberry Pi? Specs and Models (2021 Guide)   8/25/2021</p> <p>CircuitPython on Raspberry Pi (Bare Metal / No OS)</p> <p>https://learn.adafruit.com/raspberry-pi-care-and-troubleshooting/</p> <p>11/10/2021</p>"},{"location":"glossary/raspberry_pi/#raspberrypi-advanced-options-with-raspberry-pi-imager-makes-it-a-much-better-choice-than-balena-etcher","title":"raspberrypi  Advanced options with Raspberry Pi Imager makes it a much better choice than Balena Etcher.","text":"<p>https://youtu.be/hCxT0A-5_9k?t=283 Open Advanced Settings Options</p> <pre><code>Ctrl-shift-x\n</code></pre> <p>Then you can set hostname, enable SSH, set password for pi user, Configure WiFi,  Set Locale Settings.   Awesome! Additional reference:   https://learn.adafruit.com/raspberry-pi-zero-creation/using-rpi-imager</p>"},{"location":"glossary/raspberry_pi/#2242020","title":"2/24/2020","text":""},{"location":"glossary/raspberry_pi/#raspberrypi-confirmed-12-release","title":"raspberrypi  confirmed 1.2 release","text":"<p>https://hackaday.com/2020/02/23/raspberry-pi-slips-out-new-pcb-version-with-usb-c-power-fix/ https://news.ycombinator.com/item?id=22402211</p>"},{"location":"glossary/raspberry_pi/#2202020","title":"2/20/2020","text":""},{"location":"glossary/raspberry_pi/#raspberrypi","title":"raspberrypi","text":"<p>https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md Improved USB-C on newer Pi4s? - Raspberry Pi Forums https://www.raspberrypi.org/forums/viewtopic.php?t=260719</p> <p>https://tutorial.cytron.io/2020/02/22/how-to-check-if-your-raspberry-pi-4-model-b-is-rev1-2/</p> <p>https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md <code>cat /proc/cpuinfo</code> The last three lines show the hardware type, the revision code, and the Pi's unique serial number.</p> <p>Raspberry Pi 4B 4GB </p> <pre><code>c03111  4B  1.1 4GB Sony UK\nc03112  4B  1.2 4GB Sony UK\n</code></pre> <p>Saniabox  - Raspberry Pi 4B 2GB </p> <pre><code>b03112  4B   1.2  \n</code></pre> <p>Raspberry Pi 4B 4GB rev 1.1</p> <pre><code>\nprocessor   : 3\nmodel name  : ARMv7 Processor rev 3 (v7l)\nBogoMIPS    : 108.00\nFeatures    : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 \nCPU implementer : 0x41\nCPU architecture: 7\nCPU variant : 0x0\nCPU part    : 0xd08\nCPU revision    : 3\n\nHardware    : BCM2711\nRevision    : c03111\nSerial      : 10000000032c4bda\nModel       : Raspberry Pi 4 Model B Rev 1.1\n</code></pre> <p>Raspberry Pi 4B 4GB  rev 1.2</p> <pre><code>processor   : 3\nmodel name  : ARMv7 Processor rev 3 (v7l)\nBogoMIPS    : 108.00\nFeatures    : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 \nCPU implementer : 0x41\nCPU architecture: 7\nCPU variant : 0x0\nCPU part    : 0xd08\nCPU revision    : 3\n\nHardware    : BCM2711\nRevision    : c03112\nSerial      : 10000000717e4b0e\nModel       : Raspberry Pi 4 Model B Rev 1.2\n</code></pre> <p>Raspberry Pi 4B 8GB</p> <pre><code>processor   : 3\nmodel name  : ARMv7 Processor rev 3 (v7l)\nBogoMIPS    : 108.00\nFeatures    : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 \nCPU implementer : 0x41\nCPU architecture: 7\nCPU variant : 0x0\nCPU part    : 0xd08\nCPU revision    : 3\n\nHardware    : BCM2711\nRevision    : d03114\nSerial      : 1000000005056aef\nModel       : Raspberry Pi 4 Model B Rev 1.4\n</code></pre>"},{"location":"glossary/raspberry_pi/#1192020","title":"11/9/2020","text":"<p>Raspberry Pi 400</p> <pre><code>processor   : 3\nmodel name  : ARMv7 Processor rev 3 (v7l)\nBogoMIPS    : 324.00\nFeatures    : half thumb fastmult vfp edsp neon vfpv3 tls vfpv4 idiva idivt vfpd32 lpae evtstrm crc32 \nCPU implementer : 0sssssssssssssssssssssssssssssssssssssssssssssssx41\nCPU architecture: 7\nCPU variant : 0x0\nCPU part    : 0xd08\nCPU revision    : 3\n\nHardware    : BCM2711\nRevision    : c03130\nSerial      : 1000000045f95cf0\nModel       : Raspberry Pi 400 Rev 1.0\n</code></pre>"},{"location":"glossary/raspberry_pi/#references","title":"References","text":"<ul> <li> <p>Raspberry Pi Awesome list</p> </li> <li> <p>Raspberry Pi inventory tracker  As referenced from:</p> <ul> <li>https://www.jeffgeerling.com/blog/2022/its-dire-raspberry-pi-availability-tracker-launched</li> <li>https://news.ycombinator.com/item?id=30154141</li> </ul> </li> </ul>"},{"location":"glossary/raspberry_pi/#raspberry-pi-os","title":"Raspberry Pi OS","text":"<p>Raspberry Pi OS versions</p> Version Codename Debian release date RPi OS release date 9 Stretch June 2017 August 2017 10 Buster July 2019 July 2019 11 Bullseye August 2021 November 2021 12 Bookworm Expected in 2023 -"},{"location":"glossary/raspberry_pi/#raspberry-pi-camera","title":"Raspberry Pi Camera","text":"<p>https://www.raspberrypi.com/news/new-autofocus-camera-modules/ https://news.ycombinator.com/item?id=34307921 https://vilros.com/blogs/news/introducing-the-brand-new-raspberry-pi-camera-module-3-and-the-hq-m12 https://www.youtube.com/watch?v=1EIFfln3Kxs  1/9/2023 Raspberry Pi just announced the Camera Module 3. I built a camera based on @Kevin McAleer's PIKON design.</p> <p>This page was last updated on 2023-01-09 11:43:07 -0500.</p>"},{"location":"glossary/rp2040/","title":"RP2040","text":""},{"location":"glossary/rp2040/#back-to-index","title":"Back to Index","text":"<p>Related Microcontroller, Feather, QT Py, Itsy Bitsy, SBC</p> <p>WIP </p> <p>RP2040</p> <p>Raspberry Pi Foundation's first microcontroller  <code>Raspberry Pi Pico</code> and the chipset <code>RP2040</code>.</p> <p>Adafruit has a great walkthrough on how to get started with CircuitPython with Raspberry Pi Pico</p> <p>The <code>RP2040</code> chipset is used by other manufacturers to produce a whole range of new microcontrollers:</p> <ul> <li>Adafruit Feather RP2040</li> <li>Adafruit MacroPad</li> <li>Arduino Nano RP2040 Connect with headers</li> <li>Cytron Maker Nano RP2040</li> <li>Raspberry Pi Pico</li> <li>QT Py RP2040</li> </ul> <p>Here's a great write up of the best RP2040 boards in 2022:</p> <ul> <li>Best RP2040 boards 2022</li> </ul> <p>The Raspberry Pi Foundation is looking to get kids coding and learning electronics with Raspberry Pi Pico  https://projects.raspberrypi.org/en/pathways/pico-intro Now, thanks to our brand-new and free Introduction to Raspberry Pi Pico learning path, young coders can easily join in and make their own cool Pico projects! This free learning path has six guided projects to help kids to independently develop their coding skills, and their skills in physical computing and electronics.</p> <ul> <li>Raspberry Pi Pico W</li> </ul> <p>https://www.raspberrypi.com/news/how-to-run-a-webserver-on-raspberry-pi-pico-w/</p> <p>https://www.youtube.com/watch?v=CA2Pb9zGp4Q</p> <ul> <li> <p>Adafruit BLog: New Guide quick start Raspberry Pi Pico W WiFi with CircuitPython 10/15/2022</p> </li> <li> <p>Adafruit Blog: NEW GUIDE: Pico W HTTP Server with CircuitPython  11/9/2022</p> </li> <li> <p>Web server using a Raspberry Pi Pico W using Phew (micropython) - Kevin Mcleer 8/28/2022</p> </li> <li> <p>Adafruit Blog 1/5/2023: NEW GUIDE: Quick Start: Pico W with WipperSnapper</p> </li> <li> <p>Adafruit Blog 12/30/2022: Get a Raspberry Pi Pico pinout on the command line</p> </li> </ul> <p>-Raspberry Pi Pico is compared to the ESP32-S2 in a speed comparison benchmark using CircuitPython So the ESP32-S2 needs 128% more current to run the script, but for 50% less time. In total, the Raspberry Pi Pico needed 10% less power to perform this task, which is not significant in my opinion. In short, the ESP32-S2 outperforms the Raspberry Pi Pico for single-core processing workloads. It costs more or less the same, it\u2019s $1 more expensive, it has more RAM, Flash memory, and of course WiFi, which the Raspberry Pi Pico lacks. The Raspberry Pi Pico, on the other hand, has two processing cores, but I believe that in more than 90% of our projects, the use of a second core is unnecessary.</p> <ul> <li>The Raspberry Pi Pico W Has Connectivity Issues: Here's How to Fix Them</li> </ul> <p>This page was last updated on 2023-02-04 18:37:07 -0500.</p>"},{"location":"glossary/sbc/","title":"SBC - Single Board Computer","text":""},{"location":"glossary/sbc/#back-to-index","title":"Back to Index","text":"<p>Related Raspberry Pi, Microcontroller, Arduino, RP2040, Feather, QT Py, Itsy Bitsy, Metro, Teensy</p> <p>Great database of SBCs</p> <p>As mentioned at this blog post and featured on HackerNews</p> <p>WIP</p> <p>This page was last updated on 2022-11-16 12:25:07 -0500.</p>"},{"location":"glossary/shield/","title":"Shield","text":""},{"location":"glossary/shield/#back-to-index","title":"Back to Index","text":"<p>Related HAT, Arduino, Cape</p> <p>WIP</p> <p>Shields are add-ons for Arduino</p> <p>Example: Adafruit 16-Channel 12-bit PWM/Servo Shield - I2C interface  https://www.adafruit.com/product/1411</p> <p>This page was last updated on 2022-04-20 12:25:07 -0500.</p>"},{"location":"glossary/spi/","title":"SPI","text":""},{"location":"glossary/spi/#back-to-index","title":"Back to Index","text":"<p>Related I2C, QWIIC, STEMMA, STEMMA QT, What is the difference between Stemma and Stemma QT, GPIO</p> <p>WIP </p> <p>SPI</p>"},{"location":"glossary/spi/#raspberrypi-raspberry-pi-gpio-getting-started-with-gpiozero-2222020","title":"raspberrypi  Raspberry Pi GPIO - Getting started with gpiozero  2/22/2020","text":"<p>https://www.youtube.com/watch?v=iL_oZGHLHvU https://dronebotworkshop.com/raspberry-pi-gpio/ Use of Arduino is fine for most cases When you need more computational power, you may want to use a Raspberry Pi</p> <p>16:15 GPIO  Pins - Digital I/O  17:00 - Pins 3 &amp; 5 - I2C (I2C1 SDA (data), I2C1 SCL (clock))     Pins 8 &amp; 10 - Serial I/O    Pins 19, 21, 23, 24, 26 - SPI (Serial Peripheral Interface) NOTE: https://pinout.xyz/pinout/spi https://en.wikipedia.org/wiki/Serial_Peripheral_Interface</p>"},{"location":"glossary/spi/#electronics-serial-communication","title":"electronics serial communication","text":"<p>PROTOCOLS: UART - I2C - SPI - Serial communications #001 https://www.youtube.com/watch?v=IyGwvGzrqp8 http://electronoobs.com/eng_circuitos_tut36.php</p> <p>Additional References</p> <ol> <li>Adafruit Learn Guide: SPI devices</li> <li>CircuitPython Basics: I2C and SPI</li> <li>CircuitPython Basics: Digital Inputs &amp; Outputs</li> <li>CircuitPython Basics: Analog Inputs &amp; Outputs</li> <li>I2C addressing</li> </ol> <p>This page was last updated on 2022-02-23 11:15:07 -0500.</p>"},{"location":"glossary/teensy/","title":"Teensy","text":""},{"location":"glossary/teensy/#back-to-index","title":"Back to Index","text":"<p>Related Feather, QT Py, SBC</p> <p>Teensy</p> <p>Teensy 3.6 without headers https://www.adafruit.com/product/3266</p> <p>The awesome new Teensy 3.6 is a small, breadboard-friendly development board designed by Paul Stoffregen and PJRC. Teensy 3.6 brings a low-cost 32-bit ARM Cortex-M4 platform to hobbyists, students and engineers, using an adapted version of the Arduino IDE (Teensyduino) or programming directly in C language. Teensy 3.6 is an upgrade over 3.2 and 3.5, for when you need even more power!</p> <p>Version 3.6 features a 32 bit 180 MHz ARM Cortex-M4 processor with floating point unit. All digital and analog pins are 3.3 volts. </p> <p>WIP</p> <p>Official website</p> <p>Adafruit Blog: TEENSY Microcontroller As USB Audio Interface</p> <p>All3dp: The Best Arduino Alternatives of 2022</p> <p>This page was last updated on 2023-01-03 11:15:07 -0500.</p>"},{"location":"glossary/wippersnapper/","title":"WipperSnapper","text":""},{"location":"glossary/wippersnapper/#back-to-index","title":"Back to Index","text":"<p>Related Adafruit IO</p> <p>WipperSnapper</p> <p>WIP</p> <p>You can visit this page at any time by navigating to https://io.adafruit.com/wippersnapper.</p> <ul> <li> <p>Adafruit Youtube video 9/28/2021: Welcome to WipperSnapper</p> </li> <li> <p>IOT Climate Control with WipperSnapper 8/24/2022 Build an #IoT project and take control of it with Adafruit Wipper Snapper!  Connect I2C sensors to trigger a smart outlet whenever the humidity is too high!</p> </li> <li> <p>Adafuirt Blog 7/12/2021: WipperSnapper Beta</p> </li> <li> <p>Adafruit Learn Guide: Quickstart Adafruit IO WipperSnapper </p> </li> <li> <p>WipperSnapper Firmware Installer and Design Update The Adafruit IO team has a new update over on the IO Blog. It details a shiny new \u201cgetting started\u201d experience for WipperSnapper that\u2019s tailored to first-time IoT users, as well as a glittering trove of design updates.</p> </li> </ul> <p>Here\u2019s some details about how the onboarding process can help new users, from the post:</p> <ul> <li>plugging the board in with an appropriate cable</li> <li>downloading the latest, stable firmware version, built custom to your board</li> <li>a helpful reset timing animation for reliably entering bootloader mode</li> <li>setting up your secrets file (AIO Key embedded automatically!)</li> <li>understanding the pattern of blinking lights during firmware boot</li> </ul> <p>A bunch of menus, pages, and buttons had their designs refreshed as well, and this is just the beginning. Adafruit IO is getting a lot of love this year, stay tuned!</p> <ul> <li>WipperSnapper Overview page</li> <li>Compatible Boards</li> <li>Featured Sensors</li> <li>Learn Guides</li> </ul> <p>WipperSnapper Devices List Adafruit Blog 7/15/2022: UPDATED GUIDES: WipperSnapper Setup Pages </p> <p>Read the updated guides for the:</p> <p>Adafruit ESP32 Feather V2 Adafruit Feather HUZZAH32 Adafruit ESP32-S2 Feather Adafruit ESP32-S2 TFT Feather Adafruit ESP8266 Feather Adafruit QT Py ESP32 Pico Adafruit QT Py ESP32-S2, and Adafruit QT Py ESP32-S3!</p> <ul> <li>Adafruit Learn Guide: No-Code WipperSnapper Water Detection  (requires Adafruit IO+ subscription)</li> </ul> <p>Adafruit Youtube video 9/29/2021: I2C Scan with Adafruit.io WipperSnapper</p> <p>Adafruit Learn Guide: Digital Inputs with Adafruit IO WipperSnapper </p> <p>Adafruit Learn Guide: WipperSnapper Action Counter using funhouse</p> <p>Adafruit Youtube Video 1/12/2022: QT Py ESP32-S2 wipper snapper  (2minutes)  </p> <p>Adafruit Blog 2/14/2022: WipperSnapper No-Code IoT Platform now works with Adafruit Feather HUZZAH ESP8266</p> <p>Adafruit Blog 3/9/2022: WipperSnapper update - MCP9808 temperature sensor and Feahter ESP32v2</p> <p>Adafruit Blog 3/14/2022: WipperSnapper adds MCP9601 Thermocouple Amplifier Support</p> <p>Adafruit Blog 3/22/2022: WipperSnapper update - TSL2591 light sensor</p> <p>Adafruit Blog 3/23/2022: WipperSnapper update - AHT20 temperature and humidity sensor</p> <p>Adafruit Blog 3/25/2022: WipperSnapper update - Adafruit ESP32 Feather V2</p> <p>Adafruit Blog 3/29/2022: WipperSnapper update - Adafruit ESP32 Feather S2</p> <p>Adafruit Blog 5/9/2022: WipperSnapper update - Adafruit QT Py ESP32 S3</p> <p>Adafruit Blog 6/10/2022: WipperSnapper update - No-Code IoT for the Adafruit ESP32-S3 Feather and Adafruit ESP32-S3 TFT Feather</p> <p>Adafruit Blog 7/12/2022: WipperSnapper update - No-Code IoT for the Adafruit QT Py ESP32-C3</p> <p>Adafruit Blog 7/18/2022: WipperSnapper UPDATED GUIDE: Adafruit MCP9808 Precision I2C Temperature Sensor Wippersnapper Setup Page</p> <p>Adafruit Blog 7/20/2022: WipperSnapper UPDATED GUIDE: Adafruit BME280 Humidity + Barometric Pressure + Temperature Sensor Wippersnapper Setup Page</p> <p>Adafruit Blog 7/27/2022: WipperSnapper Updated Guides: MagTag, FunHouse, PyPortal, and ESP32-S3 Feather</p> <p>Adafruit Blog 7/28/2022: WipperSnapper Updated Guides: Adafruit SCD-30 \u2013 NDIR CO2 Temperature and Humidity Sensor Wippersnapper Setup Page</p> <p>Adafruit Blog 8/15/2022: WipperSnapper Updated Guides: Adafruit SCD-40 and SCD-41 Wippersnapper Setup Page</p> <p>Adafruit Blog 3/11/2022: Wipper Snapper - how to add a new component</p> <p>Adafruit Blog 5/9/2022: Wipper Snapper - how to add a new board</p> <p>Adafruit Blog 10/18/2022: Over 1000 IoT devices have connected to Adafruit.io</p> <p>Adafruit Blog 11/14/2022: UPDATED GUIDE: Using Servos with CircuitPython and Arduino Wippersnapper Setup Page</p> <p>Adafruit Blog 11/14/2022: UPDATED GUIDE: Adafruit LC709203F LiPoly / LiIon Fuel Gauge and Battery Monitor Wippersnapper Setup Page</p> <p>Adafruit Blog 11/14/2022: UPDATED GUIDE: Adafruit PMSA003I Air Quality Breakout Wippersnapper Setup Page</p> <p>Adafruit Blog 12/14/2022: WipperSnapper No-Code IoT Platform now works with the Raspberry Pi Pico W</p> <p>Adafruit Blog 12/22/2022: No-Code DS18B20 Temperature Sensor with WipperSnapper</p> <p>Adafruit Blog 1/5/2023: NEW GUIDE: Quick Start: Pico W with WipperSnapper</p> <p>Adafruit Blog 1/5/2023: NEW GUIDE: Using Piezo Buzzers with WipperSnapper</p> <p>Adafruit Blog 1/23/2023: Adafruit IO WipperSnapper Glows with NeoPixel and DotStar Support!</p> <p>Adafruit Blog 2/1/2023: NEW GUIDE: No-Code Battery Monitoring with WipperSnapper</p> <p>Adafruit Youtube video 2/22/2023: Adafruit IO WipperSnapper with NeoPixel and DotStar Support Build projects with NeoPixel or DotStar LEDs and WipperSnapper, Adafruit\u2019s No Code solution for IoT Projects.</p> <p>Adafruit Blog: UPDATED GUIDE: Adafruit Feather HUZZAH ESP8266 Wippersnapper Essentials section</p> <p>Adafruit Blog: UPDATED GUIDE: Adafruit MagTag Wippersnapper Essentials section</p> <p>Adafruit Blog: UPDATED GUIDE: Adafruit ESP32-S3</p> <p>Adafruit Blog: UPDATED GUIDE: Adafruit ESP32-S2</p> <p>Adafruit Blog: UPDATED GUIDE: Adafruit ESP32-S2 TFT Feather</p> <p>Adafruit Blog: UPDATED GUIDE: Adafruit ESP32 Feather V2</p> <p>Adafruit Blog: UPDATED GUIDE: Adafruit PyPortal</p> <p>[Adafruit Blog: WipperSnapper No-Code IoT Platform now works with the Adafruit ESP32-S3 Reverse TFT Feather</p> <p>[Adafruit Blog: WipperSnapper now supports 20 boards</p> <p>Adafruit Blog: UPDATED GUIDE: How to Add a New Board to Adafruit.io WipperSnapper</p> <p>Adafruit Blog: WipperSnapper adds Support for using the HTS221 Temperature Sensor without Writing Code</p> <p>Adafruit Blog: WipperSnapper adds Support for using the PCT2075 Temperature Sensor without Writing Code</p> <p>Adafruit Blog: WipperSnapper Adds Support for using the BH1750 Light Sensor without Writing Code</p> <p>Adafruit Blog: WipperSnapper Enables SGP30 Air Quality Sensor Breakout \u2013 VOC and eCO2 Support, No Coding Required</p> <p>Adafruit.io WipperSnapper Adds the BME688: No-Code Temperature, Humidity, Pressure, and Gas Sensing for your IoT Projects!</p> <p>Adafruit.io WipperSnapper Adds the BMP388 \u2013 Effortless Barometric Pressure and Altitude Measurements, No Coding Needed!</p> <p>WipperSnapper Enables BMP280 Sensor Breakout \u2013 Measure Barometric Pressure and Altitude , No Coding Required!</p> <p>WipperSnapper Adds TMP117 High Accuracy Temperature Sensor Support, No Coding Required!</p> <p>Adafruit.io WipperSnapper Adds Support for the LPS35HW Sensor: Take Environmental Readings for Your IoT Project in the Rain, No Coding Required!</p> <p>Adafruit.io WipperSnapper Adds Support for the BMP388 Sensor: Capture Environmental Data for Your IoT Project without Coding!</p> <p>Adafruit.io WipperSnapper Adds Support for the BMP280 Barometric Pressure &amp; Altitude Sensor</p> <p>Adafruit.io WipperSnapper Adds No-Code Support for the Temperature and Humidity Sensor</p> <p>WipperSnapper Updates Wednesday: Blockly Actions, New Sensors Supported, UART, and more! This past month, a lot has been going on with our Adafruit.io platform and WipperSnapper firmware since it\u2019s hard to keep track of everything! To address this, we, the Adafruit IO team, will publish bi-monthly (or monthly if we do not have enough news) \u201cWipperSnapper Updates Wednesday\u201d posts on the Adafruit Blog. This will help you stay informed about all the activities on this platform.</p> <p>Adafruit.io WipperSnapper Adds No-Code Support for the Sensirion SHT31-D \u2013 Acquire Temperature and Humidity Readings without Programming!</p> <p>No-Code Support for ST LPS25 on Adafruit.io WipperSnapper: Get Barometric Pressure and Temperature Readings Effortlessly!</p> <p>No-Code Support for SGP40 Air Quality Sensor with Adafruit.io WipperSnapper: Measure VOC Index Easily!</p> <p>No-Code Support for LPS22 Barometric Pressure and Temperature Sensor with Adafruit.io WipperSnapper</p> <p>No-Code Support for INA219 Current Sensor with Adafruit.io WipperSnapper: Measure high side voltage and DC current draw</p> <p>No-Code Support for ScioSense ENS160 MOX Gas Sensor on Adafruit.io WipperSnapper: Obtain VOC/Gas Readings Effortlessly!</p> <p>WipperSnapper Updates Wednesday: UART Support, Device Auto-Configuration, and New Sensors!</p> <p>No-Code Support for HTS221 with Adafruit.io WipperSnapper: Measure Temperature and Humidity Easily!</p> <p>Adafruit.io UPDATE: WipperSnapper Component Magic</p> <p>Adafruit.io WipperSnapper 1.0.0 Beta 74 Released!</p> <p>This page was last updated on 2023-12-13 14:57:07 -0500.</p>"},{"location":"hardware/","title":"Hardware","text":"<p>The Adafruit lingo for their hardware is quite extensive and can be confusing to someone new to the Adafruit ecosystem.  One of the primary goals of this website is to help newcomers sort through this cornicopia of terminology.</p> <p>Adafruit designs and sells their own custom microcontrollers, components, sensors, and more. </p>"},{"location":"hardware/#what-are-microcontrollers","title":"What are Microcontrollers?","text":"<p>Microcontrollers are single purpose computers </p> <ul> <li>small embedded development boards</li> <li>limited storage and memory</li> <li>limited processing power</li> </ul> <p>Microcontrollers vs General Purpose Computer</p> <ul> <li>Use of microcontrollers is fine for many cases</li> <li>When you need more computational power, you may want to use a Raspberry Pi<ul> <li>For example, if you wish to have a web dashboard to interface with, then you will need to use a Raspberry Pi</li> </ul> </li> </ul> <p>For more info, see the Glossary page for Microcontroller</p>"},{"location":"hardware/#recommended-first-adafruit-hardware-for-beginners","title":"Recommended: First Adafruit Hardware for Beginners","text":"<p>Note</p> <p>A Beginner's Recommendation.</p> <p>Circuit Playground Bluefruit</p> <p>Among the many Adafruit devices, the Circuit Playground Bluefruit is more accesible to beginners.  It is a great piece of hardware to start with.</p> <p>For more info, see the Glossary page for Circuit Playground Bluefruit</p>"},{"location":"hardware/#list-of-hardware-supported-by-circuitpython","title":"List of hardware supported by CircuitPython","text":"<p>List of all the hardware currently supported by CircuitPython (Adafruit and other manufacturers) is available at the CircuitPython Downloads Page.</p> <p>As of May 2022 </p> <ul> <li>There are over 300 boards supported by CircuitPython and that list grows everyday.</li> <li>The list is sorted by number of downloads.  <ul> <li>The most popular board -- the Raspberry Pi Pico -- is not manufactured by Adafruit.</li> </ul> </li> </ul>"},{"location":"hardware/#adafruit-hardware","title":"Adafruit Hardware","text":"<p>Adafruit offers over 70 different microcontrollers which run CircuitPython.</p>"},{"location":"hardware/#within-the-adafruit-ecosystem-the-primary-microcontroller-form-factors-are","title":"Within the Adafruit ecosystem, the primary microcontroller form factors are:","text":"<ul> <li>Circuit Playground </li> <li>Adafruit Feather (Regular)<ul> <li>Supported by an extensive array of expansion options called FeatherWings</li> </ul> </li> <li>ItsyBitsy (Small)</li> <li>QT Py (Tiny)</li> <li>Metro (Arduino form factor)</li> <li>Trinket (Mini microcontroller)</li> <li>Trinkey (Mini microcontroller in USB dongle form factor)</li> </ul>"},{"location":"hardware/#other-form-factors","title":"Other form factors:","text":"<ul> <li>CLUE</li> <li>Gemma M0 (tiny - great for wearble projects)</li> <li>Flora</li> <li>FunHouse (home automation)</li> <li>KB2040 (custom keyboards)</li> <li>MacroPad (custom macrokeypad)</li> <li>MagTag (e-ink display with WiFi)</li> <li>MatrixPortal (power LED Matrix displays - has WiFi)</li> <li>PyBadge/EdgeBadge/PyGamer </li> <li>PyPortal/PyPortal Titano (an IoT display)</li> <li>Trellis </li> <li>Trinket M0</li> <li>Trinkey</li> <li>Teensy</li> </ul>"},{"location":"hardware/#chipsets","title":"Chipsets","text":"<p>Most Adafruit devices use one of the following chipsets: </p> <ul> <li>SAMD21</li> <li>SAMD51</li> <li>ESP32-S2</li> <li>ESP32-S3</li> <li>ESP32-C3</li> <li>NRF52840</li> <li>RP2040</li> </ul> <p>There are features and advantages to each chipset, so there are often multiple versions of a particular Adafruit form factor based upon different chipsets.</p> <p>For example:</p> <ul> <li>Circuit Playground Versions</li> <li> <p>QT Py Versions</p> </li> <li> <p>In general would recommend new users to avoid SAMD21 microcontrollers</p> </li> </ul> <pre><code>The SAMD21 has limited flash space for including new features in CircuitPython. \nThe non-Express versions are extra crunched because 64k of the flash is used for the file system.\n</code></pre>"},{"location":"hardware/#expansion-options","title":"Expansion Options","text":"<p>Most microcontroller form factors have expansion boards which can extend functionality.</p> <p>These expansion boards are often given \"codenames\" such as \"FeatherWing\" or \"HAT\"</p> <p>There are a wide variety of names for add-on boards.</p> <ul> <li>Feather boards use FeatherWings</li> <li>Arduinos use Shields</li> <li>Raspberry Pi SBCs use HATs</li> <li>QT Py use BFFs</li> <li>BeagleBone boards use Capes</li> <li>Circuit Playground Express use Gizmos</li> <li>Raspberry Pi Pico use Bells</li> </ul> <p>Pretty Pins - pin out diagrams for Adafruit hardware</p> <p>CSV files for Adafruit pin out diagrams - only needed to be done once per chip</p>"},{"location":"hardware/#choosing-a-board","title":"Choosing a Board","text":"<p>Go to Choosing a Board</p> <p>This page was last updated on 2022-07-19 13:03:07 -0500.</p>"},{"location":"hardware/choosing_a_board/","title":"Choosing a board","text":""},{"location":"hardware/choosing_a_board/#back-to-hardware-overview","title":"Back to Hardware Overview","text":"<p>Related Grove, JST, QWIIC, Stemma, Stemma QT, What is the difference between Stemma and Stemma QT</p>"},{"location":"hardware/choosing_a_board/#adafruit-learn-guides-on-choosing-a-microcontroller","title":"Adafruit Learn Guides on choosing a microcontroller","text":"<p>Here are some great Adafruit guides on how to choose a microcontroller:</p> <ul> <li>Adafruit Learn Guide: Which CircuitPython board is right for you?</li> <li>Adafruit Learn Guide: How to choose a microcontroller</li> <li>Adafruit Learn Guide: Best Beginner Boards for Teachers</li> </ul>"},{"location":"hardware/choosing_a_board/#considerations-for-choosing-a-board","title":"Considerations for Choosing a Board","text":"<p>There are many features to consider when choosing a board</p> <ul> <li>What Software is supported<ul> <li>CircuitPython</li> <li>Arduino</li> <li>MakeCode</li> </ul> </li> <li>Wireless <ul> <li>WiFi </li> <li>Bluetooth</li> </ul> </li> <li>Connectors <ul> <li>Solderless <ul> <li>STEMMA, STEMMA QT, etc</li> <li>Alligator Clips</li> <li>Bolt on kit for Circuit Playground or Gemma</li> </ul> </li> <li>Headers <ul> <li>Breadboard</li> <li>Stacking Headers</li> </ul> </li> </ul> </li> <li>Size</li> <li>Expansion</li> <li>Battery and Pass-thru chargning</li> <li>Cabling</li> <li>Price </li> <li>Power</li> </ul> <p>Reference: Youtube video: CircuitPython School - Choosing a Board for CircuitPython: A Few Important Considerations</p> <ul> <li>Minute 4:00 - Arduino Nano RP2040 Connect Pros and Cons listed</li> <li>Minute 6:15 Stemma-QT is discussed</li> <li>Minute 8:49 Stemma standard is discussed - not plug-compatible with Stemma-QT</li> <li>Minute 10:30 - Feather RP2040 Pros and Cons listed</li> <li>Minute 11:19 - QT Py RP2040 Pros and Cons listed</li> <li>Minute 12:19 Microcontrollers vs \"Computers\"</li> </ul> <p>Youtube video: CircuitPython School - Adding STEMMA QT_Qwiic to an Arduino RP2040 + Using a Temperature Sensor</p> <ul> <li>Minute 0:57  Stemma QT recap</li> <li>Minute 1:42  Lists some boards which have STEMMA-QT ports</li> </ul>"},{"location":"hardware/choosing_a_board/#connectors","title":"Connectors","text":"<p>Explore what is STEMMA or STEMMA QT</p> <p>Go to Connectors</p> Go to Connectors <p>CircuitPython components for beginners</p> <ul> <li>sensors - temperature, light, sound, proximity</li> <li>RFID, NFC, PIR </li> <li>Rotary encoders</li> <li>Potentiometers</li> <li>buttons</li> <li>relays</li> <li>cameras</li> <li>displays</li> </ul> <p>Digi-Key and Make: Announce New Boards Guide and Companion Augmented Reality App</p> <p>This page was last updated on 2023-02-20 13:15:07 -0500.</p>"}]}